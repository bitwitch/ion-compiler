func main(argc: int, argv: char**): int { return 0; }

func example_test0(): int {
    return fact_rec0(10) == fact_iter0(10);
}

union IntOrPtr0 {
    i: int;
    p: int*;
}

// func f0() {
//    u1 := IntOrPtr0{i = 42};
//    u2 := IntOrPtr0{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i0: int;

struct Vector0 {
    x: int;
    y: int;
}

func fact_iter0(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec0(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec0(n-1);
    }
}

const n0 = 1 + sizeof(p0);

var p0: T0*;

struct T0 {
    a: int[n0];
}


func example_test1(): int {
    return fact_rec1(10) == fact_iter1(10);
}

union IntOrPtr1 {
    i: int;
    p: int*;
}

// func f1() {
//    u1 := IntOrPtr1{i = 42};
//    u2 := IntOrPtr1{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1: int;

struct Vector1 {
    x: int;
    y: int;
}

func fact_iter1(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1(n-1);
    }
}

const n1 = 1 + sizeof(p1);

var p1: T1*;

struct T1 {
    a: int[n1];
}


func example_test2(): int {
    return fact_rec2(10) == fact_iter2(10);
}

union IntOrPtr2 {
    i: int;
    p: int*;
}

// func f2() {
//    u1 := IntOrPtr2{i = 42};
//    u2 := IntOrPtr2{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2: int;

struct Vector2 {
    x: int;
    y: int;
}

func fact_iter2(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2(n-1);
    }
}

const n2 = 1 + sizeof(p2);

var p2: T2*;

struct T2 {
    a: int[n2];
}


func example_test3(): int {
    return fact_rec3(10) == fact_iter3(10);
}

union IntOrPtr3 {
    i: int;
    p: int*;
}

// func f3() {
//    u1 := IntOrPtr3{i = 42};
//    u2 := IntOrPtr3{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i3: int;

struct Vector3 {
    x: int;
    y: int;
}

func fact_iter3(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec3(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec3(n-1);
    }
}

const n3 = 1 + sizeof(p3);

var p3: T3*;

struct T3 {
    a: int[n3];
}


func example_test4(): int {
    return fact_rec4(10) == fact_iter4(10);
}

union IntOrPtr4 {
    i: int;
    p: int*;
}

// func f4() {
//    u1 := IntOrPtr4{i = 42};
//    u2 := IntOrPtr4{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i4: int;

struct Vector4 {
    x: int;
    y: int;
}

func fact_iter4(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec4(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec4(n-1);
    }
}

const n4 = 1 + sizeof(p4);

var p4: T4*;

struct T4 {
    a: int[n4];
}


func example_test5(): int {
    return fact_rec5(10) == fact_iter5(10);
}

union IntOrPtr5 {
    i: int;
    p: int*;
}

// func f5() {
//    u1 := IntOrPtr5{i = 42};
//    u2 := IntOrPtr5{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i5: int;

struct Vector5 {
    x: int;
    y: int;
}

func fact_iter5(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec5(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec5(n-1);
    }
}

const n5 = 1 + sizeof(p5);

var p5: T5*;

struct T5 {
    a: int[n5];
}


func example_test6(): int {
    return fact_rec6(10) == fact_iter6(10);
}

union IntOrPtr6 {
    i: int;
    p: int*;
}

// func f6() {
//    u1 := IntOrPtr6{i = 42};
//    u2 := IntOrPtr6{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i6: int;

struct Vector6 {
    x: int;
    y: int;
}

func fact_iter6(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec6(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec6(n-1);
    }
}

const n6 = 1 + sizeof(p6);

var p6: T6*;

struct T6 {
    a: int[n6];
}


func example_test7(): int {
    return fact_rec7(10) == fact_iter7(10);
}

union IntOrPtr7 {
    i: int;
    p: int*;
}

// func f7() {
//    u1 := IntOrPtr7{i = 42};
//    u2 := IntOrPtr7{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i7: int;

struct Vector7 {
    x: int;
    y: int;
}

func fact_iter7(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec7(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec7(n-1);
    }
}

const n7 = 1 + sizeof(p7);

var p7: T7*;

struct T7 {
    a: int[n7];
}


func example_test8(): int {
    return fact_rec8(10) == fact_iter8(10);
}

union IntOrPtr8 {
    i: int;
    p: int*;
}

// func f8() {
//    u1 := IntOrPtr8{i = 42};
//    u2 := IntOrPtr8{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i8: int;

struct Vector8 {
    x: int;
    y: int;
}

func fact_iter8(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec8(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec8(n-1);
    }
}

const n8 = 1 + sizeof(p8);

var p8: T8*;

struct T8 {
    a: int[n8];
}


func example_test9(): int {
    return fact_rec9(10) == fact_iter9(10);
}

union IntOrPtr9 {
    i: int;
    p: int*;
}

// func f9() {
//    u1 := IntOrPtr9{i = 42};
//    u2 := IntOrPtr9{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i9: int;

struct Vector9 {
    x: int;
    y: int;
}

func fact_iter9(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec9(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec9(n-1);
    }
}

const n9 = 1 + sizeof(p9);

var p9: T9*;

struct T9 {
    a: int[n9];
}


func example_test10(): int {
    return fact_rec10(10) == fact_iter10(10);
}

union IntOrPtr10 {
    i: int;
    p: int*;
}

// func f10() {
//    u1 := IntOrPtr10{i = 42};
//    u2 := IntOrPtr10{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i10: int;

struct Vector10 {
    x: int;
    y: int;
}

func fact_iter10(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec10(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec10(n-1);
    }
}

const n10 = 1 + sizeof(p10);

var p10: T10*;

struct T10 {
    a: int[n10];
}


func example_test11(): int {
    return fact_rec11(10) == fact_iter11(10);
}

union IntOrPtr11 {
    i: int;
    p: int*;
}

// func f11() {
//    u1 := IntOrPtr11{i = 42};
//    u2 := IntOrPtr11{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i11: int;

struct Vector11 {
    x: int;
    y: int;
}

func fact_iter11(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec11(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec11(n-1);
    }
}

const n11 = 1 + sizeof(p11);

var p11: T11*;

struct T11 {
    a: int[n11];
}


func example_test12(): int {
    return fact_rec12(10) == fact_iter12(10);
}

union IntOrPtr12 {
    i: int;
    p: int*;
}

// func f12() {
//    u1 := IntOrPtr12{i = 42};
//    u2 := IntOrPtr12{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i12: int;

struct Vector12 {
    x: int;
    y: int;
}

func fact_iter12(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec12(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec12(n-1);
    }
}

const n12 = 1 + sizeof(p12);

var p12: T12*;

struct T12 {
    a: int[n12];
}


func example_test13(): int {
    return fact_rec13(10) == fact_iter13(10);
}

union IntOrPtr13 {
    i: int;
    p: int*;
}

// func f13() {
//    u1 := IntOrPtr13{i = 42};
//    u2 := IntOrPtr13{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i13: int;

struct Vector13 {
    x: int;
    y: int;
}

func fact_iter13(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec13(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec13(n-1);
    }
}

const n13 = 1 + sizeof(p13);

var p13: T13*;

struct T13 {
    a: int[n13];
}


func example_test14(): int {
    return fact_rec14(10) == fact_iter14(10);
}

union IntOrPtr14 {
    i: int;
    p: int*;
}

// func f14() {
//    u1 := IntOrPtr14{i = 42};
//    u2 := IntOrPtr14{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i14: int;

struct Vector14 {
    x: int;
    y: int;
}

func fact_iter14(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec14(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec14(n-1);
    }
}

const n14 = 1 + sizeof(p14);

var p14: T14*;

struct T14 {
    a: int[n14];
}


func example_test15(): int {
    return fact_rec15(10) == fact_iter15(10);
}

union IntOrPtr15 {
    i: int;
    p: int*;
}

// func f15() {
//    u1 := IntOrPtr15{i = 42};
//    u2 := IntOrPtr15{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i15: int;

struct Vector15 {
    x: int;
    y: int;
}

func fact_iter15(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec15(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec15(n-1);
    }
}

const n15 = 1 + sizeof(p15);

var p15: T15*;

struct T15 {
    a: int[n15];
}


func example_test16(): int {
    return fact_rec16(10) == fact_iter16(10);
}

union IntOrPtr16 {
    i: int;
    p: int*;
}

// func f16() {
//    u1 := IntOrPtr16{i = 42};
//    u2 := IntOrPtr16{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i16: int;

struct Vector16 {
    x: int;
    y: int;
}

func fact_iter16(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec16(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec16(n-1);
    }
}

const n16 = 1 + sizeof(p16);

var p16: T16*;

struct T16 {
    a: int[n16];
}


func example_test17(): int {
    return fact_rec17(10) == fact_iter17(10);
}

union IntOrPtr17 {
    i: int;
    p: int*;
}

// func f17() {
//    u1 := IntOrPtr17{i = 42};
//    u2 := IntOrPtr17{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i17: int;

struct Vector17 {
    x: int;
    y: int;
}

func fact_iter17(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec17(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec17(n-1);
    }
}

const n17 = 1 + sizeof(p17);

var p17: T17*;

struct T17 {
    a: int[n17];
}


func example_test18(): int {
    return fact_rec18(10) == fact_iter18(10);
}

union IntOrPtr18 {
    i: int;
    p: int*;
}

// func f18() {
//    u1 := IntOrPtr18{i = 42};
//    u2 := IntOrPtr18{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i18: int;

struct Vector18 {
    x: int;
    y: int;
}

func fact_iter18(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec18(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec18(n-1);
    }
}

const n18 = 1 + sizeof(p18);

var p18: T18*;

struct T18 {
    a: int[n18];
}


func example_test19(): int {
    return fact_rec19(10) == fact_iter19(10);
}

union IntOrPtr19 {
    i: int;
    p: int*;
}

// func f19() {
//    u1 := IntOrPtr19{i = 42};
//    u2 := IntOrPtr19{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i19: int;

struct Vector19 {
    x: int;
    y: int;
}

func fact_iter19(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec19(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec19(n-1);
    }
}

const n19 = 1 + sizeof(p19);

var p19: T19*;

struct T19 {
    a: int[n19];
}


func example_test20(): int {
    return fact_rec20(10) == fact_iter20(10);
}

union IntOrPtr20 {
    i: int;
    p: int*;
}

// func f20() {
//    u1 := IntOrPtr20{i = 42};
//    u2 := IntOrPtr20{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i20: int;

struct Vector20 {
    x: int;
    y: int;
}

func fact_iter20(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec20(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec20(n-1);
    }
}

const n20 = 1 + sizeof(p20);

var p20: T20*;

struct T20 {
    a: int[n20];
}


func example_test21(): int {
    return fact_rec21(10) == fact_iter21(10);
}

union IntOrPtr21 {
    i: int;
    p: int*;
}

// func f21() {
//    u1 := IntOrPtr21{i = 42};
//    u2 := IntOrPtr21{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i21: int;

struct Vector21 {
    x: int;
    y: int;
}

func fact_iter21(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec21(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec21(n-1);
    }
}

const n21 = 1 + sizeof(p21);

var p21: T21*;

struct T21 {
    a: int[n21];
}


func example_test22(): int {
    return fact_rec22(10) == fact_iter22(10);
}

union IntOrPtr22 {
    i: int;
    p: int*;
}

// func f22() {
//    u1 := IntOrPtr22{i = 42};
//    u2 := IntOrPtr22{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i22: int;

struct Vector22 {
    x: int;
    y: int;
}

func fact_iter22(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec22(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec22(n-1);
    }
}

const n22 = 1 + sizeof(p22);

var p22: T22*;

struct T22 {
    a: int[n22];
}


func example_test23(): int {
    return fact_rec23(10) == fact_iter23(10);
}

union IntOrPtr23 {
    i: int;
    p: int*;
}

// func f23() {
//    u1 := IntOrPtr23{i = 42};
//    u2 := IntOrPtr23{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i23: int;

struct Vector23 {
    x: int;
    y: int;
}

func fact_iter23(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec23(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec23(n-1);
    }
}

const n23 = 1 + sizeof(p23);

var p23: T23*;

struct T23 {
    a: int[n23];
}


func example_test24(): int {
    return fact_rec24(10) == fact_iter24(10);
}

union IntOrPtr24 {
    i: int;
    p: int*;
}

// func f24() {
//    u1 := IntOrPtr24{i = 42};
//    u2 := IntOrPtr24{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i24: int;

struct Vector24 {
    x: int;
    y: int;
}

func fact_iter24(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec24(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec24(n-1);
    }
}

const n24 = 1 + sizeof(p24);

var p24: T24*;

struct T24 {
    a: int[n24];
}


func example_test25(): int {
    return fact_rec25(10) == fact_iter25(10);
}

union IntOrPtr25 {
    i: int;
    p: int*;
}

// func f25() {
//    u1 := IntOrPtr25{i = 42};
//    u2 := IntOrPtr25{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i25: int;

struct Vector25 {
    x: int;
    y: int;
}

func fact_iter25(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec25(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec25(n-1);
    }
}

const n25 = 1 + sizeof(p25);

var p25: T25*;

struct T25 {
    a: int[n25];
}


func example_test26(): int {
    return fact_rec26(10) == fact_iter26(10);
}

union IntOrPtr26 {
    i: int;
    p: int*;
}

// func f26() {
//    u1 := IntOrPtr26{i = 42};
//    u2 := IntOrPtr26{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i26: int;

struct Vector26 {
    x: int;
    y: int;
}

func fact_iter26(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec26(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec26(n-1);
    }
}

const n26 = 1 + sizeof(p26);

var p26: T26*;

struct T26 {
    a: int[n26];
}


func example_test27(): int {
    return fact_rec27(10) == fact_iter27(10);
}

union IntOrPtr27 {
    i: int;
    p: int*;
}

// func f27() {
//    u1 := IntOrPtr27{i = 42};
//    u2 := IntOrPtr27{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i27: int;

struct Vector27 {
    x: int;
    y: int;
}

func fact_iter27(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec27(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec27(n-1);
    }
}

const n27 = 1 + sizeof(p27);

var p27: T27*;

struct T27 {
    a: int[n27];
}


func example_test28(): int {
    return fact_rec28(10) == fact_iter28(10);
}

union IntOrPtr28 {
    i: int;
    p: int*;
}

// func f28() {
//    u1 := IntOrPtr28{i = 42};
//    u2 := IntOrPtr28{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i28: int;

struct Vector28 {
    x: int;
    y: int;
}

func fact_iter28(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec28(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec28(n-1);
    }
}

const n28 = 1 + sizeof(p28);

var p28: T28*;

struct T28 {
    a: int[n28];
}


func example_test29(): int {
    return fact_rec29(10) == fact_iter29(10);
}

union IntOrPtr29 {
    i: int;
    p: int*;
}

// func f29() {
//    u1 := IntOrPtr29{i = 42};
//    u2 := IntOrPtr29{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i29: int;

struct Vector29 {
    x: int;
    y: int;
}

func fact_iter29(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec29(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec29(n-1);
    }
}

const n29 = 1 + sizeof(p29);

var p29: T29*;

struct T29 {
    a: int[n29];
}


func example_test30(): int {
    return fact_rec30(10) == fact_iter30(10);
}

union IntOrPtr30 {
    i: int;
    p: int*;
}

// func f30() {
//    u1 := IntOrPtr30{i = 42};
//    u2 := IntOrPtr30{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i30: int;

struct Vector30 {
    x: int;
    y: int;
}

func fact_iter30(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec30(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec30(n-1);
    }
}

const n30 = 1 + sizeof(p30);

var p30: T30*;

struct T30 {
    a: int[n30];
}


func example_test31(): int {
    return fact_rec31(10) == fact_iter31(10);
}

union IntOrPtr31 {
    i: int;
    p: int*;
}

// func f31() {
//    u1 := IntOrPtr31{i = 42};
//    u2 := IntOrPtr31{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i31: int;

struct Vector31 {
    x: int;
    y: int;
}

func fact_iter31(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec31(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec31(n-1);
    }
}

const n31 = 1 + sizeof(p31);

var p31: T31*;

struct T31 {
    a: int[n31];
}


func example_test32(): int {
    return fact_rec32(10) == fact_iter32(10);
}

union IntOrPtr32 {
    i: int;
    p: int*;
}

// func f32() {
//    u1 := IntOrPtr32{i = 42};
//    u2 := IntOrPtr32{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i32: int;

struct Vector32 {
    x: int;
    y: int;
}

func fact_iter32(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec32(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec32(n-1);
    }
}

const n32 = 1 + sizeof(p32);

var p32: T32*;

struct T32 {
    a: int[n32];
}


func example_test33(): int {
    return fact_rec33(10) == fact_iter33(10);
}

union IntOrPtr33 {
    i: int;
    p: int*;
}

// func f33() {
//    u1 := IntOrPtr33{i = 42};
//    u2 := IntOrPtr33{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i33: int;

struct Vector33 {
    x: int;
    y: int;
}

func fact_iter33(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec33(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec33(n-1);
    }
}

const n33 = 1 + sizeof(p33);

var p33: T33*;

struct T33 {
    a: int[n33];
}


func example_test34(): int {
    return fact_rec34(10) == fact_iter34(10);
}

union IntOrPtr34 {
    i: int;
    p: int*;
}

// func f34() {
//    u1 := IntOrPtr34{i = 42};
//    u2 := IntOrPtr34{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i34: int;

struct Vector34 {
    x: int;
    y: int;
}

func fact_iter34(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec34(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec34(n-1);
    }
}

const n34 = 1 + sizeof(p34);

var p34: T34*;

struct T34 {
    a: int[n34];
}


func example_test35(): int {
    return fact_rec35(10) == fact_iter35(10);
}

union IntOrPtr35 {
    i: int;
    p: int*;
}

// func f35() {
//    u1 := IntOrPtr35{i = 42};
//    u2 := IntOrPtr35{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i35: int;

struct Vector35 {
    x: int;
    y: int;
}

func fact_iter35(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec35(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec35(n-1);
    }
}

const n35 = 1 + sizeof(p35);

var p35: T35*;

struct T35 {
    a: int[n35];
}


func example_test36(): int {
    return fact_rec36(10) == fact_iter36(10);
}

union IntOrPtr36 {
    i: int;
    p: int*;
}

// func f36() {
//    u1 := IntOrPtr36{i = 42};
//    u2 := IntOrPtr36{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i36: int;

struct Vector36 {
    x: int;
    y: int;
}

func fact_iter36(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec36(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec36(n-1);
    }
}

const n36 = 1 + sizeof(p36);

var p36: T36*;

struct T36 {
    a: int[n36];
}


func example_test37(): int {
    return fact_rec37(10) == fact_iter37(10);
}

union IntOrPtr37 {
    i: int;
    p: int*;
}

// func f37() {
//    u1 := IntOrPtr37{i = 42};
//    u2 := IntOrPtr37{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i37: int;

struct Vector37 {
    x: int;
    y: int;
}

func fact_iter37(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec37(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec37(n-1);
    }
}

const n37 = 1 + sizeof(p37);

var p37: T37*;

struct T37 {
    a: int[n37];
}


func example_test38(): int {
    return fact_rec38(10) == fact_iter38(10);
}

union IntOrPtr38 {
    i: int;
    p: int*;
}

// func f38() {
//    u1 := IntOrPtr38{i = 42};
//    u2 := IntOrPtr38{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i38: int;

struct Vector38 {
    x: int;
    y: int;
}

func fact_iter38(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec38(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec38(n-1);
    }
}

const n38 = 1 + sizeof(p38);

var p38: T38*;

struct T38 {
    a: int[n38];
}


func example_test39(): int {
    return fact_rec39(10) == fact_iter39(10);
}

union IntOrPtr39 {
    i: int;
    p: int*;
}

// func f39() {
//    u1 := IntOrPtr39{i = 42};
//    u2 := IntOrPtr39{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i39: int;

struct Vector39 {
    x: int;
    y: int;
}

func fact_iter39(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec39(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec39(n-1);
    }
}

const n39 = 1 + sizeof(p39);

var p39: T39*;

struct T39 {
    a: int[n39];
}


func example_test40(): int {
    return fact_rec40(10) == fact_iter40(10);
}

union IntOrPtr40 {
    i: int;
    p: int*;
}

// func f40() {
//    u1 := IntOrPtr40{i = 42};
//    u2 := IntOrPtr40{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i40: int;

struct Vector40 {
    x: int;
    y: int;
}

func fact_iter40(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec40(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec40(n-1);
    }
}

const n40 = 1 + sizeof(p40);

var p40: T40*;

struct T40 {
    a: int[n40];
}


func example_test41(): int {
    return fact_rec41(10) == fact_iter41(10);
}

union IntOrPtr41 {
    i: int;
    p: int*;
}

// func f41() {
//    u1 := IntOrPtr41{i = 42};
//    u2 := IntOrPtr41{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i41: int;

struct Vector41 {
    x: int;
    y: int;
}

func fact_iter41(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec41(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec41(n-1);
    }
}

const n41 = 1 + sizeof(p41);

var p41: T41*;

struct T41 {
    a: int[n41];
}


func example_test42(): int {
    return fact_rec42(10) == fact_iter42(10);
}

union IntOrPtr42 {
    i: int;
    p: int*;
}

// func f42() {
//    u1 := IntOrPtr42{i = 42};
//    u2 := IntOrPtr42{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i42: int;

struct Vector42 {
    x: int;
    y: int;
}

func fact_iter42(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec42(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec42(n-1);
    }
}

const n42 = 1 + sizeof(p42);

var p42: T42*;

struct T42 {
    a: int[n42];
}


func example_test43(): int {
    return fact_rec43(10) == fact_iter43(10);
}

union IntOrPtr43 {
    i: int;
    p: int*;
}

// func f43() {
//    u1 := IntOrPtr43{i = 42};
//    u2 := IntOrPtr43{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i43: int;

struct Vector43 {
    x: int;
    y: int;
}

func fact_iter43(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec43(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec43(n-1);
    }
}

const n43 = 1 + sizeof(p43);

var p43: T43*;

struct T43 {
    a: int[n43];
}


func example_test44(): int {
    return fact_rec44(10) == fact_iter44(10);
}

union IntOrPtr44 {
    i: int;
    p: int*;
}

// func f44() {
//    u1 := IntOrPtr44{i = 42};
//    u2 := IntOrPtr44{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i44: int;

struct Vector44 {
    x: int;
    y: int;
}

func fact_iter44(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec44(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec44(n-1);
    }
}

const n44 = 1 + sizeof(p44);

var p44: T44*;

struct T44 {
    a: int[n44];
}


func example_test45(): int {
    return fact_rec45(10) == fact_iter45(10);
}

union IntOrPtr45 {
    i: int;
    p: int*;
}

// func f45() {
//    u1 := IntOrPtr45{i = 42};
//    u2 := IntOrPtr45{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i45: int;

struct Vector45 {
    x: int;
    y: int;
}

func fact_iter45(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec45(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec45(n-1);
    }
}

const n45 = 1 + sizeof(p45);

var p45: T45*;

struct T45 {
    a: int[n45];
}


func example_test46(): int {
    return fact_rec46(10) == fact_iter46(10);
}

union IntOrPtr46 {
    i: int;
    p: int*;
}

// func f46() {
//    u1 := IntOrPtr46{i = 42};
//    u2 := IntOrPtr46{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i46: int;

struct Vector46 {
    x: int;
    y: int;
}

func fact_iter46(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec46(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec46(n-1);
    }
}

const n46 = 1 + sizeof(p46);

var p46: T46*;

struct T46 {
    a: int[n46];
}


func example_test47(): int {
    return fact_rec47(10) == fact_iter47(10);
}

union IntOrPtr47 {
    i: int;
    p: int*;
}

// func f47() {
//    u1 := IntOrPtr47{i = 42};
//    u2 := IntOrPtr47{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i47: int;

struct Vector47 {
    x: int;
    y: int;
}

func fact_iter47(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec47(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec47(n-1);
    }
}

const n47 = 1 + sizeof(p47);

var p47: T47*;

struct T47 {
    a: int[n47];
}


func example_test48(): int {
    return fact_rec48(10) == fact_iter48(10);
}

union IntOrPtr48 {
    i: int;
    p: int*;
}

// func f48() {
//    u1 := IntOrPtr48{i = 42};
//    u2 := IntOrPtr48{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i48: int;

struct Vector48 {
    x: int;
    y: int;
}

func fact_iter48(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec48(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec48(n-1);
    }
}

const n48 = 1 + sizeof(p48);

var p48: T48*;

struct T48 {
    a: int[n48];
}


func example_test49(): int {
    return fact_rec49(10) == fact_iter49(10);
}

union IntOrPtr49 {
    i: int;
    p: int*;
}

// func f49() {
//    u1 := IntOrPtr49{i = 42};
//    u2 := IntOrPtr49{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i49: int;

struct Vector49 {
    x: int;
    y: int;
}

func fact_iter49(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec49(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec49(n-1);
    }
}

const n49 = 1 + sizeof(p49);

var p49: T49*;

struct T49 {
    a: int[n49];
}


func example_test50(): int {
    return fact_rec50(10) == fact_iter50(10);
}

union IntOrPtr50 {
    i: int;
    p: int*;
}

// func f50() {
//    u1 := IntOrPtr50{i = 42};
//    u2 := IntOrPtr50{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i50: int;

struct Vector50 {
    x: int;
    y: int;
}

func fact_iter50(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec50(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec50(n-1);
    }
}

const n50 = 1 + sizeof(p50);

var p50: T50*;

struct T50 {
    a: int[n50];
}


func example_test51(): int {
    return fact_rec51(10) == fact_iter51(10);
}

union IntOrPtr51 {
    i: int;
    p: int*;
}

// func f51() {
//    u1 := IntOrPtr51{i = 42};
//    u2 := IntOrPtr51{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i51: int;

struct Vector51 {
    x: int;
    y: int;
}

func fact_iter51(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec51(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec51(n-1);
    }
}

const n51 = 1 + sizeof(p51);

var p51: T51*;

struct T51 {
    a: int[n51];
}


func example_test52(): int {
    return fact_rec52(10) == fact_iter52(10);
}

union IntOrPtr52 {
    i: int;
    p: int*;
}

// func f52() {
//    u1 := IntOrPtr52{i = 42};
//    u2 := IntOrPtr52{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i52: int;

struct Vector52 {
    x: int;
    y: int;
}

func fact_iter52(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec52(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec52(n-1);
    }
}

const n52 = 1 + sizeof(p52);

var p52: T52*;

struct T52 {
    a: int[n52];
}


func example_test53(): int {
    return fact_rec53(10) == fact_iter53(10);
}

union IntOrPtr53 {
    i: int;
    p: int*;
}

// func f53() {
//    u1 := IntOrPtr53{i = 42};
//    u2 := IntOrPtr53{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i53: int;

struct Vector53 {
    x: int;
    y: int;
}

func fact_iter53(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec53(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec53(n-1);
    }
}

const n53 = 1 + sizeof(p53);

var p53: T53*;

struct T53 {
    a: int[n53];
}


func example_test54(): int {
    return fact_rec54(10) == fact_iter54(10);
}

union IntOrPtr54 {
    i: int;
    p: int*;
}

// func f54() {
//    u1 := IntOrPtr54{i = 42};
//    u2 := IntOrPtr54{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i54: int;

struct Vector54 {
    x: int;
    y: int;
}

func fact_iter54(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec54(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec54(n-1);
    }
}

const n54 = 1 + sizeof(p54);

var p54: T54*;

struct T54 {
    a: int[n54];
}


func example_test55(): int {
    return fact_rec55(10) == fact_iter55(10);
}

union IntOrPtr55 {
    i: int;
    p: int*;
}

// func f55() {
//    u1 := IntOrPtr55{i = 42};
//    u2 := IntOrPtr55{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i55: int;

struct Vector55 {
    x: int;
    y: int;
}

func fact_iter55(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec55(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec55(n-1);
    }
}

const n55 = 1 + sizeof(p55);

var p55: T55*;

struct T55 {
    a: int[n55];
}


func example_test56(): int {
    return fact_rec56(10) == fact_iter56(10);
}

union IntOrPtr56 {
    i: int;
    p: int*;
}

// func f56() {
//    u1 := IntOrPtr56{i = 42};
//    u2 := IntOrPtr56{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i56: int;

struct Vector56 {
    x: int;
    y: int;
}

func fact_iter56(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec56(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec56(n-1);
    }
}

const n56 = 1 + sizeof(p56);

var p56: T56*;

struct T56 {
    a: int[n56];
}


func example_test57(): int {
    return fact_rec57(10) == fact_iter57(10);
}

union IntOrPtr57 {
    i: int;
    p: int*;
}

// func f57() {
//    u1 := IntOrPtr57{i = 42};
//    u2 := IntOrPtr57{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i57: int;

struct Vector57 {
    x: int;
    y: int;
}

func fact_iter57(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec57(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec57(n-1);
    }
}

const n57 = 1 + sizeof(p57);

var p57: T57*;

struct T57 {
    a: int[n57];
}


func example_test58(): int {
    return fact_rec58(10) == fact_iter58(10);
}

union IntOrPtr58 {
    i: int;
    p: int*;
}

// func f58() {
//    u1 := IntOrPtr58{i = 42};
//    u2 := IntOrPtr58{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i58: int;

struct Vector58 {
    x: int;
    y: int;
}

func fact_iter58(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec58(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec58(n-1);
    }
}

const n58 = 1 + sizeof(p58);

var p58: T58*;

struct T58 {
    a: int[n58];
}


func example_test59(): int {
    return fact_rec59(10) == fact_iter59(10);
}

union IntOrPtr59 {
    i: int;
    p: int*;
}

// func f59() {
//    u1 := IntOrPtr59{i = 42};
//    u2 := IntOrPtr59{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i59: int;

struct Vector59 {
    x: int;
    y: int;
}

func fact_iter59(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec59(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec59(n-1);
    }
}

const n59 = 1 + sizeof(p59);

var p59: T59*;

struct T59 {
    a: int[n59];
}


func example_test60(): int {
    return fact_rec60(10) == fact_iter60(10);
}

union IntOrPtr60 {
    i: int;
    p: int*;
}

// func f60() {
//    u1 := IntOrPtr60{i = 42};
//    u2 := IntOrPtr60{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i60: int;

struct Vector60 {
    x: int;
    y: int;
}

func fact_iter60(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec60(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec60(n-1);
    }
}

const n60 = 1 + sizeof(p60);

var p60: T60*;

struct T60 {
    a: int[n60];
}


func example_test61(): int {
    return fact_rec61(10) == fact_iter61(10);
}

union IntOrPtr61 {
    i: int;
    p: int*;
}

// func f61() {
//    u1 := IntOrPtr61{i = 42};
//    u2 := IntOrPtr61{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i61: int;

struct Vector61 {
    x: int;
    y: int;
}

func fact_iter61(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec61(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec61(n-1);
    }
}

const n61 = 1 + sizeof(p61);

var p61: T61*;

struct T61 {
    a: int[n61];
}


func example_test62(): int {
    return fact_rec62(10) == fact_iter62(10);
}

union IntOrPtr62 {
    i: int;
    p: int*;
}

// func f62() {
//    u1 := IntOrPtr62{i = 42};
//    u2 := IntOrPtr62{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i62: int;

struct Vector62 {
    x: int;
    y: int;
}

func fact_iter62(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec62(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec62(n-1);
    }
}

const n62 = 1 + sizeof(p62);

var p62: T62*;

struct T62 {
    a: int[n62];
}


func example_test63(): int {
    return fact_rec63(10) == fact_iter63(10);
}

union IntOrPtr63 {
    i: int;
    p: int*;
}

// func f63() {
//    u1 := IntOrPtr63{i = 42};
//    u2 := IntOrPtr63{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i63: int;

struct Vector63 {
    x: int;
    y: int;
}

func fact_iter63(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec63(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec63(n-1);
    }
}

const n63 = 1 + sizeof(p63);

var p63: T63*;

struct T63 {
    a: int[n63];
}


func example_test64(): int {
    return fact_rec64(10) == fact_iter64(10);
}

union IntOrPtr64 {
    i: int;
    p: int*;
}

// func f64() {
//    u1 := IntOrPtr64{i = 42};
//    u2 := IntOrPtr64{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i64: int;

struct Vector64 {
    x: int;
    y: int;
}

func fact_iter64(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec64(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec64(n-1);
    }
}

const n64 = 1 + sizeof(p64);

var p64: T64*;

struct T64 {
    a: int[n64];
}


func example_test65(): int {
    return fact_rec65(10) == fact_iter65(10);
}

union IntOrPtr65 {
    i: int;
    p: int*;
}

// func f65() {
//    u1 := IntOrPtr65{i = 42};
//    u2 := IntOrPtr65{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i65: int;

struct Vector65 {
    x: int;
    y: int;
}

func fact_iter65(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec65(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec65(n-1);
    }
}

const n65 = 1 + sizeof(p65);

var p65: T65*;

struct T65 {
    a: int[n65];
}


func example_test66(): int {
    return fact_rec66(10) == fact_iter66(10);
}

union IntOrPtr66 {
    i: int;
    p: int*;
}

// func f66() {
//    u1 := IntOrPtr66{i = 42};
//    u2 := IntOrPtr66{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i66: int;

struct Vector66 {
    x: int;
    y: int;
}

func fact_iter66(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec66(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec66(n-1);
    }
}

const n66 = 1 + sizeof(p66);

var p66: T66*;

struct T66 {
    a: int[n66];
}


func example_test67(): int {
    return fact_rec67(10) == fact_iter67(10);
}

union IntOrPtr67 {
    i: int;
    p: int*;
}

// func f67() {
//    u1 := IntOrPtr67{i = 42};
//    u2 := IntOrPtr67{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i67: int;

struct Vector67 {
    x: int;
    y: int;
}

func fact_iter67(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec67(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec67(n-1);
    }
}

const n67 = 1 + sizeof(p67);

var p67: T67*;

struct T67 {
    a: int[n67];
}


func example_test68(): int {
    return fact_rec68(10) == fact_iter68(10);
}

union IntOrPtr68 {
    i: int;
    p: int*;
}

// func f68() {
//    u1 := IntOrPtr68{i = 42};
//    u2 := IntOrPtr68{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i68: int;

struct Vector68 {
    x: int;
    y: int;
}

func fact_iter68(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec68(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec68(n-1);
    }
}

const n68 = 1 + sizeof(p68);

var p68: T68*;

struct T68 {
    a: int[n68];
}


func example_test69(): int {
    return fact_rec69(10) == fact_iter69(10);
}

union IntOrPtr69 {
    i: int;
    p: int*;
}

// func f69() {
//    u1 := IntOrPtr69{i = 42};
//    u2 := IntOrPtr69{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i69: int;

struct Vector69 {
    x: int;
    y: int;
}

func fact_iter69(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec69(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec69(n-1);
    }
}

const n69 = 1 + sizeof(p69);

var p69: T69*;

struct T69 {
    a: int[n69];
}


func example_test70(): int {
    return fact_rec70(10) == fact_iter70(10);
}

union IntOrPtr70 {
    i: int;
    p: int*;
}

// func f70() {
//    u1 := IntOrPtr70{i = 42};
//    u2 := IntOrPtr70{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i70: int;

struct Vector70 {
    x: int;
    y: int;
}

func fact_iter70(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec70(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec70(n-1);
    }
}

const n70 = 1 + sizeof(p70);

var p70: T70*;

struct T70 {
    a: int[n70];
}


func example_test71(): int {
    return fact_rec71(10) == fact_iter71(10);
}

union IntOrPtr71 {
    i: int;
    p: int*;
}

// func f71() {
//    u1 := IntOrPtr71{i = 42};
//    u2 := IntOrPtr71{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i71: int;

struct Vector71 {
    x: int;
    y: int;
}

func fact_iter71(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec71(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec71(n-1);
    }
}

const n71 = 1 + sizeof(p71);

var p71: T71*;

struct T71 {
    a: int[n71];
}


func example_test72(): int {
    return fact_rec72(10) == fact_iter72(10);
}

union IntOrPtr72 {
    i: int;
    p: int*;
}

// func f72() {
//    u1 := IntOrPtr72{i = 42};
//    u2 := IntOrPtr72{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i72: int;

struct Vector72 {
    x: int;
    y: int;
}

func fact_iter72(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec72(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec72(n-1);
    }
}

const n72 = 1 + sizeof(p72);

var p72: T72*;

struct T72 {
    a: int[n72];
}


func example_test73(): int {
    return fact_rec73(10) == fact_iter73(10);
}

union IntOrPtr73 {
    i: int;
    p: int*;
}

// func f73() {
//    u1 := IntOrPtr73{i = 42};
//    u2 := IntOrPtr73{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i73: int;

struct Vector73 {
    x: int;
    y: int;
}

func fact_iter73(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec73(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec73(n-1);
    }
}

const n73 = 1 + sizeof(p73);

var p73: T73*;

struct T73 {
    a: int[n73];
}


func example_test74(): int {
    return fact_rec74(10) == fact_iter74(10);
}

union IntOrPtr74 {
    i: int;
    p: int*;
}

// func f74() {
//    u1 := IntOrPtr74{i = 42};
//    u2 := IntOrPtr74{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i74: int;

struct Vector74 {
    x: int;
    y: int;
}

func fact_iter74(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec74(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec74(n-1);
    }
}

const n74 = 1 + sizeof(p74);

var p74: T74*;

struct T74 {
    a: int[n74];
}


func example_test75(): int {
    return fact_rec75(10) == fact_iter75(10);
}

union IntOrPtr75 {
    i: int;
    p: int*;
}

// func f75() {
//    u1 := IntOrPtr75{i = 42};
//    u2 := IntOrPtr75{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i75: int;

struct Vector75 {
    x: int;
    y: int;
}

func fact_iter75(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec75(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec75(n-1);
    }
}

const n75 = 1 + sizeof(p75);

var p75: T75*;

struct T75 {
    a: int[n75];
}


func example_test76(): int {
    return fact_rec76(10) == fact_iter76(10);
}

union IntOrPtr76 {
    i: int;
    p: int*;
}

// func f76() {
//    u1 := IntOrPtr76{i = 42};
//    u2 := IntOrPtr76{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i76: int;

struct Vector76 {
    x: int;
    y: int;
}

func fact_iter76(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec76(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec76(n-1);
    }
}

const n76 = 1 + sizeof(p76);

var p76: T76*;

struct T76 {
    a: int[n76];
}


func example_test77(): int {
    return fact_rec77(10) == fact_iter77(10);
}

union IntOrPtr77 {
    i: int;
    p: int*;
}

// func f77() {
//    u1 := IntOrPtr77{i = 42};
//    u2 := IntOrPtr77{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i77: int;

struct Vector77 {
    x: int;
    y: int;
}

func fact_iter77(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec77(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec77(n-1);
    }
}

const n77 = 1 + sizeof(p77);

var p77: T77*;

struct T77 {
    a: int[n77];
}


func example_test78(): int {
    return fact_rec78(10) == fact_iter78(10);
}

union IntOrPtr78 {
    i: int;
    p: int*;
}

// func f78() {
//    u1 := IntOrPtr78{i = 42};
//    u2 := IntOrPtr78{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i78: int;

struct Vector78 {
    x: int;
    y: int;
}

func fact_iter78(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec78(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec78(n-1);
    }
}

const n78 = 1 + sizeof(p78);

var p78: T78*;

struct T78 {
    a: int[n78];
}


func example_test79(): int {
    return fact_rec79(10) == fact_iter79(10);
}

union IntOrPtr79 {
    i: int;
    p: int*;
}

// func f79() {
//    u1 := IntOrPtr79{i = 42};
//    u2 := IntOrPtr79{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i79: int;

struct Vector79 {
    x: int;
    y: int;
}

func fact_iter79(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec79(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec79(n-1);
    }
}

const n79 = 1 + sizeof(p79);

var p79: T79*;

struct T79 {
    a: int[n79];
}


func example_test80(): int {
    return fact_rec80(10) == fact_iter80(10);
}

union IntOrPtr80 {
    i: int;
    p: int*;
}

// func f80() {
//    u1 := IntOrPtr80{i = 42};
//    u2 := IntOrPtr80{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i80: int;

struct Vector80 {
    x: int;
    y: int;
}

func fact_iter80(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec80(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec80(n-1);
    }
}

const n80 = 1 + sizeof(p80);

var p80: T80*;

struct T80 {
    a: int[n80];
}


func example_test81(): int {
    return fact_rec81(10) == fact_iter81(10);
}

union IntOrPtr81 {
    i: int;
    p: int*;
}

// func f81() {
//    u1 := IntOrPtr81{i = 42};
//    u2 := IntOrPtr81{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i81: int;

struct Vector81 {
    x: int;
    y: int;
}

func fact_iter81(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec81(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec81(n-1);
    }
}

const n81 = 1 + sizeof(p81);

var p81: T81*;

struct T81 {
    a: int[n81];
}


func example_test82(): int {
    return fact_rec82(10) == fact_iter82(10);
}

union IntOrPtr82 {
    i: int;
    p: int*;
}

// func f82() {
//    u1 := IntOrPtr82{i = 42};
//    u2 := IntOrPtr82{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i82: int;

struct Vector82 {
    x: int;
    y: int;
}

func fact_iter82(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec82(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec82(n-1);
    }
}

const n82 = 1 + sizeof(p82);

var p82: T82*;

struct T82 {
    a: int[n82];
}


func example_test83(): int {
    return fact_rec83(10) == fact_iter83(10);
}

union IntOrPtr83 {
    i: int;
    p: int*;
}

// func f83() {
//    u1 := IntOrPtr83{i = 42};
//    u2 := IntOrPtr83{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i83: int;

struct Vector83 {
    x: int;
    y: int;
}

func fact_iter83(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec83(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec83(n-1);
    }
}

const n83 = 1 + sizeof(p83);

var p83: T83*;

struct T83 {
    a: int[n83];
}


func example_test84(): int {
    return fact_rec84(10) == fact_iter84(10);
}

union IntOrPtr84 {
    i: int;
    p: int*;
}

// func f84() {
//    u1 := IntOrPtr84{i = 42};
//    u2 := IntOrPtr84{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i84: int;

struct Vector84 {
    x: int;
    y: int;
}

func fact_iter84(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec84(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec84(n-1);
    }
}

const n84 = 1 + sizeof(p84);

var p84: T84*;

struct T84 {
    a: int[n84];
}


func example_test85(): int {
    return fact_rec85(10) == fact_iter85(10);
}

union IntOrPtr85 {
    i: int;
    p: int*;
}

// func f85() {
//    u1 := IntOrPtr85{i = 42};
//    u2 := IntOrPtr85{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i85: int;

struct Vector85 {
    x: int;
    y: int;
}

func fact_iter85(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec85(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec85(n-1);
    }
}

const n85 = 1 + sizeof(p85);

var p85: T85*;

struct T85 {
    a: int[n85];
}


func example_test86(): int {
    return fact_rec86(10) == fact_iter86(10);
}

union IntOrPtr86 {
    i: int;
    p: int*;
}

// func f86() {
//    u1 := IntOrPtr86{i = 42};
//    u2 := IntOrPtr86{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i86: int;

struct Vector86 {
    x: int;
    y: int;
}

func fact_iter86(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec86(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec86(n-1);
    }
}

const n86 = 1 + sizeof(p86);

var p86: T86*;

struct T86 {
    a: int[n86];
}


func example_test87(): int {
    return fact_rec87(10) == fact_iter87(10);
}

union IntOrPtr87 {
    i: int;
    p: int*;
}

// func f87() {
//    u1 := IntOrPtr87{i = 42};
//    u2 := IntOrPtr87{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i87: int;

struct Vector87 {
    x: int;
    y: int;
}

func fact_iter87(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec87(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec87(n-1);
    }
}

const n87 = 1 + sizeof(p87);

var p87: T87*;

struct T87 {
    a: int[n87];
}


func example_test88(): int {
    return fact_rec88(10) == fact_iter88(10);
}

union IntOrPtr88 {
    i: int;
    p: int*;
}

// func f88() {
//    u1 := IntOrPtr88{i = 42};
//    u2 := IntOrPtr88{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i88: int;

struct Vector88 {
    x: int;
    y: int;
}

func fact_iter88(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec88(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec88(n-1);
    }
}

const n88 = 1 + sizeof(p88);

var p88: T88*;

struct T88 {
    a: int[n88];
}


func example_test89(): int {
    return fact_rec89(10) == fact_iter89(10);
}

union IntOrPtr89 {
    i: int;
    p: int*;
}

// func f89() {
//    u1 := IntOrPtr89{i = 42};
//    u2 := IntOrPtr89{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i89: int;

struct Vector89 {
    x: int;
    y: int;
}

func fact_iter89(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec89(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec89(n-1);
    }
}

const n89 = 1 + sizeof(p89);

var p89: T89*;

struct T89 {
    a: int[n89];
}


func example_test90(): int {
    return fact_rec90(10) == fact_iter90(10);
}

union IntOrPtr90 {
    i: int;
    p: int*;
}

// func f90() {
//    u1 := IntOrPtr90{i = 42};
//    u2 := IntOrPtr90{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i90: int;

struct Vector90 {
    x: int;
    y: int;
}

func fact_iter90(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec90(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec90(n-1);
    }
}

const n90 = 1 + sizeof(p90);

var p90: T90*;

struct T90 {
    a: int[n90];
}


func example_test91(): int {
    return fact_rec91(10) == fact_iter91(10);
}

union IntOrPtr91 {
    i: int;
    p: int*;
}

// func f91() {
//    u1 := IntOrPtr91{i = 42};
//    u2 := IntOrPtr91{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i91: int;

struct Vector91 {
    x: int;
    y: int;
}

func fact_iter91(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec91(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec91(n-1);
    }
}

const n91 = 1 + sizeof(p91);

var p91: T91*;

struct T91 {
    a: int[n91];
}


func example_test92(): int {
    return fact_rec92(10) == fact_iter92(10);
}

union IntOrPtr92 {
    i: int;
    p: int*;
}

// func f92() {
//    u1 := IntOrPtr92{i = 42};
//    u2 := IntOrPtr92{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i92: int;

struct Vector92 {
    x: int;
    y: int;
}

func fact_iter92(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec92(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec92(n-1);
    }
}

const n92 = 1 + sizeof(p92);

var p92: T92*;

struct T92 {
    a: int[n92];
}


func example_test93(): int {
    return fact_rec93(10) == fact_iter93(10);
}

union IntOrPtr93 {
    i: int;
    p: int*;
}

// func f93() {
//    u1 := IntOrPtr93{i = 42};
//    u2 := IntOrPtr93{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i93: int;

struct Vector93 {
    x: int;
    y: int;
}

func fact_iter93(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec93(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec93(n-1);
    }
}

const n93 = 1 + sizeof(p93);

var p93: T93*;

struct T93 {
    a: int[n93];
}


func example_test94(): int {
    return fact_rec94(10) == fact_iter94(10);
}

union IntOrPtr94 {
    i: int;
    p: int*;
}

// func f94() {
//    u1 := IntOrPtr94{i = 42};
//    u2 := IntOrPtr94{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i94: int;

struct Vector94 {
    x: int;
    y: int;
}

func fact_iter94(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec94(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec94(n-1);
    }
}

const n94 = 1 + sizeof(p94);

var p94: T94*;

struct T94 {
    a: int[n94];
}


func example_test95(): int {
    return fact_rec95(10) == fact_iter95(10);
}

union IntOrPtr95 {
    i: int;
    p: int*;
}

// func f95() {
//    u1 := IntOrPtr95{i = 42};
//    u2 := IntOrPtr95{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i95: int;

struct Vector95 {
    x: int;
    y: int;
}

func fact_iter95(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec95(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec95(n-1);
    }
}

const n95 = 1 + sizeof(p95);

var p95: T95*;

struct T95 {
    a: int[n95];
}


func example_test96(): int {
    return fact_rec96(10) == fact_iter96(10);
}

union IntOrPtr96 {
    i: int;
    p: int*;
}

// func f96() {
//    u1 := IntOrPtr96{i = 42};
//    u2 := IntOrPtr96{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i96: int;

struct Vector96 {
    x: int;
    y: int;
}

func fact_iter96(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec96(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec96(n-1);
    }
}

const n96 = 1 + sizeof(p96);

var p96: T96*;

struct T96 {
    a: int[n96];
}


func example_test97(): int {
    return fact_rec97(10) == fact_iter97(10);
}

union IntOrPtr97 {
    i: int;
    p: int*;
}

// func f97() {
//    u1 := IntOrPtr97{i = 42};
//    u2 := IntOrPtr97{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i97: int;

struct Vector97 {
    x: int;
    y: int;
}

func fact_iter97(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec97(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec97(n-1);
    }
}

const n97 = 1 + sizeof(p97);

var p97: T97*;

struct T97 {
    a: int[n97];
}


func example_test98(): int {
    return fact_rec98(10) == fact_iter98(10);
}

union IntOrPtr98 {
    i: int;
    p: int*;
}

// func f98() {
//    u1 := IntOrPtr98{i = 42};
//    u2 := IntOrPtr98{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i98: int;

struct Vector98 {
    x: int;
    y: int;
}

func fact_iter98(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec98(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec98(n-1);
    }
}

const n98 = 1 + sizeof(p98);

var p98: T98*;

struct T98 {
    a: int[n98];
}


func example_test99(): int {
    return fact_rec99(10) == fact_iter99(10);
}

union IntOrPtr99 {
    i: int;
    p: int*;
}

// func f99() {
//    u1 := IntOrPtr99{i = 42};
//    u2 := IntOrPtr99{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i99: int;

struct Vector99 {
    x: int;
    y: int;
}

func fact_iter99(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec99(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec99(n-1);
    }
}

const n99 = 1 + sizeof(p99);

var p99: T99*;

struct T99 {
    a: int[n99];
}


func example_test100(): int {
    return fact_rec100(10) == fact_iter100(10);
}

union IntOrPtr100 {
    i: int;
    p: int*;
}

// func f100() {
//    u1 := IntOrPtr100{i = 42};
//    u2 := IntOrPtr100{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i100: int;

struct Vector100 {
    x: int;
    y: int;
}

func fact_iter100(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec100(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec100(n-1);
    }
}

const n100 = 1 + sizeof(p100);

var p100: T100*;

struct T100 {
    a: int[n100];
}


func example_test101(): int {
    return fact_rec101(10) == fact_iter101(10);
}

union IntOrPtr101 {
    i: int;
    p: int*;
}

// func f101() {
//    u1 := IntOrPtr101{i = 42};
//    u2 := IntOrPtr101{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i101: int;

struct Vector101 {
    x: int;
    y: int;
}

func fact_iter101(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec101(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec101(n-1);
    }
}

const n101 = 1 + sizeof(p101);

var p101: T101*;

struct T101 {
    a: int[n101];
}


func example_test102(): int {
    return fact_rec102(10) == fact_iter102(10);
}

union IntOrPtr102 {
    i: int;
    p: int*;
}

// func f102() {
//    u1 := IntOrPtr102{i = 42};
//    u2 := IntOrPtr102{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i102: int;

struct Vector102 {
    x: int;
    y: int;
}

func fact_iter102(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec102(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec102(n-1);
    }
}

const n102 = 1 + sizeof(p102);

var p102: T102*;

struct T102 {
    a: int[n102];
}


func example_test103(): int {
    return fact_rec103(10) == fact_iter103(10);
}

union IntOrPtr103 {
    i: int;
    p: int*;
}

// func f103() {
//    u1 := IntOrPtr103{i = 42};
//    u2 := IntOrPtr103{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i103: int;

struct Vector103 {
    x: int;
    y: int;
}

func fact_iter103(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec103(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec103(n-1);
    }
}

const n103 = 1 + sizeof(p103);

var p103: T103*;

struct T103 {
    a: int[n103];
}


func example_test104(): int {
    return fact_rec104(10) == fact_iter104(10);
}

union IntOrPtr104 {
    i: int;
    p: int*;
}

// func f104() {
//    u1 := IntOrPtr104{i = 42};
//    u2 := IntOrPtr104{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i104: int;

struct Vector104 {
    x: int;
    y: int;
}

func fact_iter104(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec104(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec104(n-1);
    }
}

const n104 = 1 + sizeof(p104);

var p104: T104*;

struct T104 {
    a: int[n104];
}


func example_test105(): int {
    return fact_rec105(10) == fact_iter105(10);
}

union IntOrPtr105 {
    i: int;
    p: int*;
}

// func f105() {
//    u1 := IntOrPtr105{i = 42};
//    u2 := IntOrPtr105{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i105: int;

struct Vector105 {
    x: int;
    y: int;
}

func fact_iter105(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec105(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec105(n-1);
    }
}

const n105 = 1 + sizeof(p105);

var p105: T105*;

struct T105 {
    a: int[n105];
}


func example_test106(): int {
    return fact_rec106(10) == fact_iter106(10);
}

union IntOrPtr106 {
    i: int;
    p: int*;
}

// func f106() {
//    u1 := IntOrPtr106{i = 42};
//    u2 := IntOrPtr106{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i106: int;

struct Vector106 {
    x: int;
    y: int;
}

func fact_iter106(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec106(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec106(n-1);
    }
}

const n106 = 1 + sizeof(p106);

var p106: T106*;

struct T106 {
    a: int[n106];
}


func example_test107(): int {
    return fact_rec107(10) == fact_iter107(10);
}

union IntOrPtr107 {
    i: int;
    p: int*;
}

// func f107() {
//    u1 := IntOrPtr107{i = 42};
//    u2 := IntOrPtr107{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i107: int;

struct Vector107 {
    x: int;
    y: int;
}

func fact_iter107(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec107(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec107(n-1);
    }
}

const n107 = 1 + sizeof(p107);

var p107: T107*;

struct T107 {
    a: int[n107];
}


func example_test108(): int {
    return fact_rec108(10) == fact_iter108(10);
}

union IntOrPtr108 {
    i: int;
    p: int*;
}

// func f108() {
//    u1 := IntOrPtr108{i = 42};
//    u2 := IntOrPtr108{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i108: int;

struct Vector108 {
    x: int;
    y: int;
}

func fact_iter108(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec108(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec108(n-1);
    }
}

const n108 = 1 + sizeof(p108);

var p108: T108*;

struct T108 {
    a: int[n108];
}


func example_test109(): int {
    return fact_rec109(10) == fact_iter109(10);
}

union IntOrPtr109 {
    i: int;
    p: int*;
}

// func f109() {
//    u1 := IntOrPtr109{i = 42};
//    u2 := IntOrPtr109{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i109: int;

struct Vector109 {
    x: int;
    y: int;
}

func fact_iter109(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec109(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec109(n-1);
    }
}

const n109 = 1 + sizeof(p109);

var p109: T109*;

struct T109 {
    a: int[n109];
}


func example_test110(): int {
    return fact_rec110(10) == fact_iter110(10);
}

union IntOrPtr110 {
    i: int;
    p: int*;
}

// func f110() {
//    u1 := IntOrPtr110{i = 42};
//    u2 := IntOrPtr110{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i110: int;

struct Vector110 {
    x: int;
    y: int;
}

func fact_iter110(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec110(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec110(n-1);
    }
}

const n110 = 1 + sizeof(p110);

var p110: T110*;

struct T110 {
    a: int[n110];
}


func example_test111(): int {
    return fact_rec111(10) == fact_iter111(10);
}

union IntOrPtr111 {
    i: int;
    p: int*;
}

// func f111() {
//    u1 := IntOrPtr111{i = 42};
//    u2 := IntOrPtr111{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i111: int;

struct Vector111 {
    x: int;
    y: int;
}

func fact_iter111(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec111(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec111(n-1);
    }
}

const n111 = 1 + sizeof(p111);

var p111: T111*;

struct T111 {
    a: int[n111];
}


func example_test112(): int {
    return fact_rec112(10) == fact_iter112(10);
}

union IntOrPtr112 {
    i: int;
    p: int*;
}

// func f112() {
//    u1 := IntOrPtr112{i = 42};
//    u2 := IntOrPtr112{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i112: int;

struct Vector112 {
    x: int;
    y: int;
}

func fact_iter112(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec112(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec112(n-1);
    }
}

const n112 = 1 + sizeof(p112);

var p112: T112*;

struct T112 {
    a: int[n112];
}


func example_test113(): int {
    return fact_rec113(10) == fact_iter113(10);
}

union IntOrPtr113 {
    i: int;
    p: int*;
}

// func f113() {
//    u1 := IntOrPtr113{i = 42};
//    u2 := IntOrPtr113{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i113: int;

struct Vector113 {
    x: int;
    y: int;
}

func fact_iter113(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec113(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec113(n-1);
    }
}

const n113 = 1 + sizeof(p113);

var p113: T113*;

struct T113 {
    a: int[n113];
}


func example_test114(): int {
    return fact_rec114(10) == fact_iter114(10);
}

union IntOrPtr114 {
    i: int;
    p: int*;
}

// func f114() {
//    u1 := IntOrPtr114{i = 42};
//    u2 := IntOrPtr114{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i114: int;

struct Vector114 {
    x: int;
    y: int;
}

func fact_iter114(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec114(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec114(n-1);
    }
}

const n114 = 1 + sizeof(p114);

var p114: T114*;

struct T114 {
    a: int[n114];
}


func example_test115(): int {
    return fact_rec115(10) == fact_iter115(10);
}

union IntOrPtr115 {
    i: int;
    p: int*;
}

// func f115() {
//    u1 := IntOrPtr115{i = 42};
//    u2 := IntOrPtr115{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i115: int;

struct Vector115 {
    x: int;
    y: int;
}

func fact_iter115(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec115(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec115(n-1);
    }
}

const n115 = 1 + sizeof(p115);

var p115: T115*;

struct T115 {
    a: int[n115];
}


func example_test116(): int {
    return fact_rec116(10) == fact_iter116(10);
}

union IntOrPtr116 {
    i: int;
    p: int*;
}

// func f116() {
//    u1 := IntOrPtr116{i = 42};
//    u2 := IntOrPtr116{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i116: int;

struct Vector116 {
    x: int;
    y: int;
}

func fact_iter116(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec116(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec116(n-1);
    }
}

const n116 = 1 + sizeof(p116);

var p116: T116*;

struct T116 {
    a: int[n116];
}


func example_test117(): int {
    return fact_rec117(10) == fact_iter117(10);
}

union IntOrPtr117 {
    i: int;
    p: int*;
}

// func f117() {
//    u1 := IntOrPtr117{i = 42};
//    u2 := IntOrPtr117{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i117: int;

struct Vector117 {
    x: int;
    y: int;
}

func fact_iter117(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec117(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec117(n-1);
    }
}

const n117 = 1 + sizeof(p117);

var p117: T117*;

struct T117 {
    a: int[n117];
}


func example_test118(): int {
    return fact_rec118(10) == fact_iter118(10);
}

union IntOrPtr118 {
    i: int;
    p: int*;
}

// func f118() {
//    u1 := IntOrPtr118{i = 42};
//    u2 := IntOrPtr118{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i118: int;

struct Vector118 {
    x: int;
    y: int;
}

func fact_iter118(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec118(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec118(n-1);
    }
}

const n118 = 1 + sizeof(p118);

var p118: T118*;

struct T118 {
    a: int[n118];
}


func example_test119(): int {
    return fact_rec119(10) == fact_iter119(10);
}

union IntOrPtr119 {
    i: int;
    p: int*;
}

// func f119() {
//    u1 := IntOrPtr119{i = 42};
//    u2 := IntOrPtr119{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i119: int;

struct Vector119 {
    x: int;
    y: int;
}

func fact_iter119(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec119(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec119(n-1);
    }
}

const n119 = 1 + sizeof(p119);

var p119: T119*;

struct T119 {
    a: int[n119];
}


func example_test120(): int {
    return fact_rec120(10) == fact_iter120(10);
}

union IntOrPtr120 {
    i: int;
    p: int*;
}

// func f120() {
//    u1 := IntOrPtr120{i = 42};
//    u2 := IntOrPtr120{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i120: int;

struct Vector120 {
    x: int;
    y: int;
}

func fact_iter120(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec120(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec120(n-1);
    }
}

const n120 = 1 + sizeof(p120);

var p120: T120*;

struct T120 {
    a: int[n120];
}


func example_test121(): int {
    return fact_rec121(10) == fact_iter121(10);
}

union IntOrPtr121 {
    i: int;
    p: int*;
}

// func f121() {
//    u1 := IntOrPtr121{i = 42};
//    u2 := IntOrPtr121{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i121: int;

struct Vector121 {
    x: int;
    y: int;
}

func fact_iter121(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec121(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec121(n-1);
    }
}

const n121 = 1 + sizeof(p121);

var p121: T121*;

struct T121 {
    a: int[n121];
}


func example_test122(): int {
    return fact_rec122(10) == fact_iter122(10);
}

union IntOrPtr122 {
    i: int;
    p: int*;
}

// func f122() {
//    u1 := IntOrPtr122{i = 42};
//    u2 := IntOrPtr122{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i122: int;

struct Vector122 {
    x: int;
    y: int;
}

func fact_iter122(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec122(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec122(n-1);
    }
}

const n122 = 1 + sizeof(p122);

var p122: T122*;

struct T122 {
    a: int[n122];
}


func example_test123(): int {
    return fact_rec123(10) == fact_iter123(10);
}

union IntOrPtr123 {
    i: int;
    p: int*;
}

// func f123() {
//    u1 := IntOrPtr123{i = 42};
//    u2 := IntOrPtr123{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i123: int;

struct Vector123 {
    x: int;
    y: int;
}

func fact_iter123(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec123(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec123(n-1);
    }
}

const n123 = 1 + sizeof(p123);

var p123: T123*;

struct T123 {
    a: int[n123];
}


func example_test124(): int {
    return fact_rec124(10) == fact_iter124(10);
}

union IntOrPtr124 {
    i: int;
    p: int*;
}

// func f124() {
//    u1 := IntOrPtr124{i = 42};
//    u2 := IntOrPtr124{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i124: int;

struct Vector124 {
    x: int;
    y: int;
}

func fact_iter124(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec124(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec124(n-1);
    }
}

const n124 = 1 + sizeof(p124);

var p124: T124*;

struct T124 {
    a: int[n124];
}


func example_test125(): int {
    return fact_rec125(10) == fact_iter125(10);
}

union IntOrPtr125 {
    i: int;
    p: int*;
}

// func f125() {
//    u1 := IntOrPtr125{i = 42};
//    u2 := IntOrPtr125{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i125: int;

struct Vector125 {
    x: int;
    y: int;
}

func fact_iter125(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec125(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec125(n-1);
    }
}

const n125 = 1 + sizeof(p125);

var p125: T125*;

struct T125 {
    a: int[n125];
}


func example_test126(): int {
    return fact_rec126(10) == fact_iter126(10);
}

union IntOrPtr126 {
    i: int;
    p: int*;
}

// func f126() {
//    u1 := IntOrPtr126{i = 42};
//    u2 := IntOrPtr126{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i126: int;

struct Vector126 {
    x: int;
    y: int;
}

func fact_iter126(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec126(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec126(n-1);
    }
}

const n126 = 1 + sizeof(p126);

var p126: T126*;

struct T126 {
    a: int[n126];
}


func example_test127(): int {
    return fact_rec127(10) == fact_iter127(10);
}

union IntOrPtr127 {
    i: int;
    p: int*;
}

// func f127() {
//    u1 := IntOrPtr127{i = 42};
//    u2 := IntOrPtr127{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i127: int;

struct Vector127 {
    x: int;
    y: int;
}

func fact_iter127(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec127(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec127(n-1);
    }
}

const n127 = 1 + sizeof(p127);

var p127: T127*;

struct T127 {
    a: int[n127];
}


func example_test128(): int {
    return fact_rec128(10) == fact_iter128(10);
}

union IntOrPtr128 {
    i: int;
    p: int*;
}

// func f128() {
//    u1 := IntOrPtr128{i = 42};
//    u2 := IntOrPtr128{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i128: int;

struct Vector128 {
    x: int;
    y: int;
}

func fact_iter128(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec128(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec128(n-1);
    }
}

const n128 = 1 + sizeof(p128);

var p128: T128*;

struct T128 {
    a: int[n128];
}


func example_test129(): int {
    return fact_rec129(10) == fact_iter129(10);
}

union IntOrPtr129 {
    i: int;
    p: int*;
}

// func f129() {
//    u1 := IntOrPtr129{i = 42};
//    u2 := IntOrPtr129{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i129: int;

struct Vector129 {
    x: int;
    y: int;
}

func fact_iter129(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec129(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec129(n-1);
    }
}

const n129 = 1 + sizeof(p129);

var p129: T129*;

struct T129 {
    a: int[n129];
}


func example_test130(): int {
    return fact_rec130(10) == fact_iter130(10);
}

union IntOrPtr130 {
    i: int;
    p: int*;
}

// func f130() {
//    u1 := IntOrPtr130{i = 42};
//    u2 := IntOrPtr130{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i130: int;

struct Vector130 {
    x: int;
    y: int;
}

func fact_iter130(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec130(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec130(n-1);
    }
}

const n130 = 1 + sizeof(p130);

var p130: T130*;

struct T130 {
    a: int[n130];
}


func example_test131(): int {
    return fact_rec131(10) == fact_iter131(10);
}

union IntOrPtr131 {
    i: int;
    p: int*;
}

// func f131() {
//    u1 := IntOrPtr131{i = 42};
//    u2 := IntOrPtr131{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i131: int;

struct Vector131 {
    x: int;
    y: int;
}

func fact_iter131(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec131(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec131(n-1);
    }
}

const n131 = 1 + sizeof(p131);

var p131: T131*;

struct T131 {
    a: int[n131];
}


func example_test132(): int {
    return fact_rec132(10) == fact_iter132(10);
}

union IntOrPtr132 {
    i: int;
    p: int*;
}

// func f132() {
//    u1 := IntOrPtr132{i = 42};
//    u2 := IntOrPtr132{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i132: int;

struct Vector132 {
    x: int;
    y: int;
}

func fact_iter132(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec132(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec132(n-1);
    }
}

const n132 = 1 + sizeof(p132);

var p132: T132*;

struct T132 {
    a: int[n132];
}


func example_test133(): int {
    return fact_rec133(10) == fact_iter133(10);
}

union IntOrPtr133 {
    i: int;
    p: int*;
}

// func f133() {
//    u1 := IntOrPtr133{i = 42};
//    u2 := IntOrPtr133{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i133: int;

struct Vector133 {
    x: int;
    y: int;
}

func fact_iter133(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec133(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec133(n-1);
    }
}

const n133 = 1 + sizeof(p133);

var p133: T133*;

struct T133 {
    a: int[n133];
}


func example_test134(): int {
    return fact_rec134(10) == fact_iter134(10);
}

union IntOrPtr134 {
    i: int;
    p: int*;
}

// func f134() {
//    u1 := IntOrPtr134{i = 42};
//    u2 := IntOrPtr134{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i134: int;

struct Vector134 {
    x: int;
    y: int;
}

func fact_iter134(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec134(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec134(n-1);
    }
}

const n134 = 1 + sizeof(p134);

var p134: T134*;

struct T134 {
    a: int[n134];
}


func example_test135(): int {
    return fact_rec135(10) == fact_iter135(10);
}

union IntOrPtr135 {
    i: int;
    p: int*;
}

// func f135() {
//    u1 := IntOrPtr135{i = 42};
//    u2 := IntOrPtr135{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i135: int;

struct Vector135 {
    x: int;
    y: int;
}

func fact_iter135(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec135(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec135(n-1);
    }
}

const n135 = 1 + sizeof(p135);

var p135: T135*;

struct T135 {
    a: int[n135];
}


func example_test136(): int {
    return fact_rec136(10) == fact_iter136(10);
}

union IntOrPtr136 {
    i: int;
    p: int*;
}

// func f136() {
//    u1 := IntOrPtr136{i = 42};
//    u2 := IntOrPtr136{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i136: int;

struct Vector136 {
    x: int;
    y: int;
}

func fact_iter136(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec136(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec136(n-1);
    }
}

const n136 = 1 + sizeof(p136);

var p136: T136*;

struct T136 {
    a: int[n136];
}


func example_test137(): int {
    return fact_rec137(10) == fact_iter137(10);
}

union IntOrPtr137 {
    i: int;
    p: int*;
}

// func f137() {
//    u1 := IntOrPtr137{i = 42};
//    u2 := IntOrPtr137{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i137: int;

struct Vector137 {
    x: int;
    y: int;
}

func fact_iter137(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec137(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec137(n-1);
    }
}

const n137 = 1 + sizeof(p137);

var p137: T137*;

struct T137 {
    a: int[n137];
}


func example_test138(): int {
    return fact_rec138(10) == fact_iter138(10);
}

union IntOrPtr138 {
    i: int;
    p: int*;
}

// func f138() {
//    u1 := IntOrPtr138{i = 42};
//    u2 := IntOrPtr138{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i138: int;

struct Vector138 {
    x: int;
    y: int;
}

func fact_iter138(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec138(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec138(n-1);
    }
}

const n138 = 1 + sizeof(p138);

var p138: T138*;

struct T138 {
    a: int[n138];
}


func example_test139(): int {
    return fact_rec139(10) == fact_iter139(10);
}

union IntOrPtr139 {
    i: int;
    p: int*;
}

// func f139() {
//    u1 := IntOrPtr139{i = 42};
//    u2 := IntOrPtr139{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i139: int;

struct Vector139 {
    x: int;
    y: int;
}

func fact_iter139(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec139(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec139(n-1);
    }
}

const n139 = 1 + sizeof(p139);

var p139: T139*;

struct T139 {
    a: int[n139];
}


func example_test140(): int {
    return fact_rec140(10) == fact_iter140(10);
}

union IntOrPtr140 {
    i: int;
    p: int*;
}

// func f140() {
//    u1 := IntOrPtr140{i = 42};
//    u2 := IntOrPtr140{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i140: int;

struct Vector140 {
    x: int;
    y: int;
}

func fact_iter140(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec140(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec140(n-1);
    }
}

const n140 = 1 + sizeof(p140);

var p140: T140*;

struct T140 {
    a: int[n140];
}


func example_test141(): int {
    return fact_rec141(10) == fact_iter141(10);
}

union IntOrPtr141 {
    i: int;
    p: int*;
}

// func f141() {
//    u1 := IntOrPtr141{i = 42};
//    u2 := IntOrPtr141{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i141: int;

struct Vector141 {
    x: int;
    y: int;
}

func fact_iter141(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec141(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec141(n-1);
    }
}

const n141 = 1 + sizeof(p141);

var p141: T141*;

struct T141 {
    a: int[n141];
}


func example_test142(): int {
    return fact_rec142(10) == fact_iter142(10);
}

union IntOrPtr142 {
    i: int;
    p: int*;
}

// func f142() {
//    u1 := IntOrPtr142{i = 42};
//    u2 := IntOrPtr142{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i142: int;

struct Vector142 {
    x: int;
    y: int;
}

func fact_iter142(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec142(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec142(n-1);
    }
}

const n142 = 1 + sizeof(p142);

var p142: T142*;

struct T142 {
    a: int[n142];
}


func example_test143(): int {
    return fact_rec143(10) == fact_iter143(10);
}

union IntOrPtr143 {
    i: int;
    p: int*;
}

// func f143() {
//    u1 := IntOrPtr143{i = 42};
//    u2 := IntOrPtr143{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i143: int;

struct Vector143 {
    x: int;
    y: int;
}

func fact_iter143(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec143(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec143(n-1);
    }
}

const n143 = 1 + sizeof(p143);

var p143: T143*;

struct T143 {
    a: int[n143];
}


func example_test144(): int {
    return fact_rec144(10) == fact_iter144(10);
}

union IntOrPtr144 {
    i: int;
    p: int*;
}

// func f144() {
//    u1 := IntOrPtr144{i = 42};
//    u2 := IntOrPtr144{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i144: int;

struct Vector144 {
    x: int;
    y: int;
}

func fact_iter144(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec144(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec144(n-1);
    }
}

const n144 = 1 + sizeof(p144);

var p144: T144*;

struct T144 {
    a: int[n144];
}


func example_test145(): int {
    return fact_rec145(10) == fact_iter145(10);
}

union IntOrPtr145 {
    i: int;
    p: int*;
}

// func f145() {
//    u1 := IntOrPtr145{i = 42};
//    u2 := IntOrPtr145{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i145: int;

struct Vector145 {
    x: int;
    y: int;
}

func fact_iter145(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec145(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec145(n-1);
    }
}

const n145 = 1 + sizeof(p145);

var p145: T145*;

struct T145 {
    a: int[n145];
}


func example_test146(): int {
    return fact_rec146(10) == fact_iter146(10);
}

union IntOrPtr146 {
    i: int;
    p: int*;
}

// func f146() {
//    u1 := IntOrPtr146{i = 42};
//    u2 := IntOrPtr146{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i146: int;

struct Vector146 {
    x: int;
    y: int;
}

func fact_iter146(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec146(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec146(n-1);
    }
}

const n146 = 1 + sizeof(p146);

var p146: T146*;

struct T146 {
    a: int[n146];
}


func example_test147(): int {
    return fact_rec147(10) == fact_iter147(10);
}

union IntOrPtr147 {
    i: int;
    p: int*;
}

// func f147() {
//    u1 := IntOrPtr147{i = 42};
//    u2 := IntOrPtr147{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i147: int;

struct Vector147 {
    x: int;
    y: int;
}

func fact_iter147(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec147(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec147(n-1);
    }
}

const n147 = 1 + sizeof(p147);

var p147: T147*;

struct T147 {
    a: int[n147];
}


func example_test148(): int {
    return fact_rec148(10) == fact_iter148(10);
}

union IntOrPtr148 {
    i: int;
    p: int*;
}

// func f148() {
//    u1 := IntOrPtr148{i = 42};
//    u2 := IntOrPtr148{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i148: int;

struct Vector148 {
    x: int;
    y: int;
}

func fact_iter148(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec148(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec148(n-1);
    }
}

const n148 = 1 + sizeof(p148);

var p148: T148*;

struct T148 {
    a: int[n148];
}


func example_test149(): int {
    return fact_rec149(10) == fact_iter149(10);
}

union IntOrPtr149 {
    i: int;
    p: int*;
}

// func f149() {
//    u1 := IntOrPtr149{i = 42};
//    u2 := IntOrPtr149{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i149: int;

struct Vector149 {
    x: int;
    y: int;
}

func fact_iter149(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec149(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec149(n-1);
    }
}

const n149 = 1 + sizeof(p149);

var p149: T149*;

struct T149 {
    a: int[n149];
}


func example_test150(): int {
    return fact_rec150(10) == fact_iter150(10);
}

union IntOrPtr150 {
    i: int;
    p: int*;
}

// func f150() {
//    u1 := IntOrPtr150{i = 42};
//    u2 := IntOrPtr150{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i150: int;

struct Vector150 {
    x: int;
    y: int;
}

func fact_iter150(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec150(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec150(n-1);
    }
}

const n150 = 1 + sizeof(p150);

var p150: T150*;

struct T150 {
    a: int[n150];
}


func example_test151(): int {
    return fact_rec151(10) == fact_iter151(10);
}

union IntOrPtr151 {
    i: int;
    p: int*;
}

// func f151() {
//    u1 := IntOrPtr151{i = 42};
//    u2 := IntOrPtr151{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i151: int;

struct Vector151 {
    x: int;
    y: int;
}

func fact_iter151(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec151(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec151(n-1);
    }
}

const n151 = 1 + sizeof(p151);

var p151: T151*;

struct T151 {
    a: int[n151];
}


func example_test152(): int {
    return fact_rec152(10) == fact_iter152(10);
}

union IntOrPtr152 {
    i: int;
    p: int*;
}

// func f152() {
//    u1 := IntOrPtr152{i = 42};
//    u2 := IntOrPtr152{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i152: int;

struct Vector152 {
    x: int;
    y: int;
}

func fact_iter152(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec152(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec152(n-1);
    }
}

const n152 = 1 + sizeof(p152);

var p152: T152*;

struct T152 {
    a: int[n152];
}


func example_test153(): int {
    return fact_rec153(10) == fact_iter153(10);
}

union IntOrPtr153 {
    i: int;
    p: int*;
}

// func f153() {
//    u1 := IntOrPtr153{i = 42};
//    u2 := IntOrPtr153{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i153: int;

struct Vector153 {
    x: int;
    y: int;
}

func fact_iter153(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec153(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec153(n-1);
    }
}

const n153 = 1 + sizeof(p153);

var p153: T153*;

struct T153 {
    a: int[n153];
}


func example_test154(): int {
    return fact_rec154(10) == fact_iter154(10);
}

union IntOrPtr154 {
    i: int;
    p: int*;
}

// func f154() {
//    u1 := IntOrPtr154{i = 42};
//    u2 := IntOrPtr154{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i154: int;

struct Vector154 {
    x: int;
    y: int;
}

func fact_iter154(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec154(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec154(n-1);
    }
}

const n154 = 1 + sizeof(p154);

var p154: T154*;

struct T154 {
    a: int[n154];
}


func example_test155(): int {
    return fact_rec155(10) == fact_iter155(10);
}

union IntOrPtr155 {
    i: int;
    p: int*;
}

// func f155() {
//    u1 := IntOrPtr155{i = 42};
//    u2 := IntOrPtr155{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i155: int;

struct Vector155 {
    x: int;
    y: int;
}

func fact_iter155(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec155(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec155(n-1);
    }
}

const n155 = 1 + sizeof(p155);

var p155: T155*;

struct T155 {
    a: int[n155];
}


func example_test156(): int {
    return fact_rec156(10) == fact_iter156(10);
}

union IntOrPtr156 {
    i: int;
    p: int*;
}

// func f156() {
//    u1 := IntOrPtr156{i = 42};
//    u2 := IntOrPtr156{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i156: int;

struct Vector156 {
    x: int;
    y: int;
}

func fact_iter156(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec156(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec156(n-1);
    }
}

const n156 = 1 + sizeof(p156);

var p156: T156*;

struct T156 {
    a: int[n156];
}


func example_test157(): int {
    return fact_rec157(10) == fact_iter157(10);
}

union IntOrPtr157 {
    i: int;
    p: int*;
}

// func f157() {
//    u1 := IntOrPtr157{i = 42};
//    u2 := IntOrPtr157{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i157: int;

struct Vector157 {
    x: int;
    y: int;
}

func fact_iter157(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec157(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec157(n-1);
    }
}

const n157 = 1 + sizeof(p157);

var p157: T157*;

struct T157 {
    a: int[n157];
}


func example_test158(): int {
    return fact_rec158(10) == fact_iter158(10);
}

union IntOrPtr158 {
    i: int;
    p: int*;
}

// func f158() {
//    u1 := IntOrPtr158{i = 42};
//    u2 := IntOrPtr158{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i158: int;

struct Vector158 {
    x: int;
    y: int;
}

func fact_iter158(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec158(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec158(n-1);
    }
}

const n158 = 1 + sizeof(p158);

var p158: T158*;

struct T158 {
    a: int[n158];
}


func example_test159(): int {
    return fact_rec159(10) == fact_iter159(10);
}

union IntOrPtr159 {
    i: int;
    p: int*;
}

// func f159() {
//    u1 := IntOrPtr159{i = 42};
//    u2 := IntOrPtr159{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i159: int;

struct Vector159 {
    x: int;
    y: int;
}

func fact_iter159(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec159(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec159(n-1);
    }
}

const n159 = 1 + sizeof(p159);

var p159: T159*;

struct T159 {
    a: int[n159];
}


func example_test160(): int {
    return fact_rec160(10) == fact_iter160(10);
}

union IntOrPtr160 {
    i: int;
    p: int*;
}

// func f160() {
//    u1 := IntOrPtr160{i = 42};
//    u2 := IntOrPtr160{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i160: int;

struct Vector160 {
    x: int;
    y: int;
}

func fact_iter160(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec160(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec160(n-1);
    }
}

const n160 = 1 + sizeof(p160);

var p160: T160*;

struct T160 {
    a: int[n160];
}


func example_test161(): int {
    return fact_rec161(10) == fact_iter161(10);
}

union IntOrPtr161 {
    i: int;
    p: int*;
}

// func f161() {
//    u1 := IntOrPtr161{i = 42};
//    u2 := IntOrPtr161{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i161: int;

struct Vector161 {
    x: int;
    y: int;
}

func fact_iter161(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec161(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec161(n-1);
    }
}

const n161 = 1 + sizeof(p161);

var p161: T161*;

struct T161 {
    a: int[n161];
}


func example_test162(): int {
    return fact_rec162(10) == fact_iter162(10);
}

union IntOrPtr162 {
    i: int;
    p: int*;
}

// func f162() {
//    u1 := IntOrPtr162{i = 42};
//    u2 := IntOrPtr162{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i162: int;

struct Vector162 {
    x: int;
    y: int;
}

func fact_iter162(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec162(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec162(n-1);
    }
}

const n162 = 1 + sizeof(p162);

var p162: T162*;

struct T162 {
    a: int[n162];
}


func example_test163(): int {
    return fact_rec163(10) == fact_iter163(10);
}

union IntOrPtr163 {
    i: int;
    p: int*;
}

// func f163() {
//    u1 := IntOrPtr163{i = 42};
//    u2 := IntOrPtr163{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i163: int;

struct Vector163 {
    x: int;
    y: int;
}

func fact_iter163(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec163(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec163(n-1);
    }
}

const n163 = 1 + sizeof(p163);

var p163: T163*;

struct T163 {
    a: int[n163];
}


func example_test164(): int {
    return fact_rec164(10) == fact_iter164(10);
}

union IntOrPtr164 {
    i: int;
    p: int*;
}

// func f164() {
//    u1 := IntOrPtr164{i = 42};
//    u2 := IntOrPtr164{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i164: int;

struct Vector164 {
    x: int;
    y: int;
}

func fact_iter164(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec164(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec164(n-1);
    }
}

const n164 = 1 + sizeof(p164);

var p164: T164*;

struct T164 {
    a: int[n164];
}


func example_test165(): int {
    return fact_rec165(10) == fact_iter165(10);
}

union IntOrPtr165 {
    i: int;
    p: int*;
}

// func f165() {
//    u1 := IntOrPtr165{i = 42};
//    u2 := IntOrPtr165{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i165: int;

struct Vector165 {
    x: int;
    y: int;
}

func fact_iter165(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec165(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec165(n-1);
    }
}

const n165 = 1 + sizeof(p165);

var p165: T165*;

struct T165 {
    a: int[n165];
}


func example_test166(): int {
    return fact_rec166(10) == fact_iter166(10);
}

union IntOrPtr166 {
    i: int;
    p: int*;
}

// func f166() {
//    u1 := IntOrPtr166{i = 42};
//    u2 := IntOrPtr166{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i166: int;

struct Vector166 {
    x: int;
    y: int;
}

func fact_iter166(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec166(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec166(n-1);
    }
}

const n166 = 1 + sizeof(p166);

var p166: T166*;

struct T166 {
    a: int[n166];
}


func example_test167(): int {
    return fact_rec167(10) == fact_iter167(10);
}

union IntOrPtr167 {
    i: int;
    p: int*;
}

// func f167() {
//    u1 := IntOrPtr167{i = 42};
//    u2 := IntOrPtr167{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i167: int;

struct Vector167 {
    x: int;
    y: int;
}

func fact_iter167(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec167(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec167(n-1);
    }
}

const n167 = 1 + sizeof(p167);

var p167: T167*;

struct T167 {
    a: int[n167];
}


func example_test168(): int {
    return fact_rec168(10) == fact_iter168(10);
}

union IntOrPtr168 {
    i: int;
    p: int*;
}

// func f168() {
//    u1 := IntOrPtr168{i = 42};
//    u2 := IntOrPtr168{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i168: int;

struct Vector168 {
    x: int;
    y: int;
}

func fact_iter168(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec168(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec168(n-1);
    }
}

const n168 = 1 + sizeof(p168);

var p168: T168*;

struct T168 {
    a: int[n168];
}


func example_test169(): int {
    return fact_rec169(10) == fact_iter169(10);
}

union IntOrPtr169 {
    i: int;
    p: int*;
}

// func f169() {
//    u1 := IntOrPtr169{i = 42};
//    u2 := IntOrPtr169{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i169: int;

struct Vector169 {
    x: int;
    y: int;
}

func fact_iter169(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec169(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec169(n-1);
    }
}

const n169 = 1 + sizeof(p169);

var p169: T169*;

struct T169 {
    a: int[n169];
}


func example_test170(): int {
    return fact_rec170(10) == fact_iter170(10);
}

union IntOrPtr170 {
    i: int;
    p: int*;
}

// func f170() {
//    u1 := IntOrPtr170{i = 42};
//    u2 := IntOrPtr170{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i170: int;

struct Vector170 {
    x: int;
    y: int;
}

func fact_iter170(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec170(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec170(n-1);
    }
}

const n170 = 1 + sizeof(p170);

var p170: T170*;

struct T170 {
    a: int[n170];
}


func example_test171(): int {
    return fact_rec171(10) == fact_iter171(10);
}

union IntOrPtr171 {
    i: int;
    p: int*;
}

// func f171() {
//    u1 := IntOrPtr171{i = 42};
//    u2 := IntOrPtr171{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i171: int;

struct Vector171 {
    x: int;
    y: int;
}

func fact_iter171(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec171(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec171(n-1);
    }
}

const n171 = 1 + sizeof(p171);

var p171: T171*;

struct T171 {
    a: int[n171];
}


func example_test172(): int {
    return fact_rec172(10) == fact_iter172(10);
}

union IntOrPtr172 {
    i: int;
    p: int*;
}

// func f172() {
//    u1 := IntOrPtr172{i = 42};
//    u2 := IntOrPtr172{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i172: int;

struct Vector172 {
    x: int;
    y: int;
}

func fact_iter172(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec172(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec172(n-1);
    }
}

const n172 = 1 + sizeof(p172);

var p172: T172*;

struct T172 {
    a: int[n172];
}


func example_test173(): int {
    return fact_rec173(10) == fact_iter173(10);
}

union IntOrPtr173 {
    i: int;
    p: int*;
}

// func f173() {
//    u1 := IntOrPtr173{i = 42};
//    u2 := IntOrPtr173{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i173: int;

struct Vector173 {
    x: int;
    y: int;
}

func fact_iter173(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec173(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec173(n-1);
    }
}

const n173 = 1 + sizeof(p173);

var p173: T173*;

struct T173 {
    a: int[n173];
}


func example_test174(): int {
    return fact_rec174(10) == fact_iter174(10);
}

union IntOrPtr174 {
    i: int;
    p: int*;
}

// func f174() {
//    u1 := IntOrPtr174{i = 42};
//    u2 := IntOrPtr174{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i174: int;

struct Vector174 {
    x: int;
    y: int;
}

func fact_iter174(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec174(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec174(n-1);
    }
}

const n174 = 1 + sizeof(p174);

var p174: T174*;

struct T174 {
    a: int[n174];
}


func example_test175(): int {
    return fact_rec175(10) == fact_iter175(10);
}

union IntOrPtr175 {
    i: int;
    p: int*;
}

// func f175() {
//    u1 := IntOrPtr175{i = 42};
//    u2 := IntOrPtr175{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i175: int;

struct Vector175 {
    x: int;
    y: int;
}

func fact_iter175(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec175(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec175(n-1);
    }
}

const n175 = 1 + sizeof(p175);

var p175: T175*;

struct T175 {
    a: int[n175];
}


func example_test176(): int {
    return fact_rec176(10) == fact_iter176(10);
}

union IntOrPtr176 {
    i: int;
    p: int*;
}

// func f176() {
//    u1 := IntOrPtr176{i = 42};
//    u2 := IntOrPtr176{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i176: int;

struct Vector176 {
    x: int;
    y: int;
}

func fact_iter176(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec176(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec176(n-1);
    }
}

const n176 = 1 + sizeof(p176);

var p176: T176*;

struct T176 {
    a: int[n176];
}


func example_test177(): int {
    return fact_rec177(10) == fact_iter177(10);
}

union IntOrPtr177 {
    i: int;
    p: int*;
}

// func f177() {
//    u1 := IntOrPtr177{i = 42};
//    u2 := IntOrPtr177{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i177: int;

struct Vector177 {
    x: int;
    y: int;
}

func fact_iter177(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec177(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec177(n-1);
    }
}

const n177 = 1 + sizeof(p177);

var p177: T177*;

struct T177 {
    a: int[n177];
}


func example_test178(): int {
    return fact_rec178(10) == fact_iter178(10);
}

union IntOrPtr178 {
    i: int;
    p: int*;
}

// func f178() {
//    u1 := IntOrPtr178{i = 42};
//    u2 := IntOrPtr178{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i178: int;

struct Vector178 {
    x: int;
    y: int;
}

func fact_iter178(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec178(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec178(n-1);
    }
}

const n178 = 1 + sizeof(p178);

var p178: T178*;

struct T178 {
    a: int[n178];
}


func example_test179(): int {
    return fact_rec179(10) == fact_iter179(10);
}

union IntOrPtr179 {
    i: int;
    p: int*;
}

// func f179() {
//    u1 := IntOrPtr179{i = 42};
//    u2 := IntOrPtr179{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i179: int;

struct Vector179 {
    x: int;
    y: int;
}

func fact_iter179(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec179(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec179(n-1);
    }
}

const n179 = 1 + sizeof(p179);

var p179: T179*;

struct T179 {
    a: int[n179];
}


func example_test180(): int {
    return fact_rec180(10) == fact_iter180(10);
}

union IntOrPtr180 {
    i: int;
    p: int*;
}

// func f180() {
//    u1 := IntOrPtr180{i = 42};
//    u2 := IntOrPtr180{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i180: int;

struct Vector180 {
    x: int;
    y: int;
}

func fact_iter180(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec180(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec180(n-1);
    }
}

const n180 = 1 + sizeof(p180);

var p180: T180*;

struct T180 {
    a: int[n180];
}


func example_test181(): int {
    return fact_rec181(10) == fact_iter181(10);
}

union IntOrPtr181 {
    i: int;
    p: int*;
}

// func f181() {
//    u1 := IntOrPtr181{i = 42};
//    u2 := IntOrPtr181{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i181: int;

struct Vector181 {
    x: int;
    y: int;
}

func fact_iter181(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec181(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec181(n-1);
    }
}

const n181 = 1 + sizeof(p181);

var p181: T181*;

struct T181 {
    a: int[n181];
}


func example_test182(): int {
    return fact_rec182(10) == fact_iter182(10);
}

union IntOrPtr182 {
    i: int;
    p: int*;
}

// func f182() {
//    u1 := IntOrPtr182{i = 42};
//    u2 := IntOrPtr182{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i182: int;

struct Vector182 {
    x: int;
    y: int;
}

func fact_iter182(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec182(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec182(n-1);
    }
}

const n182 = 1 + sizeof(p182);

var p182: T182*;

struct T182 {
    a: int[n182];
}


func example_test183(): int {
    return fact_rec183(10) == fact_iter183(10);
}

union IntOrPtr183 {
    i: int;
    p: int*;
}

// func f183() {
//    u1 := IntOrPtr183{i = 42};
//    u2 := IntOrPtr183{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i183: int;

struct Vector183 {
    x: int;
    y: int;
}

func fact_iter183(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec183(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec183(n-1);
    }
}

const n183 = 1 + sizeof(p183);

var p183: T183*;

struct T183 {
    a: int[n183];
}


func example_test184(): int {
    return fact_rec184(10) == fact_iter184(10);
}

union IntOrPtr184 {
    i: int;
    p: int*;
}

// func f184() {
//    u1 := IntOrPtr184{i = 42};
//    u2 := IntOrPtr184{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i184: int;

struct Vector184 {
    x: int;
    y: int;
}

func fact_iter184(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec184(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec184(n-1);
    }
}

const n184 = 1 + sizeof(p184);

var p184: T184*;

struct T184 {
    a: int[n184];
}


func example_test185(): int {
    return fact_rec185(10) == fact_iter185(10);
}

union IntOrPtr185 {
    i: int;
    p: int*;
}

// func f185() {
//    u1 := IntOrPtr185{i = 42};
//    u2 := IntOrPtr185{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i185: int;

struct Vector185 {
    x: int;
    y: int;
}

func fact_iter185(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec185(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec185(n-1);
    }
}

const n185 = 1 + sizeof(p185);

var p185: T185*;

struct T185 {
    a: int[n185];
}


func example_test186(): int {
    return fact_rec186(10) == fact_iter186(10);
}

union IntOrPtr186 {
    i: int;
    p: int*;
}

// func f186() {
//    u1 := IntOrPtr186{i = 42};
//    u2 := IntOrPtr186{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i186: int;

struct Vector186 {
    x: int;
    y: int;
}

func fact_iter186(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec186(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec186(n-1);
    }
}

const n186 = 1 + sizeof(p186);

var p186: T186*;

struct T186 {
    a: int[n186];
}


func example_test187(): int {
    return fact_rec187(10) == fact_iter187(10);
}

union IntOrPtr187 {
    i: int;
    p: int*;
}

// func f187() {
//    u1 := IntOrPtr187{i = 42};
//    u2 := IntOrPtr187{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i187: int;

struct Vector187 {
    x: int;
    y: int;
}

func fact_iter187(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec187(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec187(n-1);
    }
}

const n187 = 1 + sizeof(p187);

var p187: T187*;

struct T187 {
    a: int[n187];
}


func example_test188(): int {
    return fact_rec188(10) == fact_iter188(10);
}

union IntOrPtr188 {
    i: int;
    p: int*;
}

// func f188() {
//    u1 := IntOrPtr188{i = 42};
//    u2 := IntOrPtr188{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i188: int;

struct Vector188 {
    x: int;
    y: int;
}

func fact_iter188(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec188(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec188(n-1);
    }
}

const n188 = 1 + sizeof(p188);

var p188: T188*;

struct T188 {
    a: int[n188];
}


func example_test189(): int {
    return fact_rec189(10) == fact_iter189(10);
}

union IntOrPtr189 {
    i: int;
    p: int*;
}

// func f189() {
//    u1 := IntOrPtr189{i = 42};
//    u2 := IntOrPtr189{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i189: int;

struct Vector189 {
    x: int;
    y: int;
}

func fact_iter189(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec189(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec189(n-1);
    }
}

const n189 = 1 + sizeof(p189);

var p189: T189*;

struct T189 {
    a: int[n189];
}


func example_test190(): int {
    return fact_rec190(10) == fact_iter190(10);
}

union IntOrPtr190 {
    i: int;
    p: int*;
}

// func f190() {
//    u1 := IntOrPtr190{i = 42};
//    u2 := IntOrPtr190{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i190: int;

struct Vector190 {
    x: int;
    y: int;
}

func fact_iter190(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec190(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec190(n-1);
    }
}

const n190 = 1 + sizeof(p190);

var p190: T190*;

struct T190 {
    a: int[n190];
}


func example_test191(): int {
    return fact_rec191(10) == fact_iter191(10);
}

union IntOrPtr191 {
    i: int;
    p: int*;
}

// func f191() {
//    u1 := IntOrPtr191{i = 42};
//    u2 := IntOrPtr191{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i191: int;

struct Vector191 {
    x: int;
    y: int;
}

func fact_iter191(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec191(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec191(n-1);
    }
}

const n191 = 1 + sizeof(p191);

var p191: T191*;

struct T191 {
    a: int[n191];
}


func example_test192(): int {
    return fact_rec192(10) == fact_iter192(10);
}

union IntOrPtr192 {
    i: int;
    p: int*;
}

// func f192() {
//    u1 := IntOrPtr192{i = 42};
//    u2 := IntOrPtr192{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i192: int;

struct Vector192 {
    x: int;
    y: int;
}

func fact_iter192(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec192(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec192(n-1);
    }
}

const n192 = 1 + sizeof(p192);

var p192: T192*;

struct T192 {
    a: int[n192];
}


func example_test193(): int {
    return fact_rec193(10) == fact_iter193(10);
}

union IntOrPtr193 {
    i: int;
    p: int*;
}

// func f193() {
//    u1 := IntOrPtr193{i = 42};
//    u2 := IntOrPtr193{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i193: int;

struct Vector193 {
    x: int;
    y: int;
}

func fact_iter193(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec193(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec193(n-1);
    }
}

const n193 = 1 + sizeof(p193);

var p193: T193*;

struct T193 {
    a: int[n193];
}


func example_test194(): int {
    return fact_rec194(10) == fact_iter194(10);
}

union IntOrPtr194 {
    i: int;
    p: int*;
}

// func f194() {
//    u1 := IntOrPtr194{i = 42};
//    u2 := IntOrPtr194{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i194: int;

struct Vector194 {
    x: int;
    y: int;
}

func fact_iter194(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec194(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec194(n-1);
    }
}

const n194 = 1 + sizeof(p194);

var p194: T194*;

struct T194 {
    a: int[n194];
}


func example_test195(): int {
    return fact_rec195(10) == fact_iter195(10);
}

union IntOrPtr195 {
    i: int;
    p: int*;
}

// func f195() {
//    u1 := IntOrPtr195{i = 42};
//    u2 := IntOrPtr195{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i195: int;

struct Vector195 {
    x: int;
    y: int;
}

func fact_iter195(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec195(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec195(n-1);
    }
}

const n195 = 1 + sizeof(p195);

var p195: T195*;

struct T195 {
    a: int[n195];
}


func example_test196(): int {
    return fact_rec196(10) == fact_iter196(10);
}

union IntOrPtr196 {
    i: int;
    p: int*;
}

// func f196() {
//    u1 := IntOrPtr196{i = 42};
//    u2 := IntOrPtr196{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i196: int;

struct Vector196 {
    x: int;
    y: int;
}

func fact_iter196(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec196(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec196(n-1);
    }
}

const n196 = 1 + sizeof(p196);

var p196: T196*;

struct T196 {
    a: int[n196];
}


func example_test197(): int {
    return fact_rec197(10) == fact_iter197(10);
}

union IntOrPtr197 {
    i: int;
    p: int*;
}

// func f197() {
//    u1 := IntOrPtr197{i = 42};
//    u2 := IntOrPtr197{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i197: int;

struct Vector197 {
    x: int;
    y: int;
}

func fact_iter197(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec197(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec197(n-1);
    }
}

const n197 = 1 + sizeof(p197);

var p197: T197*;

struct T197 {
    a: int[n197];
}


func example_test198(): int {
    return fact_rec198(10) == fact_iter198(10);
}

union IntOrPtr198 {
    i: int;
    p: int*;
}

// func f198() {
//    u1 := IntOrPtr198{i = 42};
//    u2 := IntOrPtr198{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i198: int;

struct Vector198 {
    x: int;
    y: int;
}

func fact_iter198(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec198(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec198(n-1);
    }
}

const n198 = 1 + sizeof(p198);

var p198: T198*;

struct T198 {
    a: int[n198];
}


func example_test199(): int {
    return fact_rec199(10) == fact_iter199(10);
}

union IntOrPtr199 {
    i: int;
    p: int*;
}

// func f199() {
//    u1 := IntOrPtr199{i = 42};
//    u2 := IntOrPtr199{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i199: int;

struct Vector199 {
    x: int;
    y: int;
}

func fact_iter199(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec199(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec199(n-1);
    }
}

const n199 = 1 + sizeof(p199);

var p199: T199*;

struct T199 {
    a: int[n199];
}


func example_test200(): int {
    return fact_rec200(10) == fact_iter200(10);
}

union IntOrPtr200 {
    i: int;
    p: int*;
}

// func f200() {
//    u1 := IntOrPtr200{i = 42};
//    u2 := IntOrPtr200{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i200: int;

struct Vector200 {
    x: int;
    y: int;
}

func fact_iter200(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec200(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec200(n-1);
    }
}

const n200 = 1 + sizeof(p200);

var p200: T200*;

struct T200 {
    a: int[n200];
}


func example_test201(): int {
    return fact_rec201(10) == fact_iter201(10);
}

union IntOrPtr201 {
    i: int;
    p: int*;
}

// func f201() {
//    u1 := IntOrPtr201{i = 42};
//    u2 := IntOrPtr201{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i201: int;

struct Vector201 {
    x: int;
    y: int;
}

func fact_iter201(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec201(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec201(n-1);
    }
}

const n201 = 1 + sizeof(p201);

var p201: T201*;

struct T201 {
    a: int[n201];
}


func example_test202(): int {
    return fact_rec202(10) == fact_iter202(10);
}

union IntOrPtr202 {
    i: int;
    p: int*;
}

// func f202() {
//    u1 := IntOrPtr202{i = 42};
//    u2 := IntOrPtr202{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i202: int;

struct Vector202 {
    x: int;
    y: int;
}

func fact_iter202(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec202(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec202(n-1);
    }
}

const n202 = 1 + sizeof(p202);

var p202: T202*;

struct T202 {
    a: int[n202];
}


func example_test203(): int {
    return fact_rec203(10) == fact_iter203(10);
}

union IntOrPtr203 {
    i: int;
    p: int*;
}

// func f203() {
//    u1 := IntOrPtr203{i = 42};
//    u2 := IntOrPtr203{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i203: int;

struct Vector203 {
    x: int;
    y: int;
}

func fact_iter203(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec203(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec203(n-1);
    }
}

const n203 = 1 + sizeof(p203);

var p203: T203*;

struct T203 {
    a: int[n203];
}


func example_test204(): int {
    return fact_rec204(10) == fact_iter204(10);
}

union IntOrPtr204 {
    i: int;
    p: int*;
}

// func f204() {
//    u1 := IntOrPtr204{i = 42};
//    u2 := IntOrPtr204{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i204: int;

struct Vector204 {
    x: int;
    y: int;
}

func fact_iter204(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec204(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec204(n-1);
    }
}

const n204 = 1 + sizeof(p204);

var p204: T204*;

struct T204 {
    a: int[n204];
}


func example_test205(): int {
    return fact_rec205(10) == fact_iter205(10);
}

union IntOrPtr205 {
    i: int;
    p: int*;
}

// func f205() {
//    u1 := IntOrPtr205{i = 42};
//    u2 := IntOrPtr205{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i205: int;

struct Vector205 {
    x: int;
    y: int;
}

func fact_iter205(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec205(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec205(n-1);
    }
}

const n205 = 1 + sizeof(p205);

var p205: T205*;

struct T205 {
    a: int[n205];
}


func example_test206(): int {
    return fact_rec206(10) == fact_iter206(10);
}

union IntOrPtr206 {
    i: int;
    p: int*;
}

// func f206() {
//    u1 := IntOrPtr206{i = 42};
//    u2 := IntOrPtr206{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i206: int;

struct Vector206 {
    x: int;
    y: int;
}

func fact_iter206(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec206(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec206(n-1);
    }
}

const n206 = 1 + sizeof(p206);

var p206: T206*;

struct T206 {
    a: int[n206];
}


func example_test207(): int {
    return fact_rec207(10) == fact_iter207(10);
}

union IntOrPtr207 {
    i: int;
    p: int*;
}

// func f207() {
//    u1 := IntOrPtr207{i = 42};
//    u2 := IntOrPtr207{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i207: int;

struct Vector207 {
    x: int;
    y: int;
}

func fact_iter207(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec207(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec207(n-1);
    }
}

const n207 = 1 + sizeof(p207);

var p207: T207*;

struct T207 {
    a: int[n207];
}


func example_test208(): int {
    return fact_rec208(10) == fact_iter208(10);
}

union IntOrPtr208 {
    i: int;
    p: int*;
}

// func f208() {
//    u1 := IntOrPtr208{i = 42};
//    u2 := IntOrPtr208{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i208: int;

struct Vector208 {
    x: int;
    y: int;
}

func fact_iter208(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec208(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec208(n-1);
    }
}

const n208 = 1 + sizeof(p208);

var p208: T208*;

struct T208 {
    a: int[n208];
}


func example_test209(): int {
    return fact_rec209(10) == fact_iter209(10);
}

union IntOrPtr209 {
    i: int;
    p: int*;
}

// func f209() {
//    u1 := IntOrPtr209{i = 42};
//    u2 := IntOrPtr209{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i209: int;

struct Vector209 {
    x: int;
    y: int;
}

func fact_iter209(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec209(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec209(n-1);
    }
}

const n209 = 1 + sizeof(p209);

var p209: T209*;

struct T209 {
    a: int[n209];
}


func example_test210(): int {
    return fact_rec210(10) == fact_iter210(10);
}

union IntOrPtr210 {
    i: int;
    p: int*;
}

// func f210() {
//    u1 := IntOrPtr210{i = 42};
//    u2 := IntOrPtr210{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i210: int;

struct Vector210 {
    x: int;
    y: int;
}

func fact_iter210(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec210(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec210(n-1);
    }
}

const n210 = 1 + sizeof(p210);

var p210: T210*;

struct T210 {
    a: int[n210];
}


func example_test211(): int {
    return fact_rec211(10) == fact_iter211(10);
}

union IntOrPtr211 {
    i: int;
    p: int*;
}

// func f211() {
//    u1 := IntOrPtr211{i = 42};
//    u2 := IntOrPtr211{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i211: int;

struct Vector211 {
    x: int;
    y: int;
}

func fact_iter211(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec211(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec211(n-1);
    }
}

const n211 = 1 + sizeof(p211);

var p211: T211*;

struct T211 {
    a: int[n211];
}


func example_test212(): int {
    return fact_rec212(10) == fact_iter212(10);
}

union IntOrPtr212 {
    i: int;
    p: int*;
}

// func f212() {
//    u1 := IntOrPtr212{i = 42};
//    u2 := IntOrPtr212{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i212: int;

struct Vector212 {
    x: int;
    y: int;
}

func fact_iter212(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec212(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec212(n-1);
    }
}

const n212 = 1 + sizeof(p212);

var p212: T212*;

struct T212 {
    a: int[n212];
}


func example_test213(): int {
    return fact_rec213(10) == fact_iter213(10);
}

union IntOrPtr213 {
    i: int;
    p: int*;
}

// func f213() {
//    u1 := IntOrPtr213{i = 42};
//    u2 := IntOrPtr213{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i213: int;

struct Vector213 {
    x: int;
    y: int;
}

func fact_iter213(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec213(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec213(n-1);
    }
}

const n213 = 1 + sizeof(p213);

var p213: T213*;

struct T213 {
    a: int[n213];
}


func example_test214(): int {
    return fact_rec214(10) == fact_iter214(10);
}

union IntOrPtr214 {
    i: int;
    p: int*;
}

// func f214() {
//    u1 := IntOrPtr214{i = 42};
//    u2 := IntOrPtr214{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i214: int;

struct Vector214 {
    x: int;
    y: int;
}

func fact_iter214(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec214(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec214(n-1);
    }
}

const n214 = 1 + sizeof(p214);

var p214: T214*;

struct T214 {
    a: int[n214];
}


func example_test215(): int {
    return fact_rec215(10) == fact_iter215(10);
}

union IntOrPtr215 {
    i: int;
    p: int*;
}

// func f215() {
//    u1 := IntOrPtr215{i = 42};
//    u2 := IntOrPtr215{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i215: int;

struct Vector215 {
    x: int;
    y: int;
}

func fact_iter215(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec215(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec215(n-1);
    }
}

const n215 = 1 + sizeof(p215);

var p215: T215*;

struct T215 {
    a: int[n215];
}


func example_test216(): int {
    return fact_rec216(10) == fact_iter216(10);
}

union IntOrPtr216 {
    i: int;
    p: int*;
}

// func f216() {
//    u1 := IntOrPtr216{i = 42};
//    u2 := IntOrPtr216{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i216: int;

struct Vector216 {
    x: int;
    y: int;
}

func fact_iter216(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec216(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec216(n-1);
    }
}

const n216 = 1 + sizeof(p216);

var p216: T216*;

struct T216 {
    a: int[n216];
}


func example_test217(): int {
    return fact_rec217(10) == fact_iter217(10);
}

union IntOrPtr217 {
    i: int;
    p: int*;
}

// func f217() {
//    u1 := IntOrPtr217{i = 42};
//    u2 := IntOrPtr217{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i217: int;

struct Vector217 {
    x: int;
    y: int;
}

func fact_iter217(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec217(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec217(n-1);
    }
}

const n217 = 1 + sizeof(p217);

var p217: T217*;

struct T217 {
    a: int[n217];
}


func example_test218(): int {
    return fact_rec218(10) == fact_iter218(10);
}

union IntOrPtr218 {
    i: int;
    p: int*;
}

// func f218() {
//    u1 := IntOrPtr218{i = 42};
//    u2 := IntOrPtr218{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i218: int;

struct Vector218 {
    x: int;
    y: int;
}

func fact_iter218(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec218(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec218(n-1);
    }
}

const n218 = 1 + sizeof(p218);

var p218: T218*;

struct T218 {
    a: int[n218];
}


func example_test219(): int {
    return fact_rec219(10) == fact_iter219(10);
}

union IntOrPtr219 {
    i: int;
    p: int*;
}

// func f219() {
//    u1 := IntOrPtr219{i = 42};
//    u2 := IntOrPtr219{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i219: int;

struct Vector219 {
    x: int;
    y: int;
}

func fact_iter219(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec219(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec219(n-1);
    }
}

const n219 = 1 + sizeof(p219);

var p219: T219*;

struct T219 {
    a: int[n219];
}


func example_test220(): int {
    return fact_rec220(10) == fact_iter220(10);
}

union IntOrPtr220 {
    i: int;
    p: int*;
}

// func f220() {
//    u1 := IntOrPtr220{i = 42};
//    u2 := IntOrPtr220{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i220: int;

struct Vector220 {
    x: int;
    y: int;
}

func fact_iter220(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec220(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec220(n-1);
    }
}

const n220 = 1 + sizeof(p220);

var p220: T220*;

struct T220 {
    a: int[n220];
}


func example_test221(): int {
    return fact_rec221(10) == fact_iter221(10);
}

union IntOrPtr221 {
    i: int;
    p: int*;
}

// func f221() {
//    u1 := IntOrPtr221{i = 42};
//    u2 := IntOrPtr221{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i221: int;

struct Vector221 {
    x: int;
    y: int;
}

func fact_iter221(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec221(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec221(n-1);
    }
}

const n221 = 1 + sizeof(p221);

var p221: T221*;

struct T221 {
    a: int[n221];
}


func example_test222(): int {
    return fact_rec222(10) == fact_iter222(10);
}

union IntOrPtr222 {
    i: int;
    p: int*;
}

// func f222() {
//    u1 := IntOrPtr222{i = 42};
//    u2 := IntOrPtr222{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i222: int;

struct Vector222 {
    x: int;
    y: int;
}

func fact_iter222(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec222(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec222(n-1);
    }
}

const n222 = 1 + sizeof(p222);

var p222: T222*;

struct T222 {
    a: int[n222];
}


func example_test223(): int {
    return fact_rec223(10) == fact_iter223(10);
}

union IntOrPtr223 {
    i: int;
    p: int*;
}

// func f223() {
//    u1 := IntOrPtr223{i = 42};
//    u2 := IntOrPtr223{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i223: int;

struct Vector223 {
    x: int;
    y: int;
}

func fact_iter223(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec223(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec223(n-1);
    }
}

const n223 = 1 + sizeof(p223);

var p223: T223*;

struct T223 {
    a: int[n223];
}


func example_test224(): int {
    return fact_rec224(10) == fact_iter224(10);
}

union IntOrPtr224 {
    i: int;
    p: int*;
}

// func f224() {
//    u1 := IntOrPtr224{i = 42};
//    u2 := IntOrPtr224{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i224: int;

struct Vector224 {
    x: int;
    y: int;
}

func fact_iter224(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec224(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec224(n-1);
    }
}

const n224 = 1 + sizeof(p224);

var p224: T224*;

struct T224 {
    a: int[n224];
}


func example_test225(): int {
    return fact_rec225(10) == fact_iter225(10);
}

union IntOrPtr225 {
    i: int;
    p: int*;
}

// func f225() {
//    u1 := IntOrPtr225{i = 42};
//    u2 := IntOrPtr225{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i225: int;

struct Vector225 {
    x: int;
    y: int;
}

func fact_iter225(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec225(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec225(n-1);
    }
}

const n225 = 1 + sizeof(p225);

var p225: T225*;

struct T225 {
    a: int[n225];
}


func example_test226(): int {
    return fact_rec226(10) == fact_iter226(10);
}

union IntOrPtr226 {
    i: int;
    p: int*;
}

// func f226() {
//    u1 := IntOrPtr226{i = 42};
//    u2 := IntOrPtr226{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i226: int;

struct Vector226 {
    x: int;
    y: int;
}

func fact_iter226(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec226(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec226(n-1);
    }
}

const n226 = 1 + sizeof(p226);

var p226: T226*;

struct T226 {
    a: int[n226];
}


func example_test227(): int {
    return fact_rec227(10) == fact_iter227(10);
}

union IntOrPtr227 {
    i: int;
    p: int*;
}

// func f227() {
//    u1 := IntOrPtr227{i = 42};
//    u2 := IntOrPtr227{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i227: int;

struct Vector227 {
    x: int;
    y: int;
}

func fact_iter227(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec227(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec227(n-1);
    }
}

const n227 = 1 + sizeof(p227);

var p227: T227*;

struct T227 {
    a: int[n227];
}


func example_test228(): int {
    return fact_rec228(10) == fact_iter228(10);
}

union IntOrPtr228 {
    i: int;
    p: int*;
}

// func f228() {
//    u1 := IntOrPtr228{i = 42};
//    u2 := IntOrPtr228{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i228: int;

struct Vector228 {
    x: int;
    y: int;
}

func fact_iter228(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec228(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec228(n-1);
    }
}

const n228 = 1 + sizeof(p228);

var p228: T228*;

struct T228 {
    a: int[n228];
}


func example_test229(): int {
    return fact_rec229(10) == fact_iter229(10);
}

union IntOrPtr229 {
    i: int;
    p: int*;
}

// func f229() {
//    u1 := IntOrPtr229{i = 42};
//    u2 := IntOrPtr229{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i229: int;

struct Vector229 {
    x: int;
    y: int;
}

func fact_iter229(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec229(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec229(n-1);
    }
}

const n229 = 1 + sizeof(p229);

var p229: T229*;

struct T229 {
    a: int[n229];
}


func example_test230(): int {
    return fact_rec230(10) == fact_iter230(10);
}

union IntOrPtr230 {
    i: int;
    p: int*;
}

// func f230() {
//    u1 := IntOrPtr230{i = 42};
//    u2 := IntOrPtr230{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i230: int;

struct Vector230 {
    x: int;
    y: int;
}

func fact_iter230(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec230(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec230(n-1);
    }
}

const n230 = 1 + sizeof(p230);

var p230: T230*;

struct T230 {
    a: int[n230];
}


func example_test231(): int {
    return fact_rec231(10) == fact_iter231(10);
}

union IntOrPtr231 {
    i: int;
    p: int*;
}

// func f231() {
//    u1 := IntOrPtr231{i = 42};
//    u2 := IntOrPtr231{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i231: int;

struct Vector231 {
    x: int;
    y: int;
}

func fact_iter231(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec231(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec231(n-1);
    }
}

const n231 = 1 + sizeof(p231);

var p231: T231*;

struct T231 {
    a: int[n231];
}


func example_test232(): int {
    return fact_rec232(10) == fact_iter232(10);
}

union IntOrPtr232 {
    i: int;
    p: int*;
}

// func f232() {
//    u1 := IntOrPtr232{i = 42};
//    u2 := IntOrPtr232{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i232: int;

struct Vector232 {
    x: int;
    y: int;
}

func fact_iter232(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec232(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec232(n-1);
    }
}

const n232 = 1 + sizeof(p232);

var p232: T232*;

struct T232 {
    a: int[n232];
}


func example_test233(): int {
    return fact_rec233(10) == fact_iter233(10);
}

union IntOrPtr233 {
    i: int;
    p: int*;
}

// func f233() {
//    u1 := IntOrPtr233{i = 42};
//    u2 := IntOrPtr233{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i233: int;

struct Vector233 {
    x: int;
    y: int;
}

func fact_iter233(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec233(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec233(n-1);
    }
}

const n233 = 1 + sizeof(p233);

var p233: T233*;

struct T233 {
    a: int[n233];
}


func example_test234(): int {
    return fact_rec234(10) == fact_iter234(10);
}

union IntOrPtr234 {
    i: int;
    p: int*;
}

// func f234() {
//    u1 := IntOrPtr234{i = 42};
//    u2 := IntOrPtr234{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i234: int;

struct Vector234 {
    x: int;
    y: int;
}

func fact_iter234(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec234(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec234(n-1);
    }
}

const n234 = 1 + sizeof(p234);

var p234: T234*;

struct T234 {
    a: int[n234];
}


func example_test235(): int {
    return fact_rec235(10) == fact_iter235(10);
}

union IntOrPtr235 {
    i: int;
    p: int*;
}

// func f235() {
//    u1 := IntOrPtr235{i = 42};
//    u2 := IntOrPtr235{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i235: int;

struct Vector235 {
    x: int;
    y: int;
}

func fact_iter235(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec235(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec235(n-1);
    }
}

const n235 = 1 + sizeof(p235);

var p235: T235*;

struct T235 {
    a: int[n235];
}


func example_test236(): int {
    return fact_rec236(10) == fact_iter236(10);
}

union IntOrPtr236 {
    i: int;
    p: int*;
}

// func f236() {
//    u1 := IntOrPtr236{i = 42};
//    u2 := IntOrPtr236{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i236: int;

struct Vector236 {
    x: int;
    y: int;
}

func fact_iter236(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec236(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec236(n-1);
    }
}

const n236 = 1 + sizeof(p236);

var p236: T236*;

struct T236 {
    a: int[n236];
}


func example_test237(): int {
    return fact_rec237(10) == fact_iter237(10);
}

union IntOrPtr237 {
    i: int;
    p: int*;
}

// func f237() {
//    u1 := IntOrPtr237{i = 42};
//    u2 := IntOrPtr237{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i237: int;

struct Vector237 {
    x: int;
    y: int;
}

func fact_iter237(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec237(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec237(n-1);
    }
}

const n237 = 1 + sizeof(p237);

var p237: T237*;

struct T237 {
    a: int[n237];
}


func example_test238(): int {
    return fact_rec238(10) == fact_iter238(10);
}

union IntOrPtr238 {
    i: int;
    p: int*;
}

// func f238() {
//    u1 := IntOrPtr238{i = 42};
//    u2 := IntOrPtr238{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i238: int;

struct Vector238 {
    x: int;
    y: int;
}

func fact_iter238(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec238(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec238(n-1);
    }
}

const n238 = 1 + sizeof(p238);

var p238: T238*;

struct T238 {
    a: int[n238];
}


func example_test239(): int {
    return fact_rec239(10) == fact_iter239(10);
}

union IntOrPtr239 {
    i: int;
    p: int*;
}

// func f239() {
//    u1 := IntOrPtr239{i = 42};
//    u2 := IntOrPtr239{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i239: int;

struct Vector239 {
    x: int;
    y: int;
}

func fact_iter239(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec239(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec239(n-1);
    }
}

const n239 = 1 + sizeof(p239);

var p239: T239*;

struct T239 {
    a: int[n239];
}


func example_test240(): int {
    return fact_rec240(10) == fact_iter240(10);
}

union IntOrPtr240 {
    i: int;
    p: int*;
}

// func f240() {
//    u1 := IntOrPtr240{i = 42};
//    u2 := IntOrPtr240{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i240: int;

struct Vector240 {
    x: int;
    y: int;
}

func fact_iter240(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec240(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec240(n-1);
    }
}

const n240 = 1 + sizeof(p240);

var p240: T240*;

struct T240 {
    a: int[n240];
}


func example_test241(): int {
    return fact_rec241(10) == fact_iter241(10);
}

union IntOrPtr241 {
    i: int;
    p: int*;
}

// func f241() {
//    u1 := IntOrPtr241{i = 42};
//    u2 := IntOrPtr241{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i241: int;

struct Vector241 {
    x: int;
    y: int;
}

func fact_iter241(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec241(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec241(n-1);
    }
}

const n241 = 1 + sizeof(p241);

var p241: T241*;

struct T241 {
    a: int[n241];
}


func example_test242(): int {
    return fact_rec242(10) == fact_iter242(10);
}

union IntOrPtr242 {
    i: int;
    p: int*;
}

// func f242() {
//    u1 := IntOrPtr242{i = 42};
//    u2 := IntOrPtr242{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i242: int;

struct Vector242 {
    x: int;
    y: int;
}

func fact_iter242(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec242(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec242(n-1);
    }
}

const n242 = 1 + sizeof(p242);

var p242: T242*;

struct T242 {
    a: int[n242];
}


func example_test243(): int {
    return fact_rec243(10) == fact_iter243(10);
}

union IntOrPtr243 {
    i: int;
    p: int*;
}

// func f243() {
//    u1 := IntOrPtr243{i = 42};
//    u2 := IntOrPtr243{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i243: int;

struct Vector243 {
    x: int;
    y: int;
}

func fact_iter243(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec243(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec243(n-1);
    }
}

const n243 = 1 + sizeof(p243);

var p243: T243*;

struct T243 {
    a: int[n243];
}


func example_test244(): int {
    return fact_rec244(10) == fact_iter244(10);
}

union IntOrPtr244 {
    i: int;
    p: int*;
}

// func f244() {
//    u1 := IntOrPtr244{i = 42};
//    u2 := IntOrPtr244{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i244: int;

struct Vector244 {
    x: int;
    y: int;
}

func fact_iter244(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec244(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec244(n-1);
    }
}

const n244 = 1 + sizeof(p244);

var p244: T244*;

struct T244 {
    a: int[n244];
}


func example_test245(): int {
    return fact_rec245(10) == fact_iter245(10);
}

union IntOrPtr245 {
    i: int;
    p: int*;
}

// func f245() {
//    u1 := IntOrPtr245{i = 42};
//    u2 := IntOrPtr245{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i245: int;

struct Vector245 {
    x: int;
    y: int;
}

func fact_iter245(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec245(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec245(n-1);
    }
}

const n245 = 1 + sizeof(p245);

var p245: T245*;

struct T245 {
    a: int[n245];
}


func example_test246(): int {
    return fact_rec246(10) == fact_iter246(10);
}

union IntOrPtr246 {
    i: int;
    p: int*;
}

// func f246() {
//    u1 := IntOrPtr246{i = 42};
//    u2 := IntOrPtr246{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i246: int;

struct Vector246 {
    x: int;
    y: int;
}

func fact_iter246(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec246(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec246(n-1);
    }
}

const n246 = 1 + sizeof(p246);

var p246: T246*;

struct T246 {
    a: int[n246];
}


func example_test247(): int {
    return fact_rec247(10) == fact_iter247(10);
}

union IntOrPtr247 {
    i: int;
    p: int*;
}

// func f247() {
//    u1 := IntOrPtr247{i = 42};
//    u2 := IntOrPtr247{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i247: int;

struct Vector247 {
    x: int;
    y: int;
}

func fact_iter247(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec247(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec247(n-1);
    }
}

const n247 = 1 + sizeof(p247);

var p247: T247*;

struct T247 {
    a: int[n247];
}


func example_test248(): int {
    return fact_rec248(10) == fact_iter248(10);
}

union IntOrPtr248 {
    i: int;
    p: int*;
}

// func f248() {
//    u1 := IntOrPtr248{i = 42};
//    u2 := IntOrPtr248{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i248: int;

struct Vector248 {
    x: int;
    y: int;
}

func fact_iter248(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec248(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec248(n-1);
    }
}

const n248 = 1 + sizeof(p248);

var p248: T248*;

struct T248 {
    a: int[n248];
}


func example_test249(): int {
    return fact_rec249(10) == fact_iter249(10);
}

union IntOrPtr249 {
    i: int;
    p: int*;
}

// func f249() {
//    u1 := IntOrPtr249{i = 42};
//    u2 := IntOrPtr249{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i249: int;

struct Vector249 {
    x: int;
    y: int;
}

func fact_iter249(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec249(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec249(n-1);
    }
}

const n249 = 1 + sizeof(p249);

var p249: T249*;

struct T249 {
    a: int[n249];
}


func example_test250(): int {
    return fact_rec250(10) == fact_iter250(10);
}

union IntOrPtr250 {
    i: int;
    p: int*;
}

// func f250() {
//    u1 := IntOrPtr250{i = 42};
//    u2 := IntOrPtr250{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i250: int;

struct Vector250 {
    x: int;
    y: int;
}

func fact_iter250(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec250(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec250(n-1);
    }
}

const n250 = 1 + sizeof(p250);

var p250: T250*;

struct T250 {
    a: int[n250];
}


func example_test251(): int {
    return fact_rec251(10) == fact_iter251(10);
}

union IntOrPtr251 {
    i: int;
    p: int*;
}

// func f251() {
//    u1 := IntOrPtr251{i = 42};
//    u2 := IntOrPtr251{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i251: int;

struct Vector251 {
    x: int;
    y: int;
}

func fact_iter251(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec251(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec251(n-1);
    }
}

const n251 = 1 + sizeof(p251);

var p251: T251*;

struct T251 {
    a: int[n251];
}


func example_test252(): int {
    return fact_rec252(10) == fact_iter252(10);
}

union IntOrPtr252 {
    i: int;
    p: int*;
}

// func f252() {
//    u1 := IntOrPtr252{i = 42};
//    u2 := IntOrPtr252{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i252: int;

struct Vector252 {
    x: int;
    y: int;
}

func fact_iter252(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec252(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec252(n-1);
    }
}

const n252 = 1 + sizeof(p252);

var p252: T252*;

struct T252 {
    a: int[n252];
}


func example_test253(): int {
    return fact_rec253(10) == fact_iter253(10);
}

union IntOrPtr253 {
    i: int;
    p: int*;
}

// func f253() {
//    u1 := IntOrPtr253{i = 42};
//    u2 := IntOrPtr253{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i253: int;

struct Vector253 {
    x: int;
    y: int;
}

func fact_iter253(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec253(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec253(n-1);
    }
}

const n253 = 1 + sizeof(p253);

var p253: T253*;

struct T253 {
    a: int[n253];
}


func example_test254(): int {
    return fact_rec254(10) == fact_iter254(10);
}

union IntOrPtr254 {
    i: int;
    p: int*;
}

// func f254() {
//    u1 := IntOrPtr254{i = 42};
//    u2 := IntOrPtr254{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i254: int;

struct Vector254 {
    x: int;
    y: int;
}

func fact_iter254(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec254(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec254(n-1);
    }
}

const n254 = 1 + sizeof(p254);

var p254: T254*;

struct T254 {
    a: int[n254];
}


func example_test255(): int {
    return fact_rec255(10) == fact_iter255(10);
}

union IntOrPtr255 {
    i: int;
    p: int*;
}

// func f255() {
//    u1 := IntOrPtr255{i = 42};
//    u2 := IntOrPtr255{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i255: int;

struct Vector255 {
    x: int;
    y: int;
}

func fact_iter255(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec255(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec255(n-1);
    }
}

const n255 = 1 + sizeof(p255);

var p255: T255*;

struct T255 {
    a: int[n255];
}


func example_test256(): int {
    return fact_rec256(10) == fact_iter256(10);
}

union IntOrPtr256 {
    i: int;
    p: int*;
}

// func f256() {
//    u1 := IntOrPtr256{i = 42};
//    u2 := IntOrPtr256{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i256: int;

struct Vector256 {
    x: int;
    y: int;
}

func fact_iter256(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec256(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec256(n-1);
    }
}

const n256 = 1 + sizeof(p256);

var p256: T256*;

struct T256 {
    a: int[n256];
}


func example_test257(): int {
    return fact_rec257(10) == fact_iter257(10);
}

union IntOrPtr257 {
    i: int;
    p: int*;
}

// func f257() {
//    u1 := IntOrPtr257{i = 42};
//    u2 := IntOrPtr257{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i257: int;

struct Vector257 {
    x: int;
    y: int;
}

func fact_iter257(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec257(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec257(n-1);
    }
}

const n257 = 1 + sizeof(p257);

var p257: T257*;

struct T257 {
    a: int[n257];
}


func example_test258(): int {
    return fact_rec258(10) == fact_iter258(10);
}

union IntOrPtr258 {
    i: int;
    p: int*;
}

// func f258() {
//    u1 := IntOrPtr258{i = 42};
//    u2 := IntOrPtr258{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i258: int;

struct Vector258 {
    x: int;
    y: int;
}

func fact_iter258(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec258(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec258(n-1);
    }
}

const n258 = 1 + sizeof(p258);

var p258: T258*;

struct T258 {
    a: int[n258];
}


func example_test259(): int {
    return fact_rec259(10) == fact_iter259(10);
}

union IntOrPtr259 {
    i: int;
    p: int*;
}

// func f259() {
//    u1 := IntOrPtr259{i = 42};
//    u2 := IntOrPtr259{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i259: int;

struct Vector259 {
    x: int;
    y: int;
}

func fact_iter259(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec259(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec259(n-1);
    }
}

const n259 = 1 + sizeof(p259);

var p259: T259*;

struct T259 {
    a: int[n259];
}


func example_test260(): int {
    return fact_rec260(10) == fact_iter260(10);
}

union IntOrPtr260 {
    i: int;
    p: int*;
}

// func f260() {
//    u1 := IntOrPtr260{i = 42};
//    u2 := IntOrPtr260{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i260: int;

struct Vector260 {
    x: int;
    y: int;
}

func fact_iter260(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec260(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec260(n-1);
    }
}

const n260 = 1 + sizeof(p260);

var p260: T260*;

struct T260 {
    a: int[n260];
}


func example_test261(): int {
    return fact_rec261(10) == fact_iter261(10);
}

union IntOrPtr261 {
    i: int;
    p: int*;
}

// func f261() {
//    u1 := IntOrPtr261{i = 42};
//    u2 := IntOrPtr261{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i261: int;

struct Vector261 {
    x: int;
    y: int;
}

func fact_iter261(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec261(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec261(n-1);
    }
}

const n261 = 1 + sizeof(p261);

var p261: T261*;

struct T261 {
    a: int[n261];
}


func example_test262(): int {
    return fact_rec262(10) == fact_iter262(10);
}

union IntOrPtr262 {
    i: int;
    p: int*;
}

// func f262() {
//    u1 := IntOrPtr262{i = 42};
//    u2 := IntOrPtr262{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i262: int;

struct Vector262 {
    x: int;
    y: int;
}

func fact_iter262(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec262(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec262(n-1);
    }
}

const n262 = 1 + sizeof(p262);

var p262: T262*;

struct T262 {
    a: int[n262];
}


func example_test263(): int {
    return fact_rec263(10) == fact_iter263(10);
}

union IntOrPtr263 {
    i: int;
    p: int*;
}

// func f263() {
//    u1 := IntOrPtr263{i = 42};
//    u2 := IntOrPtr263{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i263: int;

struct Vector263 {
    x: int;
    y: int;
}

func fact_iter263(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec263(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec263(n-1);
    }
}

const n263 = 1 + sizeof(p263);

var p263: T263*;

struct T263 {
    a: int[n263];
}


func example_test264(): int {
    return fact_rec264(10) == fact_iter264(10);
}

union IntOrPtr264 {
    i: int;
    p: int*;
}

// func f264() {
//    u1 := IntOrPtr264{i = 42};
//    u2 := IntOrPtr264{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i264: int;

struct Vector264 {
    x: int;
    y: int;
}

func fact_iter264(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec264(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec264(n-1);
    }
}

const n264 = 1 + sizeof(p264);

var p264: T264*;

struct T264 {
    a: int[n264];
}


func example_test265(): int {
    return fact_rec265(10) == fact_iter265(10);
}

union IntOrPtr265 {
    i: int;
    p: int*;
}

// func f265() {
//    u1 := IntOrPtr265{i = 42};
//    u2 := IntOrPtr265{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i265: int;

struct Vector265 {
    x: int;
    y: int;
}

func fact_iter265(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec265(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec265(n-1);
    }
}

const n265 = 1 + sizeof(p265);

var p265: T265*;

struct T265 {
    a: int[n265];
}


func example_test266(): int {
    return fact_rec266(10) == fact_iter266(10);
}

union IntOrPtr266 {
    i: int;
    p: int*;
}

// func f266() {
//    u1 := IntOrPtr266{i = 42};
//    u2 := IntOrPtr266{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i266: int;

struct Vector266 {
    x: int;
    y: int;
}

func fact_iter266(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec266(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec266(n-1);
    }
}

const n266 = 1 + sizeof(p266);

var p266: T266*;

struct T266 {
    a: int[n266];
}


func example_test267(): int {
    return fact_rec267(10) == fact_iter267(10);
}

union IntOrPtr267 {
    i: int;
    p: int*;
}

// func f267() {
//    u1 := IntOrPtr267{i = 42};
//    u2 := IntOrPtr267{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i267: int;

struct Vector267 {
    x: int;
    y: int;
}

func fact_iter267(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec267(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec267(n-1);
    }
}

const n267 = 1 + sizeof(p267);

var p267: T267*;

struct T267 {
    a: int[n267];
}


func example_test268(): int {
    return fact_rec268(10) == fact_iter268(10);
}

union IntOrPtr268 {
    i: int;
    p: int*;
}

// func f268() {
//    u1 := IntOrPtr268{i = 42};
//    u2 := IntOrPtr268{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i268: int;

struct Vector268 {
    x: int;
    y: int;
}

func fact_iter268(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec268(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec268(n-1);
    }
}

const n268 = 1 + sizeof(p268);

var p268: T268*;

struct T268 {
    a: int[n268];
}


func example_test269(): int {
    return fact_rec269(10) == fact_iter269(10);
}

union IntOrPtr269 {
    i: int;
    p: int*;
}

// func f269() {
//    u1 := IntOrPtr269{i = 42};
//    u2 := IntOrPtr269{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i269: int;

struct Vector269 {
    x: int;
    y: int;
}

func fact_iter269(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec269(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec269(n-1);
    }
}

const n269 = 1 + sizeof(p269);

var p269: T269*;

struct T269 {
    a: int[n269];
}


func example_test270(): int {
    return fact_rec270(10) == fact_iter270(10);
}

union IntOrPtr270 {
    i: int;
    p: int*;
}

// func f270() {
//    u1 := IntOrPtr270{i = 42};
//    u2 := IntOrPtr270{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i270: int;

struct Vector270 {
    x: int;
    y: int;
}

func fact_iter270(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec270(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec270(n-1);
    }
}

const n270 = 1 + sizeof(p270);

var p270: T270*;

struct T270 {
    a: int[n270];
}


func example_test271(): int {
    return fact_rec271(10) == fact_iter271(10);
}

union IntOrPtr271 {
    i: int;
    p: int*;
}

// func f271() {
//    u1 := IntOrPtr271{i = 42};
//    u2 := IntOrPtr271{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i271: int;

struct Vector271 {
    x: int;
    y: int;
}

func fact_iter271(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec271(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec271(n-1);
    }
}

const n271 = 1 + sizeof(p271);

var p271: T271*;

struct T271 {
    a: int[n271];
}


func example_test272(): int {
    return fact_rec272(10) == fact_iter272(10);
}

union IntOrPtr272 {
    i: int;
    p: int*;
}

// func f272() {
//    u1 := IntOrPtr272{i = 42};
//    u2 := IntOrPtr272{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i272: int;

struct Vector272 {
    x: int;
    y: int;
}

func fact_iter272(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec272(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec272(n-1);
    }
}

const n272 = 1 + sizeof(p272);

var p272: T272*;

struct T272 {
    a: int[n272];
}


func example_test273(): int {
    return fact_rec273(10) == fact_iter273(10);
}

union IntOrPtr273 {
    i: int;
    p: int*;
}

// func f273() {
//    u1 := IntOrPtr273{i = 42};
//    u2 := IntOrPtr273{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i273: int;

struct Vector273 {
    x: int;
    y: int;
}

func fact_iter273(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec273(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec273(n-1);
    }
}

const n273 = 1 + sizeof(p273);

var p273: T273*;

struct T273 {
    a: int[n273];
}


func example_test274(): int {
    return fact_rec274(10) == fact_iter274(10);
}

union IntOrPtr274 {
    i: int;
    p: int*;
}

// func f274() {
//    u1 := IntOrPtr274{i = 42};
//    u2 := IntOrPtr274{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i274: int;

struct Vector274 {
    x: int;
    y: int;
}

func fact_iter274(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec274(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec274(n-1);
    }
}

const n274 = 1 + sizeof(p274);

var p274: T274*;

struct T274 {
    a: int[n274];
}


func example_test275(): int {
    return fact_rec275(10) == fact_iter275(10);
}

union IntOrPtr275 {
    i: int;
    p: int*;
}

// func f275() {
//    u1 := IntOrPtr275{i = 42};
//    u2 := IntOrPtr275{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i275: int;

struct Vector275 {
    x: int;
    y: int;
}

func fact_iter275(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec275(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec275(n-1);
    }
}

const n275 = 1 + sizeof(p275);

var p275: T275*;

struct T275 {
    a: int[n275];
}


func example_test276(): int {
    return fact_rec276(10) == fact_iter276(10);
}

union IntOrPtr276 {
    i: int;
    p: int*;
}

// func f276() {
//    u1 := IntOrPtr276{i = 42};
//    u2 := IntOrPtr276{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i276: int;

struct Vector276 {
    x: int;
    y: int;
}

func fact_iter276(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec276(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec276(n-1);
    }
}

const n276 = 1 + sizeof(p276);

var p276: T276*;

struct T276 {
    a: int[n276];
}


func example_test277(): int {
    return fact_rec277(10) == fact_iter277(10);
}

union IntOrPtr277 {
    i: int;
    p: int*;
}

// func f277() {
//    u1 := IntOrPtr277{i = 42};
//    u2 := IntOrPtr277{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i277: int;

struct Vector277 {
    x: int;
    y: int;
}

func fact_iter277(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec277(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec277(n-1);
    }
}

const n277 = 1 + sizeof(p277);

var p277: T277*;

struct T277 {
    a: int[n277];
}


func example_test278(): int {
    return fact_rec278(10) == fact_iter278(10);
}

union IntOrPtr278 {
    i: int;
    p: int*;
}

// func f278() {
//    u1 := IntOrPtr278{i = 42};
//    u2 := IntOrPtr278{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i278: int;

struct Vector278 {
    x: int;
    y: int;
}

func fact_iter278(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec278(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec278(n-1);
    }
}

const n278 = 1 + sizeof(p278);

var p278: T278*;

struct T278 {
    a: int[n278];
}


func example_test279(): int {
    return fact_rec279(10) == fact_iter279(10);
}

union IntOrPtr279 {
    i: int;
    p: int*;
}

// func f279() {
//    u1 := IntOrPtr279{i = 42};
//    u2 := IntOrPtr279{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i279: int;

struct Vector279 {
    x: int;
    y: int;
}

func fact_iter279(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec279(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec279(n-1);
    }
}

const n279 = 1 + sizeof(p279);

var p279: T279*;

struct T279 {
    a: int[n279];
}


func example_test280(): int {
    return fact_rec280(10) == fact_iter280(10);
}

union IntOrPtr280 {
    i: int;
    p: int*;
}

// func f280() {
//    u1 := IntOrPtr280{i = 42};
//    u2 := IntOrPtr280{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i280: int;

struct Vector280 {
    x: int;
    y: int;
}

func fact_iter280(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec280(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec280(n-1);
    }
}

const n280 = 1 + sizeof(p280);

var p280: T280*;

struct T280 {
    a: int[n280];
}


func example_test281(): int {
    return fact_rec281(10) == fact_iter281(10);
}

union IntOrPtr281 {
    i: int;
    p: int*;
}

// func f281() {
//    u1 := IntOrPtr281{i = 42};
//    u2 := IntOrPtr281{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i281: int;

struct Vector281 {
    x: int;
    y: int;
}

func fact_iter281(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec281(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec281(n-1);
    }
}

const n281 = 1 + sizeof(p281);

var p281: T281*;

struct T281 {
    a: int[n281];
}


func example_test282(): int {
    return fact_rec282(10) == fact_iter282(10);
}

union IntOrPtr282 {
    i: int;
    p: int*;
}

// func f282() {
//    u1 := IntOrPtr282{i = 42};
//    u2 := IntOrPtr282{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i282: int;

struct Vector282 {
    x: int;
    y: int;
}

func fact_iter282(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec282(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec282(n-1);
    }
}

const n282 = 1 + sizeof(p282);

var p282: T282*;

struct T282 {
    a: int[n282];
}


func example_test283(): int {
    return fact_rec283(10) == fact_iter283(10);
}

union IntOrPtr283 {
    i: int;
    p: int*;
}

// func f283() {
//    u1 := IntOrPtr283{i = 42};
//    u2 := IntOrPtr283{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i283: int;

struct Vector283 {
    x: int;
    y: int;
}

func fact_iter283(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec283(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec283(n-1);
    }
}

const n283 = 1 + sizeof(p283);

var p283: T283*;

struct T283 {
    a: int[n283];
}


func example_test284(): int {
    return fact_rec284(10) == fact_iter284(10);
}

union IntOrPtr284 {
    i: int;
    p: int*;
}

// func f284() {
//    u1 := IntOrPtr284{i = 42};
//    u2 := IntOrPtr284{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i284: int;

struct Vector284 {
    x: int;
    y: int;
}

func fact_iter284(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec284(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec284(n-1);
    }
}

const n284 = 1 + sizeof(p284);

var p284: T284*;

struct T284 {
    a: int[n284];
}


func example_test285(): int {
    return fact_rec285(10) == fact_iter285(10);
}

union IntOrPtr285 {
    i: int;
    p: int*;
}

// func f285() {
//    u1 := IntOrPtr285{i = 42};
//    u2 := IntOrPtr285{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i285: int;

struct Vector285 {
    x: int;
    y: int;
}

func fact_iter285(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec285(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec285(n-1);
    }
}

const n285 = 1 + sizeof(p285);

var p285: T285*;

struct T285 {
    a: int[n285];
}


func example_test286(): int {
    return fact_rec286(10) == fact_iter286(10);
}

union IntOrPtr286 {
    i: int;
    p: int*;
}

// func f286() {
//    u1 := IntOrPtr286{i = 42};
//    u2 := IntOrPtr286{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i286: int;

struct Vector286 {
    x: int;
    y: int;
}

func fact_iter286(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec286(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec286(n-1);
    }
}

const n286 = 1 + sizeof(p286);

var p286: T286*;

struct T286 {
    a: int[n286];
}


func example_test287(): int {
    return fact_rec287(10) == fact_iter287(10);
}

union IntOrPtr287 {
    i: int;
    p: int*;
}

// func f287() {
//    u1 := IntOrPtr287{i = 42};
//    u2 := IntOrPtr287{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i287: int;

struct Vector287 {
    x: int;
    y: int;
}

func fact_iter287(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec287(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec287(n-1);
    }
}

const n287 = 1 + sizeof(p287);

var p287: T287*;

struct T287 {
    a: int[n287];
}


func example_test288(): int {
    return fact_rec288(10) == fact_iter288(10);
}

union IntOrPtr288 {
    i: int;
    p: int*;
}

// func f288() {
//    u1 := IntOrPtr288{i = 42};
//    u2 := IntOrPtr288{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i288: int;

struct Vector288 {
    x: int;
    y: int;
}

func fact_iter288(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec288(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec288(n-1);
    }
}

const n288 = 1 + sizeof(p288);

var p288: T288*;

struct T288 {
    a: int[n288];
}


func example_test289(): int {
    return fact_rec289(10) == fact_iter289(10);
}

union IntOrPtr289 {
    i: int;
    p: int*;
}

// func f289() {
//    u1 := IntOrPtr289{i = 42};
//    u2 := IntOrPtr289{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i289: int;

struct Vector289 {
    x: int;
    y: int;
}

func fact_iter289(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec289(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec289(n-1);
    }
}

const n289 = 1 + sizeof(p289);

var p289: T289*;

struct T289 {
    a: int[n289];
}


func example_test290(): int {
    return fact_rec290(10) == fact_iter290(10);
}

union IntOrPtr290 {
    i: int;
    p: int*;
}

// func f290() {
//    u1 := IntOrPtr290{i = 42};
//    u2 := IntOrPtr290{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i290: int;

struct Vector290 {
    x: int;
    y: int;
}

func fact_iter290(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec290(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec290(n-1);
    }
}

const n290 = 1 + sizeof(p290);

var p290: T290*;

struct T290 {
    a: int[n290];
}


func example_test291(): int {
    return fact_rec291(10) == fact_iter291(10);
}

union IntOrPtr291 {
    i: int;
    p: int*;
}

// func f291() {
//    u1 := IntOrPtr291{i = 42};
//    u2 := IntOrPtr291{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i291: int;

struct Vector291 {
    x: int;
    y: int;
}

func fact_iter291(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec291(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec291(n-1);
    }
}

const n291 = 1 + sizeof(p291);

var p291: T291*;

struct T291 {
    a: int[n291];
}


func example_test292(): int {
    return fact_rec292(10) == fact_iter292(10);
}

union IntOrPtr292 {
    i: int;
    p: int*;
}

// func f292() {
//    u1 := IntOrPtr292{i = 42};
//    u2 := IntOrPtr292{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i292: int;

struct Vector292 {
    x: int;
    y: int;
}

func fact_iter292(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec292(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec292(n-1);
    }
}

const n292 = 1 + sizeof(p292);

var p292: T292*;

struct T292 {
    a: int[n292];
}


func example_test293(): int {
    return fact_rec293(10) == fact_iter293(10);
}

union IntOrPtr293 {
    i: int;
    p: int*;
}

// func f293() {
//    u1 := IntOrPtr293{i = 42};
//    u2 := IntOrPtr293{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i293: int;

struct Vector293 {
    x: int;
    y: int;
}

func fact_iter293(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec293(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec293(n-1);
    }
}

const n293 = 1 + sizeof(p293);

var p293: T293*;

struct T293 {
    a: int[n293];
}


func example_test294(): int {
    return fact_rec294(10) == fact_iter294(10);
}

union IntOrPtr294 {
    i: int;
    p: int*;
}

// func f294() {
//    u1 := IntOrPtr294{i = 42};
//    u2 := IntOrPtr294{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i294: int;

struct Vector294 {
    x: int;
    y: int;
}

func fact_iter294(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec294(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec294(n-1);
    }
}

const n294 = 1 + sizeof(p294);

var p294: T294*;

struct T294 {
    a: int[n294];
}


func example_test295(): int {
    return fact_rec295(10) == fact_iter295(10);
}

union IntOrPtr295 {
    i: int;
    p: int*;
}

// func f295() {
//    u1 := IntOrPtr295{i = 42};
//    u2 := IntOrPtr295{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i295: int;

struct Vector295 {
    x: int;
    y: int;
}

func fact_iter295(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec295(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec295(n-1);
    }
}

const n295 = 1 + sizeof(p295);

var p295: T295*;

struct T295 {
    a: int[n295];
}


func example_test296(): int {
    return fact_rec296(10) == fact_iter296(10);
}

union IntOrPtr296 {
    i: int;
    p: int*;
}

// func f296() {
//    u1 := IntOrPtr296{i = 42};
//    u2 := IntOrPtr296{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i296: int;

struct Vector296 {
    x: int;
    y: int;
}

func fact_iter296(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec296(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec296(n-1);
    }
}

const n296 = 1 + sizeof(p296);

var p296: T296*;

struct T296 {
    a: int[n296];
}


func example_test297(): int {
    return fact_rec297(10) == fact_iter297(10);
}

union IntOrPtr297 {
    i: int;
    p: int*;
}

// func f297() {
//    u1 := IntOrPtr297{i = 42};
//    u2 := IntOrPtr297{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i297: int;

struct Vector297 {
    x: int;
    y: int;
}

func fact_iter297(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec297(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec297(n-1);
    }
}

const n297 = 1 + sizeof(p297);

var p297: T297*;

struct T297 {
    a: int[n297];
}


func example_test298(): int {
    return fact_rec298(10) == fact_iter298(10);
}

union IntOrPtr298 {
    i: int;
    p: int*;
}

// func f298() {
//    u1 := IntOrPtr298{i = 42};
//    u2 := IntOrPtr298{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i298: int;

struct Vector298 {
    x: int;
    y: int;
}

func fact_iter298(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec298(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec298(n-1);
    }
}

const n298 = 1 + sizeof(p298);

var p298: T298*;

struct T298 {
    a: int[n298];
}


func example_test299(): int {
    return fact_rec299(10) == fact_iter299(10);
}

union IntOrPtr299 {
    i: int;
    p: int*;
}

// func f299() {
//    u1 := IntOrPtr299{i = 42};
//    u2 := IntOrPtr299{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i299: int;

struct Vector299 {
    x: int;
    y: int;
}

func fact_iter299(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec299(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec299(n-1);
    }
}

const n299 = 1 + sizeof(p299);

var p299: T299*;

struct T299 {
    a: int[n299];
}


func example_test300(): int {
    return fact_rec300(10) == fact_iter300(10);
}

union IntOrPtr300 {
    i: int;
    p: int*;
}

// func f300() {
//    u1 := IntOrPtr300{i = 42};
//    u2 := IntOrPtr300{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i300: int;

struct Vector300 {
    x: int;
    y: int;
}

func fact_iter300(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec300(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec300(n-1);
    }
}

const n300 = 1 + sizeof(p300);

var p300: T300*;

struct T300 {
    a: int[n300];
}


func example_test301(): int {
    return fact_rec301(10) == fact_iter301(10);
}

union IntOrPtr301 {
    i: int;
    p: int*;
}

// func f301() {
//    u1 := IntOrPtr301{i = 42};
//    u2 := IntOrPtr301{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i301: int;

struct Vector301 {
    x: int;
    y: int;
}

func fact_iter301(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec301(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec301(n-1);
    }
}

const n301 = 1 + sizeof(p301);

var p301: T301*;

struct T301 {
    a: int[n301];
}


func example_test302(): int {
    return fact_rec302(10) == fact_iter302(10);
}

union IntOrPtr302 {
    i: int;
    p: int*;
}

// func f302() {
//    u1 := IntOrPtr302{i = 42};
//    u2 := IntOrPtr302{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i302: int;

struct Vector302 {
    x: int;
    y: int;
}

func fact_iter302(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec302(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec302(n-1);
    }
}

const n302 = 1 + sizeof(p302);

var p302: T302*;

struct T302 {
    a: int[n302];
}


func example_test303(): int {
    return fact_rec303(10) == fact_iter303(10);
}

union IntOrPtr303 {
    i: int;
    p: int*;
}

// func f303() {
//    u1 := IntOrPtr303{i = 42};
//    u2 := IntOrPtr303{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i303: int;

struct Vector303 {
    x: int;
    y: int;
}

func fact_iter303(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec303(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec303(n-1);
    }
}

const n303 = 1 + sizeof(p303);

var p303: T303*;

struct T303 {
    a: int[n303];
}


func example_test304(): int {
    return fact_rec304(10) == fact_iter304(10);
}

union IntOrPtr304 {
    i: int;
    p: int*;
}

// func f304() {
//    u1 := IntOrPtr304{i = 42};
//    u2 := IntOrPtr304{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i304: int;

struct Vector304 {
    x: int;
    y: int;
}

func fact_iter304(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec304(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec304(n-1);
    }
}

const n304 = 1 + sizeof(p304);

var p304: T304*;

struct T304 {
    a: int[n304];
}


func example_test305(): int {
    return fact_rec305(10) == fact_iter305(10);
}

union IntOrPtr305 {
    i: int;
    p: int*;
}

// func f305() {
//    u1 := IntOrPtr305{i = 42};
//    u2 := IntOrPtr305{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i305: int;

struct Vector305 {
    x: int;
    y: int;
}

func fact_iter305(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec305(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec305(n-1);
    }
}

const n305 = 1 + sizeof(p305);

var p305: T305*;

struct T305 {
    a: int[n305];
}


func example_test306(): int {
    return fact_rec306(10) == fact_iter306(10);
}

union IntOrPtr306 {
    i: int;
    p: int*;
}

// func f306() {
//    u1 := IntOrPtr306{i = 42};
//    u2 := IntOrPtr306{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i306: int;

struct Vector306 {
    x: int;
    y: int;
}

func fact_iter306(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec306(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec306(n-1);
    }
}

const n306 = 1 + sizeof(p306);

var p306: T306*;

struct T306 {
    a: int[n306];
}


func example_test307(): int {
    return fact_rec307(10) == fact_iter307(10);
}

union IntOrPtr307 {
    i: int;
    p: int*;
}

// func f307() {
//    u1 := IntOrPtr307{i = 42};
//    u2 := IntOrPtr307{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i307: int;

struct Vector307 {
    x: int;
    y: int;
}

func fact_iter307(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec307(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec307(n-1);
    }
}

const n307 = 1 + sizeof(p307);

var p307: T307*;

struct T307 {
    a: int[n307];
}


func example_test308(): int {
    return fact_rec308(10) == fact_iter308(10);
}

union IntOrPtr308 {
    i: int;
    p: int*;
}

// func f308() {
//    u1 := IntOrPtr308{i = 42};
//    u2 := IntOrPtr308{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i308: int;

struct Vector308 {
    x: int;
    y: int;
}

func fact_iter308(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec308(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec308(n-1);
    }
}

const n308 = 1 + sizeof(p308);

var p308: T308*;

struct T308 {
    a: int[n308];
}


func example_test309(): int {
    return fact_rec309(10) == fact_iter309(10);
}

union IntOrPtr309 {
    i: int;
    p: int*;
}

// func f309() {
//    u1 := IntOrPtr309{i = 42};
//    u2 := IntOrPtr309{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i309: int;

struct Vector309 {
    x: int;
    y: int;
}

func fact_iter309(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec309(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec309(n-1);
    }
}

const n309 = 1 + sizeof(p309);

var p309: T309*;

struct T309 {
    a: int[n309];
}


func example_test310(): int {
    return fact_rec310(10) == fact_iter310(10);
}

union IntOrPtr310 {
    i: int;
    p: int*;
}

// func f310() {
//    u1 := IntOrPtr310{i = 42};
//    u2 := IntOrPtr310{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i310: int;

struct Vector310 {
    x: int;
    y: int;
}

func fact_iter310(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec310(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec310(n-1);
    }
}

const n310 = 1 + sizeof(p310);

var p310: T310*;

struct T310 {
    a: int[n310];
}


func example_test311(): int {
    return fact_rec311(10) == fact_iter311(10);
}

union IntOrPtr311 {
    i: int;
    p: int*;
}

// func f311() {
//    u1 := IntOrPtr311{i = 42};
//    u2 := IntOrPtr311{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i311: int;

struct Vector311 {
    x: int;
    y: int;
}

func fact_iter311(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec311(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec311(n-1);
    }
}

const n311 = 1 + sizeof(p311);

var p311: T311*;

struct T311 {
    a: int[n311];
}


func example_test312(): int {
    return fact_rec312(10) == fact_iter312(10);
}

union IntOrPtr312 {
    i: int;
    p: int*;
}

// func f312() {
//    u1 := IntOrPtr312{i = 42};
//    u2 := IntOrPtr312{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i312: int;

struct Vector312 {
    x: int;
    y: int;
}

func fact_iter312(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec312(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec312(n-1);
    }
}

const n312 = 1 + sizeof(p312);

var p312: T312*;

struct T312 {
    a: int[n312];
}


func example_test313(): int {
    return fact_rec313(10) == fact_iter313(10);
}

union IntOrPtr313 {
    i: int;
    p: int*;
}

// func f313() {
//    u1 := IntOrPtr313{i = 42};
//    u2 := IntOrPtr313{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i313: int;

struct Vector313 {
    x: int;
    y: int;
}

func fact_iter313(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec313(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec313(n-1);
    }
}

const n313 = 1 + sizeof(p313);

var p313: T313*;

struct T313 {
    a: int[n313];
}


func example_test314(): int {
    return fact_rec314(10) == fact_iter314(10);
}

union IntOrPtr314 {
    i: int;
    p: int*;
}

// func f314() {
//    u1 := IntOrPtr314{i = 42};
//    u2 := IntOrPtr314{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i314: int;

struct Vector314 {
    x: int;
    y: int;
}

func fact_iter314(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec314(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec314(n-1);
    }
}

const n314 = 1 + sizeof(p314);

var p314: T314*;

struct T314 {
    a: int[n314];
}


func example_test315(): int {
    return fact_rec315(10) == fact_iter315(10);
}

union IntOrPtr315 {
    i: int;
    p: int*;
}

// func f315() {
//    u1 := IntOrPtr315{i = 42};
//    u2 := IntOrPtr315{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i315: int;

struct Vector315 {
    x: int;
    y: int;
}

func fact_iter315(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec315(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec315(n-1);
    }
}

const n315 = 1 + sizeof(p315);

var p315: T315*;

struct T315 {
    a: int[n315];
}


func example_test316(): int {
    return fact_rec316(10) == fact_iter316(10);
}

union IntOrPtr316 {
    i: int;
    p: int*;
}

// func f316() {
//    u1 := IntOrPtr316{i = 42};
//    u2 := IntOrPtr316{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i316: int;

struct Vector316 {
    x: int;
    y: int;
}

func fact_iter316(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec316(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec316(n-1);
    }
}

const n316 = 1 + sizeof(p316);

var p316: T316*;

struct T316 {
    a: int[n316];
}


func example_test317(): int {
    return fact_rec317(10) == fact_iter317(10);
}

union IntOrPtr317 {
    i: int;
    p: int*;
}

// func f317() {
//    u1 := IntOrPtr317{i = 42};
//    u2 := IntOrPtr317{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i317: int;

struct Vector317 {
    x: int;
    y: int;
}

func fact_iter317(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec317(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec317(n-1);
    }
}

const n317 = 1 + sizeof(p317);

var p317: T317*;

struct T317 {
    a: int[n317];
}


func example_test318(): int {
    return fact_rec318(10) == fact_iter318(10);
}

union IntOrPtr318 {
    i: int;
    p: int*;
}

// func f318() {
//    u1 := IntOrPtr318{i = 42};
//    u2 := IntOrPtr318{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i318: int;

struct Vector318 {
    x: int;
    y: int;
}

func fact_iter318(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec318(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec318(n-1);
    }
}

const n318 = 1 + sizeof(p318);

var p318: T318*;

struct T318 {
    a: int[n318];
}


func example_test319(): int {
    return fact_rec319(10) == fact_iter319(10);
}

union IntOrPtr319 {
    i: int;
    p: int*;
}

// func f319() {
//    u1 := IntOrPtr319{i = 42};
//    u2 := IntOrPtr319{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i319: int;

struct Vector319 {
    x: int;
    y: int;
}

func fact_iter319(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec319(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec319(n-1);
    }
}

const n319 = 1 + sizeof(p319);

var p319: T319*;

struct T319 {
    a: int[n319];
}


func example_test320(): int {
    return fact_rec320(10) == fact_iter320(10);
}

union IntOrPtr320 {
    i: int;
    p: int*;
}

// func f320() {
//    u1 := IntOrPtr320{i = 42};
//    u2 := IntOrPtr320{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i320: int;

struct Vector320 {
    x: int;
    y: int;
}

func fact_iter320(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec320(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec320(n-1);
    }
}

const n320 = 1 + sizeof(p320);

var p320: T320*;

struct T320 {
    a: int[n320];
}


func example_test321(): int {
    return fact_rec321(10) == fact_iter321(10);
}

union IntOrPtr321 {
    i: int;
    p: int*;
}

// func f321() {
//    u1 := IntOrPtr321{i = 42};
//    u2 := IntOrPtr321{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i321: int;

struct Vector321 {
    x: int;
    y: int;
}

func fact_iter321(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec321(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec321(n-1);
    }
}

const n321 = 1 + sizeof(p321);

var p321: T321*;

struct T321 {
    a: int[n321];
}


func example_test322(): int {
    return fact_rec322(10) == fact_iter322(10);
}

union IntOrPtr322 {
    i: int;
    p: int*;
}

// func f322() {
//    u1 := IntOrPtr322{i = 42};
//    u2 := IntOrPtr322{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i322: int;

struct Vector322 {
    x: int;
    y: int;
}

func fact_iter322(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec322(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec322(n-1);
    }
}

const n322 = 1 + sizeof(p322);

var p322: T322*;

struct T322 {
    a: int[n322];
}


func example_test323(): int {
    return fact_rec323(10) == fact_iter323(10);
}

union IntOrPtr323 {
    i: int;
    p: int*;
}

// func f323() {
//    u1 := IntOrPtr323{i = 42};
//    u2 := IntOrPtr323{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i323: int;

struct Vector323 {
    x: int;
    y: int;
}

func fact_iter323(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec323(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec323(n-1);
    }
}

const n323 = 1 + sizeof(p323);

var p323: T323*;

struct T323 {
    a: int[n323];
}


func example_test324(): int {
    return fact_rec324(10) == fact_iter324(10);
}

union IntOrPtr324 {
    i: int;
    p: int*;
}

// func f324() {
//    u1 := IntOrPtr324{i = 42};
//    u2 := IntOrPtr324{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i324: int;

struct Vector324 {
    x: int;
    y: int;
}

func fact_iter324(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec324(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec324(n-1);
    }
}

const n324 = 1 + sizeof(p324);

var p324: T324*;

struct T324 {
    a: int[n324];
}


func example_test325(): int {
    return fact_rec325(10) == fact_iter325(10);
}

union IntOrPtr325 {
    i: int;
    p: int*;
}

// func f325() {
//    u1 := IntOrPtr325{i = 42};
//    u2 := IntOrPtr325{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i325: int;

struct Vector325 {
    x: int;
    y: int;
}

func fact_iter325(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec325(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec325(n-1);
    }
}

const n325 = 1 + sizeof(p325);

var p325: T325*;

struct T325 {
    a: int[n325];
}


func example_test326(): int {
    return fact_rec326(10) == fact_iter326(10);
}

union IntOrPtr326 {
    i: int;
    p: int*;
}

// func f326() {
//    u1 := IntOrPtr326{i = 42};
//    u2 := IntOrPtr326{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i326: int;

struct Vector326 {
    x: int;
    y: int;
}

func fact_iter326(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec326(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec326(n-1);
    }
}

const n326 = 1 + sizeof(p326);

var p326: T326*;

struct T326 {
    a: int[n326];
}


func example_test327(): int {
    return fact_rec327(10) == fact_iter327(10);
}

union IntOrPtr327 {
    i: int;
    p: int*;
}

// func f327() {
//    u1 := IntOrPtr327{i = 42};
//    u2 := IntOrPtr327{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i327: int;

struct Vector327 {
    x: int;
    y: int;
}

func fact_iter327(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec327(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec327(n-1);
    }
}

const n327 = 1 + sizeof(p327);

var p327: T327*;

struct T327 {
    a: int[n327];
}


func example_test328(): int {
    return fact_rec328(10) == fact_iter328(10);
}

union IntOrPtr328 {
    i: int;
    p: int*;
}

// func f328() {
//    u1 := IntOrPtr328{i = 42};
//    u2 := IntOrPtr328{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i328: int;

struct Vector328 {
    x: int;
    y: int;
}

func fact_iter328(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec328(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec328(n-1);
    }
}

const n328 = 1 + sizeof(p328);

var p328: T328*;

struct T328 {
    a: int[n328];
}


func example_test329(): int {
    return fact_rec329(10) == fact_iter329(10);
}

union IntOrPtr329 {
    i: int;
    p: int*;
}

// func f329() {
//    u1 := IntOrPtr329{i = 42};
//    u2 := IntOrPtr329{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i329: int;

struct Vector329 {
    x: int;
    y: int;
}

func fact_iter329(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec329(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec329(n-1);
    }
}

const n329 = 1 + sizeof(p329);

var p329: T329*;

struct T329 {
    a: int[n329];
}


func example_test330(): int {
    return fact_rec330(10) == fact_iter330(10);
}

union IntOrPtr330 {
    i: int;
    p: int*;
}

// func f330() {
//    u1 := IntOrPtr330{i = 42};
//    u2 := IntOrPtr330{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i330: int;

struct Vector330 {
    x: int;
    y: int;
}

func fact_iter330(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec330(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec330(n-1);
    }
}

const n330 = 1 + sizeof(p330);

var p330: T330*;

struct T330 {
    a: int[n330];
}


func example_test331(): int {
    return fact_rec331(10) == fact_iter331(10);
}

union IntOrPtr331 {
    i: int;
    p: int*;
}

// func f331() {
//    u1 := IntOrPtr331{i = 42};
//    u2 := IntOrPtr331{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i331: int;

struct Vector331 {
    x: int;
    y: int;
}

func fact_iter331(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec331(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec331(n-1);
    }
}

const n331 = 1 + sizeof(p331);

var p331: T331*;

struct T331 {
    a: int[n331];
}


func example_test332(): int {
    return fact_rec332(10) == fact_iter332(10);
}

union IntOrPtr332 {
    i: int;
    p: int*;
}

// func f332() {
//    u1 := IntOrPtr332{i = 42};
//    u2 := IntOrPtr332{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i332: int;

struct Vector332 {
    x: int;
    y: int;
}

func fact_iter332(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec332(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec332(n-1);
    }
}

const n332 = 1 + sizeof(p332);

var p332: T332*;

struct T332 {
    a: int[n332];
}


func example_test333(): int {
    return fact_rec333(10) == fact_iter333(10);
}

union IntOrPtr333 {
    i: int;
    p: int*;
}

// func f333() {
//    u1 := IntOrPtr333{i = 42};
//    u2 := IntOrPtr333{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i333: int;

struct Vector333 {
    x: int;
    y: int;
}

func fact_iter333(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec333(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec333(n-1);
    }
}

const n333 = 1 + sizeof(p333);

var p333: T333*;

struct T333 {
    a: int[n333];
}


func example_test334(): int {
    return fact_rec334(10) == fact_iter334(10);
}

union IntOrPtr334 {
    i: int;
    p: int*;
}

// func f334() {
//    u1 := IntOrPtr334{i = 42};
//    u2 := IntOrPtr334{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i334: int;

struct Vector334 {
    x: int;
    y: int;
}

func fact_iter334(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec334(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec334(n-1);
    }
}

const n334 = 1 + sizeof(p334);

var p334: T334*;

struct T334 {
    a: int[n334];
}


func example_test335(): int {
    return fact_rec335(10) == fact_iter335(10);
}

union IntOrPtr335 {
    i: int;
    p: int*;
}

// func f335() {
//    u1 := IntOrPtr335{i = 42};
//    u2 := IntOrPtr335{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i335: int;

struct Vector335 {
    x: int;
    y: int;
}

func fact_iter335(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec335(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec335(n-1);
    }
}

const n335 = 1 + sizeof(p335);

var p335: T335*;

struct T335 {
    a: int[n335];
}


func example_test336(): int {
    return fact_rec336(10) == fact_iter336(10);
}

union IntOrPtr336 {
    i: int;
    p: int*;
}

// func f336() {
//    u1 := IntOrPtr336{i = 42};
//    u2 := IntOrPtr336{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i336: int;

struct Vector336 {
    x: int;
    y: int;
}

func fact_iter336(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec336(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec336(n-1);
    }
}

const n336 = 1 + sizeof(p336);

var p336: T336*;

struct T336 {
    a: int[n336];
}


func example_test337(): int {
    return fact_rec337(10) == fact_iter337(10);
}

union IntOrPtr337 {
    i: int;
    p: int*;
}

// func f337() {
//    u1 := IntOrPtr337{i = 42};
//    u2 := IntOrPtr337{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i337: int;

struct Vector337 {
    x: int;
    y: int;
}

func fact_iter337(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec337(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec337(n-1);
    }
}

const n337 = 1 + sizeof(p337);

var p337: T337*;

struct T337 {
    a: int[n337];
}


func example_test338(): int {
    return fact_rec338(10) == fact_iter338(10);
}

union IntOrPtr338 {
    i: int;
    p: int*;
}

// func f338() {
//    u1 := IntOrPtr338{i = 42};
//    u2 := IntOrPtr338{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i338: int;

struct Vector338 {
    x: int;
    y: int;
}

func fact_iter338(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec338(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec338(n-1);
    }
}

const n338 = 1 + sizeof(p338);

var p338: T338*;

struct T338 {
    a: int[n338];
}


func example_test339(): int {
    return fact_rec339(10) == fact_iter339(10);
}

union IntOrPtr339 {
    i: int;
    p: int*;
}

// func f339() {
//    u1 := IntOrPtr339{i = 42};
//    u2 := IntOrPtr339{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i339: int;

struct Vector339 {
    x: int;
    y: int;
}

func fact_iter339(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec339(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec339(n-1);
    }
}

const n339 = 1 + sizeof(p339);

var p339: T339*;

struct T339 {
    a: int[n339];
}


func example_test340(): int {
    return fact_rec340(10) == fact_iter340(10);
}

union IntOrPtr340 {
    i: int;
    p: int*;
}

// func f340() {
//    u1 := IntOrPtr340{i = 42};
//    u2 := IntOrPtr340{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i340: int;

struct Vector340 {
    x: int;
    y: int;
}

func fact_iter340(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec340(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec340(n-1);
    }
}

const n340 = 1 + sizeof(p340);

var p340: T340*;

struct T340 {
    a: int[n340];
}


func example_test341(): int {
    return fact_rec341(10) == fact_iter341(10);
}

union IntOrPtr341 {
    i: int;
    p: int*;
}

// func f341() {
//    u1 := IntOrPtr341{i = 42};
//    u2 := IntOrPtr341{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i341: int;

struct Vector341 {
    x: int;
    y: int;
}

func fact_iter341(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec341(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec341(n-1);
    }
}

const n341 = 1 + sizeof(p341);

var p341: T341*;

struct T341 {
    a: int[n341];
}


func example_test342(): int {
    return fact_rec342(10) == fact_iter342(10);
}

union IntOrPtr342 {
    i: int;
    p: int*;
}

// func f342() {
//    u1 := IntOrPtr342{i = 42};
//    u2 := IntOrPtr342{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i342: int;

struct Vector342 {
    x: int;
    y: int;
}

func fact_iter342(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec342(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec342(n-1);
    }
}

const n342 = 1 + sizeof(p342);

var p342: T342*;

struct T342 {
    a: int[n342];
}


func example_test343(): int {
    return fact_rec343(10) == fact_iter343(10);
}

union IntOrPtr343 {
    i: int;
    p: int*;
}

// func f343() {
//    u1 := IntOrPtr343{i = 42};
//    u2 := IntOrPtr343{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i343: int;

struct Vector343 {
    x: int;
    y: int;
}

func fact_iter343(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec343(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec343(n-1);
    }
}

const n343 = 1 + sizeof(p343);

var p343: T343*;

struct T343 {
    a: int[n343];
}


func example_test344(): int {
    return fact_rec344(10) == fact_iter344(10);
}

union IntOrPtr344 {
    i: int;
    p: int*;
}

// func f344() {
//    u1 := IntOrPtr344{i = 42};
//    u2 := IntOrPtr344{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i344: int;

struct Vector344 {
    x: int;
    y: int;
}

func fact_iter344(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec344(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec344(n-1);
    }
}

const n344 = 1 + sizeof(p344);

var p344: T344*;

struct T344 {
    a: int[n344];
}


func example_test345(): int {
    return fact_rec345(10) == fact_iter345(10);
}

union IntOrPtr345 {
    i: int;
    p: int*;
}

// func f345() {
//    u1 := IntOrPtr345{i = 42};
//    u2 := IntOrPtr345{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i345: int;

struct Vector345 {
    x: int;
    y: int;
}

func fact_iter345(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec345(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec345(n-1);
    }
}

const n345 = 1 + sizeof(p345);

var p345: T345*;

struct T345 {
    a: int[n345];
}


func example_test346(): int {
    return fact_rec346(10) == fact_iter346(10);
}

union IntOrPtr346 {
    i: int;
    p: int*;
}

// func f346() {
//    u1 := IntOrPtr346{i = 42};
//    u2 := IntOrPtr346{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i346: int;

struct Vector346 {
    x: int;
    y: int;
}

func fact_iter346(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec346(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec346(n-1);
    }
}

const n346 = 1 + sizeof(p346);

var p346: T346*;

struct T346 {
    a: int[n346];
}


func example_test347(): int {
    return fact_rec347(10) == fact_iter347(10);
}

union IntOrPtr347 {
    i: int;
    p: int*;
}

// func f347() {
//    u1 := IntOrPtr347{i = 42};
//    u2 := IntOrPtr347{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i347: int;

struct Vector347 {
    x: int;
    y: int;
}

func fact_iter347(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec347(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec347(n-1);
    }
}

const n347 = 1 + sizeof(p347);

var p347: T347*;

struct T347 {
    a: int[n347];
}


func example_test348(): int {
    return fact_rec348(10) == fact_iter348(10);
}

union IntOrPtr348 {
    i: int;
    p: int*;
}

// func f348() {
//    u1 := IntOrPtr348{i = 42};
//    u2 := IntOrPtr348{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i348: int;

struct Vector348 {
    x: int;
    y: int;
}

func fact_iter348(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec348(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec348(n-1);
    }
}

const n348 = 1 + sizeof(p348);

var p348: T348*;

struct T348 {
    a: int[n348];
}


func example_test349(): int {
    return fact_rec349(10) == fact_iter349(10);
}

union IntOrPtr349 {
    i: int;
    p: int*;
}

// func f349() {
//    u1 := IntOrPtr349{i = 42};
//    u2 := IntOrPtr349{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i349: int;

struct Vector349 {
    x: int;
    y: int;
}

func fact_iter349(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec349(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec349(n-1);
    }
}

const n349 = 1 + sizeof(p349);

var p349: T349*;

struct T349 {
    a: int[n349];
}


func example_test350(): int {
    return fact_rec350(10) == fact_iter350(10);
}

union IntOrPtr350 {
    i: int;
    p: int*;
}

// func f350() {
//    u1 := IntOrPtr350{i = 42};
//    u2 := IntOrPtr350{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i350: int;

struct Vector350 {
    x: int;
    y: int;
}

func fact_iter350(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec350(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec350(n-1);
    }
}

const n350 = 1 + sizeof(p350);

var p350: T350*;

struct T350 {
    a: int[n350];
}


func example_test351(): int {
    return fact_rec351(10) == fact_iter351(10);
}

union IntOrPtr351 {
    i: int;
    p: int*;
}

// func f351() {
//    u1 := IntOrPtr351{i = 42};
//    u2 := IntOrPtr351{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i351: int;

struct Vector351 {
    x: int;
    y: int;
}

func fact_iter351(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec351(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec351(n-1);
    }
}

const n351 = 1 + sizeof(p351);

var p351: T351*;

struct T351 {
    a: int[n351];
}


func example_test352(): int {
    return fact_rec352(10) == fact_iter352(10);
}

union IntOrPtr352 {
    i: int;
    p: int*;
}

// func f352() {
//    u1 := IntOrPtr352{i = 42};
//    u2 := IntOrPtr352{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i352: int;

struct Vector352 {
    x: int;
    y: int;
}

func fact_iter352(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec352(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec352(n-1);
    }
}

const n352 = 1 + sizeof(p352);

var p352: T352*;

struct T352 {
    a: int[n352];
}


func example_test353(): int {
    return fact_rec353(10) == fact_iter353(10);
}

union IntOrPtr353 {
    i: int;
    p: int*;
}

// func f353() {
//    u1 := IntOrPtr353{i = 42};
//    u2 := IntOrPtr353{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i353: int;

struct Vector353 {
    x: int;
    y: int;
}

func fact_iter353(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec353(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec353(n-1);
    }
}

const n353 = 1 + sizeof(p353);

var p353: T353*;

struct T353 {
    a: int[n353];
}


func example_test354(): int {
    return fact_rec354(10) == fact_iter354(10);
}

union IntOrPtr354 {
    i: int;
    p: int*;
}

// func f354() {
//    u1 := IntOrPtr354{i = 42};
//    u2 := IntOrPtr354{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i354: int;

struct Vector354 {
    x: int;
    y: int;
}

func fact_iter354(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec354(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec354(n-1);
    }
}

const n354 = 1 + sizeof(p354);

var p354: T354*;

struct T354 {
    a: int[n354];
}


func example_test355(): int {
    return fact_rec355(10) == fact_iter355(10);
}

union IntOrPtr355 {
    i: int;
    p: int*;
}

// func f355() {
//    u1 := IntOrPtr355{i = 42};
//    u2 := IntOrPtr355{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i355: int;

struct Vector355 {
    x: int;
    y: int;
}

func fact_iter355(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec355(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec355(n-1);
    }
}

const n355 = 1 + sizeof(p355);

var p355: T355*;

struct T355 {
    a: int[n355];
}


func example_test356(): int {
    return fact_rec356(10) == fact_iter356(10);
}

union IntOrPtr356 {
    i: int;
    p: int*;
}

// func f356() {
//    u1 := IntOrPtr356{i = 42};
//    u2 := IntOrPtr356{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i356: int;

struct Vector356 {
    x: int;
    y: int;
}

func fact_iter356(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec356(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec356(n-1);
    }
}

const n356 = 1 + sizeof(p356);

var p356: T356*;

struct T356 {
    a: int[n356];
}


func example_test357(): int {
    return fact_rec357(10) == fact_iter357(10);
}

union IntOrPtr357 {
    i: int;
    p: int*;
}

// func f357() {
//    u1 := IntOrPtr357{i = 42};
//    u2 := IntOrPtr357{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i357: int;

struct Vector357 {
    x: int;
    y: int;
}

func fact_iter357(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec357(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec357(n-1);
    }
}

const n357 = 1 + sizeof(p357);

var p357: T357*;

struct T357 {
    a: int[n357];
}


func example_test358(): int {
    return fact_rec358(10) == fact_iter358(10);
}

union IntOrPtr358 {
    i: int;
    p: int*;
}

// func f358() {
//    u1 := IntOrPtr358{i = 42};
//    u2 := IntOrPtr358{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i358: int;

struct Vector358 {
    x: int;
    y: int;
}

func fact_iter358(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec358(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec358(n-1);
    }
}

const n358 = 1 + sizeof(p358);

var p358: T358*;

struct T358 {
    a: int[n358];
}


func example_test359(): int {
    return fact_rec359(10) == fact_iter359(10);
}

union IntOrPtr359 {
    i: int;
    p: int*;
}

// func f359() {
//    u1 := IntOrPtr359{i = 42};
//    u2 := IntOrPtr359{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i359: int;

struct Vector359 {
    x: int;
    y: int;
}

func fact_iter359(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec359(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec359(n-1);
    }
}

const n359 = 1 + sizeof(p359);

var p359: T359*;

struct T359 {
    a: int[n359];
}


func example_test360(): int {
    return fact_rec360(10) == fact_iter360(10);
}

union IntOrPtr360 {
    i: int;
    p: int*;
}

// func f360() {
//    u1 := IntOrPtr360{i = 42};
//    u2 := IntOrPtr360{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i360: int;

struct Vector360 {
    x: int;
    y: int;
}

func fact_iter360(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec360(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec360(n-1);
    }
}

const n360 = 1 + sizeof(p360);

var p360: T360*;

struct T360 {
    a: int[n360];
}


func example_test361(): int {
    return fact_rec361(10) == fact_iter361(10);
}

union IntOrPtr361 {
    i: int;
    p: int*;
}

// func f361() {
//    u1 := IntOrPtr361{i = 42};
//    u2 := IntOrPtr361{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i361: int;

struct Vector361 {
    x: int;
    y: int;
}

func fact_iter361(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec361(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec361(n-1);
    }
}

const n361 = 1 + sizeof(p361);

var p361: T361*;

struct T361 {
    a: int[n361];
}


func example_test362(): int {
    return fact_rec362(10) == fact_iter362(10);
}

union IntOrPtr362 {
    i: int;
    p: int*;
}

// func f362() {
//    u1 := IntOrPtr362{i = 42};
//    u2 := IntOrPtr362{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i362: int;

struct Vector362 {
    x: int;
    y: int;
}

func fact_iter362(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec362(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec362(n-1);
    }
}

const n362 = 1 + sizeof(p362);

var p362: T362*;

struct T362 {
    a: int[n362];
}


func example_test363(): int {
    return fact_rec363(10) == fact_iter363(10);
}

union IntOrPtr363 {
    i: int;
    p: int*;
}

// func f363() {
//    u1 := IntOrPtr363{i = 42};
//    u2 := IntOrPtr363{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i363: int;

struct Vector363 {
    x: int;
    y: int;
}

func fact_iter363(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec363(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec363(n-1);
    }
}

const n363 = 1 + sizeof(p363);

var p363: T363*;

struct T363 {
    a: int[n363];
}


func example_test364(): int {
    return fact_rec364(10) == fact_iter364(10);
}

union IntOrPtr364 {
    i: int;
    p: int*;
}

// func f364() {
//    u1 := IntOrPtr364{i = 42};
//    u2 := IntOrPtr364{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i364: int;

struct Vector364 {
    x: int;
    y: int;
}

func fact_iter364(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec364(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec364(n-1);
    }
}

const n364 = 1 + sizeof(p364);

var p364: T364*;

struct T364 {
    a: int[n364];
}


func example_test365(): int {
    return fact_rec365(10) == fact_iter365(10);
}

union IntOrPtr365 {
    i: int;
    p: int*;
}

// func f365() {
//    u1 := IntOrPtr365{i = 42};
//    u2 := IntOrPtr365{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i365: int;

struct Vector365 {
    x: int;
    y: int;
}

func fact_iter365(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec365(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec365(n-1);
    }
}

const n365 = 1 + sizeof(p365);

var p365: T365*;

struct T365 {
    a: int[n365];
}


func example_test366(): int {
    return fact_rec366(10) == fact_iter366(10);
}

union IntOrPtr366 {
    i: int;
    p: int*;
}

// func f366() {
//    u1 := IntOrPtr366{i = 42};
//    u2 := IntOrPtr366{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i366: int;

struct Vector366 {
    x: int;
    y: int;
}

func fact_iter366(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec366(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec366(n-1);
    }
}

const n366 = 1 + sizeof(p366);

var p366: T366*;

struct T366 {
    a: int[n366];
}


func example_test367(): int {
    return fact_rec367(10) == fact_iter367(10);
}

union IntOrPtr367 {
    i: int;
    p: int*;
}

// func f367() {
//    u1 := IntOrPtr367{i = 42};
//    u2 := IntOrPtr367{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i367: int;

struct Vector367 {
    x: int;
    y: int;
}

func fact_iter367(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec367(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec367(n-1);
    }
}

const n367 = 1 + sizeof(p367);

var p367: T367*;

struct T367 {
    a: int[n367];
}


func example_test368(): int {
    return fact_rec368(10) == fact_iter368(10);
}

union IntOrPtr368 {
    i: int;
    p: int*;
}

// func f368() {
//    u1 := IntOrPtr368{i = 42};
//    u2 := IntOrPtr368{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i368: int;

struct Vector368 {
    x: int;
    y: int;
}

func fact_iter368(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec368(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec368(n-1);
    }
}

const n368 = 1 + sizeof(p368);

var p368: T368*;

struct T368 {
    a: int[n368];
}


func example_test369(): int {
    return fact_rec369(10) == fact_iter369(10);
}

union IntOrPtr369 {
    i: int;
    p: int*;
}

// func f369() {
//    u1 := IntOrPtr369{i = 42};
//    u2 := IntOrPtr369{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i369: int;

struct Vector369 {
    x: int;
    y: int;
}

func fact_iter369(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec369(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec369(n-1);
    }
}

const n369 = 1 + sizeof(p369);

var p369: T369*;

struct T369 {
    a: int[n369];
}


func example_test370(): int {
    return fact_rec370(10) == fact_iter370(10);
}

union IntOrPtr370 {
    i: int;
    p: int*;
}

// func f370() {
//    u1 := IntOrPtr370{i = 42};
//    u2 := IntOrPtr370{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i370: int;

struct Vector370 {
    x: int;
    y: int;
}

func fact_iter370(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec370(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec370(n-1);
    }
}

const n370 = 1 + sizeof(p370);

var p370: T370*;

struct T370 {
    a: int[n370];
}


func example_test371(): int {
    return fact_rec371(10) == fact_iter371(10);
}

union IntOrPtr371 {
    i: int;
    p: int*;
}

// func f371() {
//    u1 := IntOrPtr371{i = 42};
//    u2 := IntOrPtr371{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i371: int;

struct Vector371 {
    x: int;
    y: int;
}

func fact_iter371(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec371(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec371(n-1);
    }
}

const n371 = 1 + sizeof(p371);

var p371: T371*;

struct T371 {
    a: int[n371];
}


func example_test372(): int {
    return fact_rec372(10) == fact_iter372(10);
}

union IntOrPtr372 {
    i: int;
    p: int*;
}

// func f372() {
//    u1 := IntOrPtr372{i = 42};
//    u2 := IntOrPtr372{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i372: int;

struct Vector372 {
    x: int;
    y: int;
}

func fact_iter372(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec372(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec372(n-1);
    }
}

const n372 = 1 + sizeof(p372);

var p372: T372*;

struct T372 {
    a: int[n372];
}


func example_test373(): int {
    return fact_rec373(10) == fact_iter373(10);
}

union IntOrPtr373 {
    i: int;
    p: int*;
}

// func f373() {
//    u1 := IntOrPtr373{i = 42};
//    u2 := IntOrPtr373{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i373: int;

struct Vector373 {
    x: int;
    y: int;
}

func fact_iter373(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec373(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec373(n-1);
    }
}

const n373 = 1 + sizeof(p373);

var p373: T373*;

struct T373 {
    a: int[n373];
}


func example_test374(): int {
    return fact_rec374(10) == fact_iter374(10);
}

union IntOrPtr374 {
    i: int;
    p: int*;
}

// func f374() {
//    u1 := IntOrPtr374{i = 42};
//    u2 := IntOrPtr374{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i374: int;

struct Vector374 {
    x: int;
    y: int;
}

func fact_iter374(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec374(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec374(n-1);
    }
}

const n374 = 1 + sizeof(p374);

var p374: T374*;

struct T374 {
    a: int[n374];
}


func example_test375(): int {
    return fact_rec375(10) == fact_iter375(10);
}

union IntOrPtr375 {
    i: int;
    p: int*;
}

// func f375() {
//    u1 := IntOrPtr375{i = 42};
//    u2 := IntOrPtr375{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i375: int;

struct Vector375 {
    x: int;
    y: int;
}

func fact_iter375(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec375(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec375(n-1);
    }
}

const n375 = 1 + sizeof(p375);

var p375: T375*;

struct T375 {
    a: int[n375];
}


func example_test376(): int {
    return fact_rec376(10) == fact_iter376(10);
}

union IntOrPtr376 {
    i: int;
    p: int*;
}

// func f376() {
//    u1 := IntOrPtr376{i = 42};
//    u2 := IntOrPtr376{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i376: int;

struct Vector376 {
    x: int;
    y: int;
}

func fact_iter376(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec376(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec376(n-1);
    }
}

const n376 = 1 + sizeof(p376);

var p376: T376*;

struct T376 {
    a: int[n376];
}


func example_test377(): int {
    return fact_rec377(10) == fact_iter377(10);
}

union IntOrPtr377 {
    i: int;
    p: int*;
}

// func f377() {
//    u1 := IntOrPtr377{i = 42};
//    u2 := IntOrPtr377{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i377: int;

struct Vector377 {
    x: int;
    y: int;
}

func fact_iter377(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec377(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec377(n-1);
    }
}

const n377 = 1 + sizeof(p377);

var p377: T377*;

struct T377 {
    a: int[n377];
}


func example_test378(): int {
    return fact_rec378(10) == fact_iter378(10);
}

union IntOrPtr378 {
    i: int;
    p: int*;
}

// func f378() {
//    u1 := IntOrPtr378{i = 42};
//    u2 := IntOrPtr378{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i378: int;

struct Vector378 {
    x: int;
    y: int;
}

func fact_iter378(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec378(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec378(n-1);
    }
}

const n378 = 1 + sizeof(p378);

var p378: T378*;

struct T378 {
    a: int[n378];
}


func example_test379(): int {
    return fact_rec379(10) == fact_iter379(10);
}

union IntOrPtr379 {
    i: int;
    p: int*;
}

// func f379() {
//    u1 := IntOrPtr379{i = 42};
//    u2 := IntOrPtr379{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i379: int;

struct Vector379 {
    x: int;
    y: int;
}

func fact_iter379(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec379(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec379(n-1);
    }
}

const n379 = 1 + sizeof(p379);

var p379: T379*;

struct T379 {
    a: int[n379];
}


func example_test380(): int {
    return fact_rec380(10) == fact_iter380(10);
}

union IntOrPtr380 {
    i: int;
    p: int*;
}

// func f380() {
//    u1 := IntOrPtr380{i = 42};
//    u2 := IntOrPtr380{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i380: int;

struct Vector380 {
    x: int;
    y: int;
}

func fact_iter380(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec380(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec380(n-1);
    }
}

const n380 = 1 + sizeof(p380);

var p380: T380*;

struct T380 {
    a: int[n380];
}


func example_test381(): int {
    return fact_rec381(10) == fact_iter381(10);
}

union IntOrPtr381 {
    i: int;
    p: int*;
}

// func f381() {
//    u1 := IntOrPtr381{i = 42};
//    u2 := IntOrPtr381{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i381: int;

struct Vector381 {
    x: int;
    y: int;
}

func fact_iter381(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec381(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec381(n-1);
    }
}

const n381 = 1 + sizeof(p381);

var p381: T381*;

struct T381 {
    a: int[n381];
}


func example_test382(): int {
    return fact_rec382(10) == fact_iter382(10);
}

union IntOrPtr382 {
    i: int;
    p: int*;
}

// func f382() {
//    u1 := IntOrPtr382{i = 42};
//    u2 := IntOrPtr382{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i382: int;

struct Vector382 {
    x: int;
    y: int;
}

func fact_iter382(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec382(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec382(n-1);
    }
}

const n382 = 1 + sizeof(p382);

var p382: T382*;

struct T382 {
    a: int[n382];
}


func example_test383(): int {
    return fact_rec383(10) == fact_iter383(10);
}

union IntOrPtr383 {
    i: int;
    p: int*;
}

// func f383() {
//    u1 := IntOrPtr383{i = 42};
//    u2 := IntOrPtr383{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i383: int;

struct Vector383 {
    x: int;
    y: int;
}

func fact_iter383(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec383(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec383(n-1);
    }
}

const n383 = 1 + sizeof(p383);

var p383: T383*;

struct T383 {
    a: int[n383];
}


func example_test384(): int {
    return fact_rec384(10) == fact_iter384(10);
}

union IntOrPtr384 {
    i: int;
    p: int*;
}

// func f384() {
//    u1 := IntOrPtr384{i = 42};
//    u2 := IntOrPtr384{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i384: int;

struct Vector384 {
    x: int;
    y: int;
}

func fact_iter384(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec384(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec384(n-1);
    }
}

const n384 = 1 + sizeof(p384);

var p384: T384*;

struct T384 {
    a: int[n384];
}


func example_test385(): int {
    return fact_rec385(10) == fact_iter385(10);
}

union IntOrPtr385 {
    i: int;
    p: int*;
}

// func f385() {
//    u1 := IntOrPtr385{i = 42};
//    u2 := IntOrPtr385{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i385: int;

struct Vector385 {
    x: int;
    y: int;
}

func fact_iter385(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec385(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec385(n-1);
    }
}

const n385 = 1 + sizeof(p385);

var p385: T385*;

struct T385 {
    a: int[n385];
}


func example_test386(): int {
    return fact_rec386(10) == fact_iter386(10);
}

union IntOrPtr386 {
    i: int;
    p: int*;
}

// func f386() {
//    u1 := IntOrPtr386{i = 42};
//    u2 := IntOrPtr386{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i386: int;

struct Vector386 {
    x: int;
    y: int;
}

func fact_iter386(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec386(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec386(n-1);
    }
}

const n386 = 1 + sizeof(p386);

var p386: T386*;

struct T386 {
    a: int[n386];
}


func example_test387(): int {
    return fact_rec387(10) == fact_iter387(10);
}

union IntOrPtr387 {
    i: int;
    p: int*;
}

// func f387() {
//    u1 := IntOrPtr387{i = 42};
//    u2 := IntOrPtr387{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i387: int;

struct Vector387 {
    x: int;
    y: int;
}

func fact_iter387(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec387(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec387(n-1);
    }
}

const n387 = 1 + sizeof(p387);

var p387: T387*;

struct T387 {
    a: int[n387];
}


func example_test388(): int {
    return fact_rec388(10) == fact_iter388(10);
}

union IntOrPtr388 {
    i: int;
    p: int*;
}

// func f388() {
//    u1 := IntOrPtr388{i = 42};
//    u2 := IntOrPtr388{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i388: int;

struct Vector388 {
    x: int;
    y: int;
}

func fact_iter388(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec388(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec388(n-1);
    }
}

const n388 = 1 + sizeof(p388);

var p388: T388*;

struct T388 {
    a: int[n388];
}


func example_test389(): int {
    return fact_rec389(10) == fact_iter389(10);
}

union IntOrPtr389 {
    i: int;
    p: int*;
}

// func f389() {
//    u1 := IntOrPtr389{i = 42};
//    u2 := IntOrPtr389{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i389: int;

struct Vector389 {
    x: int;
    y: int;
}

func fact_iter389(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec389(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec389(n-1);
    }
}

const n389 = 1 + sizeof(p389);

var p389: T389*;

struct T389 {
    a: int[n389];
}


func example_test390(): int {
    return fact_rec390(10) == fact_iter390(10);
}

union IntOrPtr390 {
    i: int;
    p: int*;
}

// func f390() {
//    u1 := IntOrPtr390{i = 42};
//    u2 := IntOrPtr390{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i390: int;

struct Vector390 {
    x: int;
    y: int;
}

func fact_iter390(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec390(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec390(n-1);
    }
}

const n390 = 1 + sizeof(p390);

var p390: T390*;

struct T390 {
    a: int[n390];
}


func example_test391(): int {
    return fact_rec391(10) == fact_iter391(10);
}

union IntOrPtr391 {
    i: int;
    p: int*;
}

// func f391() {
//    u1 := IntOrPtr391{i = 42};
//    u2 := IntOrPtr391{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i391: int;

struct Vector391 {
    x: int;
    y: int;
}

func fact_iter391(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec391(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec391(n-1);
    }
}

const n391 = 1 + sizeof(p391);

var p391: T391*;

struct T391 {
    a: int[n391];
}


func example_test392(): int {
    return fact_rec392(10) == fact_iter392(10);
}

union IntOrPtr392 {
    i: int;
    p: int*;
}

// func f392() {
//    u1 := IntOrPtr392{i = 42};
//    u2 := IntOrPtr392{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i392: int;

struct Vector392 {
    x: int;
    y: int;
}

func fact_iter392(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec392(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec392(n-1);
    }
}

const n392 = 1 + sizeof(p392);

var p392: T392*;

struct T392 {
    a: int[n392];
}


func example_test393(): int {
    return fact_rec393(10) == fact_iter393(10);
}

union IntOrPtr393 {
    i: int;
    p: int*;
}

// func f393() {
//    u1 := IntOrPtr393{i = 42};
//    u2 := IntOrPtr393{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i393: int;

struct Vector393 {
    x: int;
    y: int;
}

func fact_iter393(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec393(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec393(n-1);
    }
}

const n393 = 1 + sizeof(p393);

var p393: T393*;

struct T393 {
    a: int[n393];
}


func example_test394(): int {
    return fact_rec394(10) == fact_iter394(10);
}

union IntOrPtr394 {
    i: int;
    p: int*;
}

// func f394() {
//    u1 := IntOrPtr394{i = 42};
//    u2 := IntOrPtr394{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i394: int;

struct Vector394 {
    x: int;
    y: int;
}

func fact_iter394(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec394(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec394(n-1);
    }
}

const n394 = 1 + sizeof(p394);

var p394: T394*;

struct T394 {
    a: int[n394];
}


func example_test395(): int {
    return fact_rec395(10) == fact_iter395(10);
}

union IntOrPtr395 {
    i: int;
    p: int*;
}

// func f395() {
//    u1 := IntOrPtr395{i = 42};
//    u2 := IntOrPtr395{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i395: int;

struct Vector395 {
    x: int;
    y: int;
}

func fact_iter395(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec395(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec395(n-1);
    }
}

const n395 = 1 + sizeof(p395);

var p395: T395*;

struct T395 {
    a: int[n395];
}


func example_test396(): int {
    return fact_rec396(10) == fact_iter396(10);
}

union IntOrPtr396 {
    i: int;
    p: int*;
}

// func f396() {
//    u1 := IntOrPtr396{i = 42};
//    u2 := IntOrPtr396{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i396: int;

struct Vector396 {
    x: int;
    y: int;
}

func fact_iter396(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec396(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec396(n-1);
    }
}

const n396 = 1 + sizeof(p396);

var p396: T396*;

struct T396 {
    a: int[n396];
}


func example_test397(): int {
    return fact_rec397(10) == fact_iter397(10);
}

union IntOrPtr397 {
    i: int;
    p: int*;
}

// func f397() {
//    u1 := IntOrPtr397{i = 42};
//    u2 := IntOrPtr397{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i397: int;

struct Vector397 {
    x: int;
    y: int;
}

func fact_iter397(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec397(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec397(n-1);
    }
}

const n397 = 1 + sizeof(p397);

var p397: T397*;

struct T397 {
    a: int[n397];
}


func example_test398(): int {
    return fact_rec398(10) == fact_iter398(10);
}

union IntOrPtr398 {
    i: int;
    p: int*;
}

// func f398() {
//    u1 := IntOrPtr398{i = 42};
//    u2 := IntOrPtr398{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i398: int;

struct Vector398 {
    x: int;
    y: int;
}

func fact_iter398(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec398(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec398(n-1);
    }
}

const n398 = 1 + sizeof(p398);

var p398: T398*;

struct T398 {
    a: int[n398];
}


func example_test399(): int {
    return fact_rec399(10) == fact_iter399(10);
}

union IntOrPtr399 {
    i: int;
    p: int*;
}

// func f399() {
//    u1 := IntOrPtr399{i = 42};
//    u2 := IntOrPtr399{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i399: int;

struct Vector399 {
    x: int;
    y: int;
}

func fact_iter399(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec399(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec399(n-1);
    }
}

const n399 = 1 + sizeof(p399);

var p399: T399*;

struct T399 {
    a: int[n399];
}


func example_test400(): int {
    return fact_rec400(10) == fact_iter400(10);
}

union IntOrPtr400 {
    i: int;
    p: int*;
}

// func f400() {
//    u1 := IntOrPtr400{i = 42};
//    u2 := IntOrPtr400{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i400: int;

struct Vector400 {
    x: int;
    y: int;
}

func fact_iter400(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec400(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec400(n-1);
    }
}

const n400 = 1 + sizeof(p400);

var p400: T400*;

struct T400 {
    a: int[n400];
}


func example_test401(): int {
    return fact_rec401(10) == fact_iter401(10);
}

union IntOrPtr401 {
    i: int;
    p: int*;
}

// func f401() {
//    u1 := IntOrPtr401{i = 42};
//    u2 := IntOrPtr401{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i401: int;

struct Vector401 {
    x: int;
    y: int;
}

func fact_iter401(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec401(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec401(n-1);
    }
}

const n401 = 1 + sizeof(p401);

var p401: T401*;

struct T401 {
    a: int[n401];
}


func example_test402(): int {
    return fact_rec402(10) == fact_iter402(10);
}

union IntOrPtr402 {
    i: int;
    p: int*;
}

// func f402() {
//    u1 := IntOrPtr402{i = 42};
//    u2 := IntOrPtr402{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i402: int;

struct Vector402 {
    x: int;
    y: int;
}

func fact_iter402(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec402(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec402(n-1);
    }
}

const n402 = 1 + sizeof(p402);

var p402: T402*;

struct T402 {
    a: int[n402];
}


func example_test403(): int {
    return fact_rec403(10) == fact_iter403(10);
}

union IntOrPtr403 {
    i: int;
    p: int*;
}

// func f403() {
//    u1 := IntOrPtr403{i = 42};
//    u2 := IntOrPtr403{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i403: int;

struct Vector403 {
    x: int;
    y: int;
}

func fact_iter403(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec403(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec403(n-1);
    }
}

const n403 = 1 + sizeof(p403);

var p403: T403*;

struct T403 {
    a: int[n403];
}


func example_test404(): int {
    return fact_rec404(10) == fact_iter404(10);
}

union IntOrPtr404 {
    i: int;
    p: int*;
}

// func f404() {
//    u1 := IntOrPtr404{i = 42};
//    u2 := IntOrPtr404{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i404: int;

struct Vector404 {
    x: int;
    y: int;
}

func fact_iter404(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec404(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec404(n-1);
    }
}

const n404 = 1 + sizeof(p404);

var p404: T404*;

struct T404 {
    a: int[n404];
}


func example_test405(): int {
    return fact_rec405(10) == fact_iter405(10);
}

union IntOrPtr405 {
    i: int;
    p: int*;
}

// func f405() {
//    u1 := IntOrPtr405{i = 42};
//    u2 := IntOrPtr405{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i405: int;

struct Vector405 {
    x: int;
    y: int;
}

func fact_iter405(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec405(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec405(n-1);
    }
}

const n405 = 1 + sizeof(p405);

var p405: T405*;

struct T405 {
    a: int[n405];
}


func example_test406(): int {
    return fact_rec406(10) == fact_iter406(10);
}

union IntOrPtr406 {
    i: int;
    p: int*;
}

// func f406() {
//    u1 := IntOrPtr406{i = 42};
//    u2 := IntOrPtr406{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i406: int;

struct Vector406 {
    x: int;
    y: int;
}

func fact_iter406(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec406(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec406(n-1);
    }
}

const n406 = 1 + sizeof(p406);

var p406: T406*;

struct T406 {
    a: int[n406];
}


func example_test407(): int {
    return fact_rec407(10) == fact_iter407(10);
}

union IntOrPtr407 {
    i: int;
    p: int*;
}

// func f407() {
//    u1 := IntOrPtr407{i = 42};
//    u2 := IntOrPtr407{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i407: int;

struct Vector407 {
    x: int;
    y: int;
}

func fact_iter407(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec407(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec407(n-1);
    }
}

const n407 = 1 + sizeof(p407);

var p407: T407*;

struct T407 {
    a: int[n407];
}


func example_test408(): int {
    return fact_rec408(10) == fact_iter408(10);
}

union IntOrPtr408 {
    i: int;
    p: int*;
}

// func f408() {
//    u1 := IntOrPtr408{i = 42};
//    u2 := IntOrPtr408{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i408: int;

struct Vector408 {
    x: int;
    y: int;
}

func fact_iter408(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec408(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec408(n-1);
    }
}

const n408 = 1 + sizeof(p408);

var p408: T408*;

struct T408 {
    a: int[n408];
}


func example_test409(): int {
    return fact_rec409(10) == fact_iter409(10);
}

union IntOrPtr409 {
    i: int;
    p: int*;
}

// func f409() {
//    u1 := IntOrPtr409{i = 42};
//    u2 := IntOrPtr409{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i409: int;

struct Vector409 {
    x: int;
    y: int;
}

func fact_iter409(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec409(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec409(n-1);
    }
}

const n409 = 1 + sizeof(p409);

var p409: T409*;

struct T409 {
    a: int[n409];
}


func example_test410(): int {
    return fact_rec410(10) == fact_iter410(10);
}

union IntOrPtr410 {
    i: int;
    p: int*;
}

// func f410() {
//    u1 := IntOrPtr410{i = 42};
//    u2 := IntOrPtr410{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i410: int;

struct Vector410 {
    x: int;
    y: int;
}

func fact_iter410(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec410(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec410(n-1);
    }
}

const n410 = 1 + sizeof(p410);

var p410: T410*;

struct T410 {
    a: int[n410];
}


func example_test411(): int {
    return fact_rec411(10) == fact_iter411(10);
}

union IntOrPtr411 {
    i: int;
    p: int*;
}

// func f411() {
//    u1 := IntOrPtr411{i = 42};
//    u2 := IntOrPtr411{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i411: int;

struct Vector411 {
    x: int;
    y: int;
}

func fact_iter411(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec411(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec411(n-1);
    }
}

const n411 = 1 + sizeof(p411);

var p411: T411*;

struct T411 {
    a: int[n411];
}


func example_test412(): int {
    return fact_rec412(10) == fact_iter412(10);
}

union IntOrPtr412 {
    i: int;
    p: int*;
}

// func f412() {
//    u1 := IntOrPtr412{i = 42};
//    u2 := IntOrPtr412{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i412: int;

struct Vector412 {
    x: int;
    y: int;
}

func fact_iter412(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec412(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec412(n-1);
    }
}

const n412 = 1 + sizeof(p412);

var p412: T412*;

struct T412 {
    a: int[n412];
}


func example_test413(): int {
    return fact_rec413(10) == fact_iter413(10);
}

union IntOrPtr413 {
    i: int;
    p: int*;
}

// func f413() {
//    u1 := IntOrPtr413{i = 42};
//    u2 := IntOrPtr413{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i413: int;

struct Vector413 {
    x: int;
    y: int;
}

func fact_iter413(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec413(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec413(n-1);
    }
}

const n413 = 1 + sizeof(p413);

var p413: T413*;

struct T413 {
    a: int[n413];
}


func example_test414(): int {
    return fact_rec414(10) == fact_iter414(10);
}

union IntOrPtr414 {
    i: int;
    p: int*;
}

// func f414() {
//    u1 := IntOrPtr414{i = 42};
//    u2 := IntOrPtr414{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i414: int;

struct Vector414 {
    x: int;
    y: int;
}

func fact_iter414(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec414(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec414(n-1);
    }
}

const n414 = 1 + sizeof(p414);

var p414: T414*;

struct T414 {
    a: int[n414];
}


func example_test415(): int {
    return fact_rec415(10) == fact_iter415(10);
}

union IntOrPtr415 {
    i: int;
    p: int*;
}

// func f415() {
//    u1 := IntOrPtr415{i = 42};
//    u2 := IntOrPtr415{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i415: int;

struct Vector415 {
    x: int;
    y: int;
}

func fact_iter415(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec415(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec415(n-1);
    }
}

const n415 = 1 + sizeof(p415);

var p415: T415*;

struct T415 {
    a: int[n415];
}


func example_test416(): int {
    return fact_rec416(10) == fact_iter416(10);
}

union IntOrPtr416 {
    i: int;
    p: int*;
}

// func f416() {
//    u1 := IntOrPtr416{i = 42};
//    u2 := IntOrPtr416{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i416: int;

struct Vector416 {
    x: int;
    y: int;
}

func fact_iter416(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec416(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec416(n-1);
    }
}

const n416 = 1 + sizeof(p416);

var p416: T416*;

struct T416 {
    a: int[n416];
}


func example_test417(): int {
    return fact_rec417(10) == fact_iter417(10);
}

union IntOrPtr417 {
    i: int;
    p: int*;
}

// func f417() {
//    u1 := IntOrPtr417{i = 42};
//    u2 := IntOrPtr417{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i417: int;

struct Vector417 {
    x: int;
    y: int;
}

func fact_iter417(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec417(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec417(n-1);
    }
}

const n417 = 1 + sizeof(p417);

var p417: T417*;

struct T417 {
    a: int[n417];
}


func example_test418(): int {
    return fact_rec418(10) == fact_iter418(10);
}

union IntOrPtr418 {
    i: int;
    p: int*;
}

// func f418() {
//    u1 := IntOrPtr418{i = 42};
//    u2 := IntOrPtr418{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i418: int;

struct Vector418 {
    x: int;
    y: int;
}

func fact_iter418(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec418(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec418(n-1);
    }
}

const n418 = 1 + sizeof(p418);

var p418: T418*;

struct T418 {
    a: int[n418];
}


func example_test419(): int {
    return fact_rec419(10) == fact_iter419(10);
}

union IntOrPtr419 {
    i: int;
    p: int*;
}

// func f419() {
//    u1 := IntOrPtr419{i = 42};
//    u2 := IntOrPtr419{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i419: int;

struct Vector419 {
    x: int;
    y: int;
}

func fact_iter419(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec419(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec419(n-1);
    }
}

const n419 = 1 + sizeof(p419);

var p419: T419*;

struct T419 {
    a: int[n419];
}


func example_test420(): int {
    return fact_rec420(10) == fact_iter420(10);
}

union IntOrPtr420 {
    i: int;
    p: int*;
}

// func f420() {
//    u1 := IntOrPtr420{i = 42};
//    u2 := IntOrPtr420{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i420: int;

struct Vector420 {
    x: int;
    y: int;
}

func fact_iter420(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec420(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec420(n-1);
    }
}

const n420 = 1 + sizeof(p420);

var p420: T420*;

struct T420 {
    a: int[n420];
}


func example_test421(): int {
    return fact_rec421(10) == fact_iter421(10);
}

union IntOrPtr421 {
    i: int;
    p: int*;
}

// func f421() {
//    u1 := IntOrPtr421{i = 42};
//    u2 := IntOrPtr421{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i421: int;

struct Vector421 {
    x: int;
    y: int;
}

func fact_iter421(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec421(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec421(n-1);
    }
}

const n421 = 1 + sizeof(p421);

var p421: T421*;

struct T421 {
    a: int[n421];
}


func example_test422(): int {
    return fact_rec422(10) == fact_iter422(10);
}

union IntOrPtr422 {
    i: int;
    p: int*;
}

// func f422() {
//    u1 := IntOrPtr422{i = 42};
//    u2 := IntOrPtr422{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i422: int;

struct Vector422 {
    x: int;
    y: int;
}

func fact_iter422(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec422(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec422(n-1);
    }
}

const n422 = 1 + sizeof(p422);

var p422: T422*;

struct T422 {
    a: int[n422];
}


func example_test423(): int {
    return fact_rec423(10) == fact_iter423(10);
}

union IntOrPtr423 {
    i: int;
    p: int*;
}

// func f423() {
//    u1 := IntOrPtr423{i = 42};
//    u2 := IntOrPtr423{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i423: int;

struct Vector423 {
    x: int;
    y: int;
}

func fact_iter423(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec423(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec423(n-1);
    }
}

const n423 = 1 + sizeof(p423);

var p423: T423*;

struct T423 {
    a: int[n423];
}


func example_test424(): int {
    return fact_rec424(10) == fact_iter424(10);
}

union IntOrPtr424 {
    i: int;
    p: int*;
}

// func f424() {
//    u1 := IntOrPtr424{i = 42};
//    u2 := IntOrPtr424{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i424: int;

struct Vector424 {
    x: int;
    y: int;
}

func fact_iter424(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec424(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec424(n-1);
    }
}

const n424 = 1 + sizeof(p424);

var p424: T424*;

struct T424 {
    a: int[n424];
}


func example_test425(): int {
    return fact_rec425(10) == fact_iter425(10);
}

union IntOrPtr425 {
    i: int;
    p: int*;
}

// func f425() {
//    u1 := IntOrPtr425{i = 42};
//    u2 := IntOrPtr425{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i425: int;

struct Vector425 {
    x: int;
    y: int;
}

func fact_iter425(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec425(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec425(n-1);
    }
}

const n425 = 1 + sizeof(p425);

var p425: T425*;

struct T425 {
    a: int[n425];
}


func example_test426(): int {
    return fact_rec426(10) == fact_iter426(10);
}

union IntOrPtr426 {
    i: int;
    p: int*;
}

// func f426() {
//    u1 := IntOrPtr426{i = 42};
//    u2 := IntOrPtr426{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i426: int;

struct Vector426 {
    x: int;
    y: int;
}

func fact_iter426(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec426(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec426(n-1);
    }
}

const n426 = 1 + sizeof(p426);

var p426: T426*;

struct T426 {
    a: int[n426];
}


func example_test427(): int {
    return fact_rec427(10) == fact_iter427(10);
}

union IntOrPtr427 {
    i: int;
    p: int*;
}

// func f427() {
//    u1 := IntOrPtr427{i = 42};
//    u2 := IntOrPtr427{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i427: int;

struct Vector427 {
    x: int;
    y: int;
}

func fact_iter427(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec427(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec427(n-1);
    }
}

const n427 = 1 + sizeof(p427);

var p427: T427*;

struct T427 {
    a: int[n427];
}


func example_test428(): int {
    return fact_rec428(10) == fact_iter428(10);
}

union IntOrPtr428 {
    i: int;
    p: int*;
}

// func f428() {
//    u1 := IntOrPtr428{i = 42};
//    u2 := IntOrPtr428{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i428: int;

struct Vector428 {
    x: int;
    y: int;
}

func fact_iter428(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec428(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec428(n-1);
    }
}

const n428 = 1 + sizeof(p428);

var p428: T428*;

struct T428 {
    a: int[n428];
}


func example_test429(): int {
    return fact_rec429(10) == fact_iter429(10);
}

union IntOrPtr429 {
    i: int;
    p: int*;
}

// func f429() {
//    u1 := IntOrPtr429{i = 42};
//    u2 := IntOrPtr429{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i429: int;

struct Vector429 {
    x: int;
    y: int;
}

func fact_iter429(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec429(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec429(n-1);
    }
}

const n429 = 1 + sizeof(p429);

var p429: T429*;

struct T429 {
    a: int[n429];
}


func example_test430(): int {
    return fact_rec430(10) == fact_iter430(10);
}

union IntOrPtr430 {
    i: int;
    p: int*;
}

// func f430() {
//    u1 := IntOrPtr430{i = 42};
//    u2 := IntOrPtr430{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i430: int;

struct Vector430 {
    x: int;
    y: int;
}

func fact_iter430(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec430(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec430(n-1);
    }
}

const n430 = 1 + sizeof(p430);

var p430: T430*;

struct T430 {
    a: int[n430];
}


func example_test431(): int {
    return fact_rec431(10) == fact_iter431(10);
}

union IntOrPtr431 {
    i: int;
    p: int*;
}

// func f431() {
//    u1 := IntOrPtr431{i = 42};
//    u2 := IntOrPtr431{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i431: int;

struct Vector431 {
    x: int;
    y: int;
}

func fact_iter431(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec431(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec431(n-1);
    }
}

const n431 = 1 + sizeof(p431);

var p431: T431*;

struct T431 {
    a: int[n431];
}


func example_test432(): int {
    return fact_rec432(10) == fact_iter432(10);
}

union IntOrPtr432 {
    i: int;
    p: int*;
}

// func f432() {
//    u1 := IntOrPtr432{i = 42};
//    u2 := IntOrPtr432{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i432: int;

struct Vector432 {
    x: int;
    y: int;
}

func fact_iter432(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec432(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec432(n-1);
    }
}

const n432 = 1 + sizeof(p432);

var p432: T432*;

struct T432 {
    a: int[n432];
}


func example_test433(): int {
    return fact_rec433(10) == fact_iter433(10);
}

union IntOrPtr433 {
    i: int;
    p: int*;
}

// func f433() {
//    u1 := IntOrPtr433{i = 42};
//    u2 := IntOrPtr433{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i433: int;

struct Vector433 {
    x: int;
    y: int;
}

func fact_iter433(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec433(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec433(n-1);
    }
}

const n433 = 1 + sizeof(p433);

var p433: T433*;

struct T433 {
    a: int[n433];
}


func example_test434(): int {
    return fact_rec434(10) == fact_iter434(10);
}

union IntOrPtr434 {
    i: int;
    p: int*;
}

// func f434() {
//    u1 := IntOrPtr434{i = 42};
//    u2 := IntOrPtr434{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i434: int;

struct Vector434 {
    x: int;
    y: int;
}

func fact_iter434(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec434(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec434(n-1);
    }
}

const n434 = 1 + sizeof(p434);

var p434: T434*;

struct T434 {
    a: int[n434];
}


func example_test435(): int {
    return fact_rec435(10) == fact_iter435(10);
}

union IntOrPtr435 {
    i: int;
    p: int*;
}

// func f435() {
//    u1 := IntOrPtr435{i = 42};
//    u2 := IntOrPtr435{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i435: int;

struct Vector435 {
    x: int;
    y: int;
}

func fact_iter435(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec435(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec435(n-1);
    }
}

const n435 = 1 + sizeof(p435);

var p435: T435*;

struct T435 {
    a: int[n435];
}


func example_test436(): int {
    return fact_rec436(10) == fact_iter436(10);
}

union IntOrPtr436 {
    i: int;
    p: int*;
}

// func f436() {
//    u1 := IntOrPtr436{i = 42};
//    u2 := IntOrPtr436{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i436: int;

struct Vector436 {
    x: int;
    y: int;
}

func fact_iter436(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec436(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec436(n-1);
    }
}

const n436 = 1 + sizeof(p436);

var p436: T436*;

struct T436 {
    a: int[n436];
}


func example_test437(): int {
    return fact_rec437(10) == fact_iter437(10);
}

union IntOrPtr437 {
    i: int;
    p: int*;
}

// func f437() {
//    u1 := IntOrPtr437{i = 42};
//    u2 := IntOrPtr437{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i437: int;

struct Vector437 {
    x: int;
    y: int;
}

func fact_iter437(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec437(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec437(n-1);
    }
}

const n437 = 1 + sizeof(p437);

var p437: T437*;

struct T437 {
    a: int[n437];
}


func example_test438(): int {
    return fact_rec438(10) == fact_iter438(10);
}

union IntOrPtr438 {
    i: int;
    p: int*;
}

// func f438() {
//    u1 := IntOrPtr438{i = 42};
//    u2 := IntOrPtr438{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i438: int;

struct Vector438 {
    x: int;
    y: int;
}

func fact_iter438(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec438(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec438(n-1);
    }
}

const n438 = 1 + sizeof(p438);

var p438: T438*;

struct T438 {
    a: int[n438];
}


func example_test439(): int {
    return fact_rec439(10) == fact_iter439(10);
}

union IntOrPtr439 {
    i: int;
    p: int*;
}

// func f439() {
//    u1 := IntOrPtr439{i = 42};
//    u2 := IntOrPtr439{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i439: int;

struct Vector439 {
    x: int;
    y: int;
}

func fact_iter439(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec439(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec439(n-1);
    }
}

const n439 = 1 + sizeof(p439);

var p439: T439*;

struct T439 {
    a: int[n439];
}


func example_test440(): int {
    return fact_rec440(10) == fact_iter440(10);
}

union IntOrPtr440 {
    i: int;
    p: int*;
}

// func f440() {
//    u1 := IntOrPtr440{i = 42};
//    u2 := IntOrPtr440{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i440: int;

struct Vector440 {
    x: int;
    y: int;
}

func fact_iter440(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec440(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec440(n-1);
    }
}

const n440 = 1 + sizeof(p440);

var p440: T440*;

struct T440 {
    a: int[n440];
}


func example_test441(): int {
    return fact_rec441(10) == fact_iter441(10);
}

union IntOrPtr441 {
    i: int;
    p: int*;
}

// func f441() {
//    u1 := IntOrPtr441{i = 42};
//    u2 := IntOrPtr441{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i441: int;

struct Vector441 {
    x: int;
    y: int;
}

func fact_iter441(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec441(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec441(n-1);
    }
}

const n441 = 1 + sizeof(p441);

var p441: T441*;

struct T441 {
    a: int[n441];
}


func example_test442(): int {
    return fact_rec442(10) == fact_iter442(10);
}

union IntOrPtr442 {
    i: int;
    p: int*;
}

// func f442() {
//    u1 := IntOrPtr442{i = 42};
//    u2 := IntOrPtr442{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i442: int;

struct Vector442 {
    x: int;
    y: int;
}

func fact_iter442(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec442(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec442(n-1);
    }
}

const n442 = 1 + sizeof(p442);

var p442: T442*;

struct T442 {
    a: int[n442];
}


func example_test443(): int {
    return fact_rec443(10) == fact_iter443(10);
}

union IntOrPtr443 {
    i: int;
    p: int*;
}

// func f443() {
//    u1 := IntOrPtr443{i = 42};
//    u2 := IntOrPtr443{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i443: int;

struct Vector443 {
    x: int;
    y: int;
}

func fact_iter443(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec443(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec443(n-1);
    }
}

const n443 = 1 + sizeof(p443);

var p443: T443*;

struct T443 {
    a: int[n443];
}


func example_test444(): int {
    return fact_rec444(10) == fact_iter444(10);
}

union IntOrPtr444 {
    i: int;
    p: int*;
}

// func f444() {
//    u1 := IntOrPtr444{i = 42};
//    u2 := IntOrPtr444{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i444: int;

struct Vector444 {
    x: int;
    y: int;
}

func fact_iter444(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec444(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec444(n-1);
    }
}

const n444 = 1 + sizeof(p444);

var p444: T444*;

struct T444 {
    a: int[n444];
}


func example_test445(): int {
    return fact_rec445(10) == fact_iter445(10);
}

union IntOrPtr445 {
    i: int;
    p: int*;
}

// func f445() {
//    u1 := IntOrPtr445{i = 42};
//    u2 := IntOrPtr445{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i445: int;

struct Vector445 {
    x: int;
    y: int;
}

func fact_iter445(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec445(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec445(n-1);
    }
}

const n445 = 1 + sizeof(p445);

var p445: T445*;

struct T445 {
    a: int[n445];
}


func example_test446(): int {
    return fact_rec446(10) == fact_iter446(10);
}

union IntOrPtr446 {
    i: int;
    p: int*;
}

// func f446() {
//    u1 := IntOrPtr446{i = 42};
//    u2 := IntOrPtr446{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i446: int;

struct Vector446 {
    x: int;
    y: int;
}

func fact_iter446(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec446(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec446(n-1);
    }
}

const n446 = 1 + sizeof(p446);

var p446: T446*;

struct T446 {
    a: int[n446];
}


func example_test447(): int {
    return fact_rec447(10) == fact_iter447(10);
}

union IntOrPtr447 {
    i: int;
    p: int*;
}

// func f447() {
//    u1 := IntOrPtr447{i = 42};
//    u2 := IntOrPtr447{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i447: int;

struct Vector447 {
    x: int;
    y: int;
}

func fact_iter447(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec447(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec447(n-1);
    }
}

const n447 = 1 + sizeof(p447);

var p447: T447*;

struct T447 {
    a: int[n447];
}


func example_test448(): int {
    return fact_rec448(10) == fact_iter448(10);
}

union IntOrPtr448 {
    i: int;
    p: int*;
}

// func f448() {
//    u1 := IntOrPtr448{i = 42};
//    u2 := IntOrPtr448{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i448: int;

struct Vector448 {
    x: int;
    y: int;
}

func fact_iter448(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec448(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec448(n-1);
    }
}

const n448 = 1 + sizeof(p448);

var p448: T448*;

struct T448 {
    a: int[n448];
}


func example_test449(): int {
    return fact_rec449(10) == fact_iter449(10);
}

union IntOrPtr449 {
    i: int;
    p: int*;
}

// func f449() {
//    u1 := IntOrPtr449{i = 42};
//    u2 := IntOrPtr449{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i449: int;

struct Vector449 {
    x: int;
    y: int;
}

func fact_iter449(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec449(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec449(n-1);
    }
}

const n449 = 1 + sizeof(p449);

var p449: T449*;

struct T449 {
    a: int[n449];
}


func example_test450(): int {
    return fact_rec450(10) == fact_iter450(10);
}

union IntOrPtr450 {
    i: int;
    p: int*;
}

// func f450() {
//    u1 := IntOrPtr450{i = 42};
//    u2 := IntOrPtr450{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i450: int;

struct Vector450 {
    x: int;
    y: int;
}

func fact_iter450(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec450(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec450(n-1);
    }
}

const n450 = 1 + sizeof(p450);

var p450: T450*;

struct T450 {
    a: int[n450];
}


func example_test451(): int {
    return fact_rec451(10) == fact_iter451(10);
}

union IntOrPtr451 {
    i: int;
    p: int*;
}

// func f451() {
//    u1 := IntOrPtr451{i = 42};
//    u2 := IntOrPtr451{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i451: int;

struct Vector451 {
    x: int;
    y: int;
}

func fact_iter451(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec451(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec451(n-1);
    }
}

const n451 = 1 + sizeof(p451);

var p451: T451*;

struct T451 {
    a: int[n451];
}


func example_test452(): int {
    return fact_rec452(10) == fact_iter452(10);
}

union IntOrPtr452 {
    i: int;
    p: int*;
}

// func f452() {
//    u1 := IntOrPtr452{i = 42};
//    u2 := IntOrPtr452{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i452: int;

struct Vector452 {
    x: int;
    y: int;
}

func fact_iter452(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec452(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec452(n-1);
    }
}

const n452 = 1 + sizeof(p452);

var p452: T452*;

struct T452 {
    a: int[n452];
}


func example_test453(): int {
    return fact_rec453(10) == fact_iter453(10);
}

union IntOrPtr453 {
    i: int;
    p: int*;
}

// func f453() {
//    u1 := IntOrPtr453{i = 42};
//    u2 := IntOrPtr453{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i453: int;

struct Vector453 {
    x: int;
    y: int;
}

func fact_iter453(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec453(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec453(n-1);
    }
}

const n453 = 1 + sizeof(p453);

var p453: T453*;

struct T453 {
    a: int[n453];
}


func example_test454(): int {
    return fact_rec454(10) == fact_iter454(10);
}

union IntOrPtr454 {
    i: int;
    p: int*;
}

// func f454() {
//    u1 := IntOrPtr454{i = 42};
//    u2 := IntOrPtr454{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i454: int;

struct Vector454 {
    x: int;
    y: int;
}

func fact_iter454(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec454(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec454(n-1);
    }
}

const n454 = 1 + sizeof(p454);

var p454: T454*;

struct T454 {
    a: int[n454];
}


func example_test455(): int {
    return fact_rec455(10) == fact_iter455(10);
}

union IntOrPtr455 {
    i: int;
    p: int*;
}

// func f455() {
//    u1 := IntOrPtr455{i = 42};
//    u2 := IntOrPtr455{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i455: int;

struct Vector455 {
    x: int;
    y: int;
}

func fact_iter455(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec455(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec455(n-1);
    }
}

const n455 = 1 + sizeof(p455);

var p455: T455*;

struct T455 {
    a: int[n455];
}


func example_test456(): int {
    return fact_rec456(10) == fact_iter456(10);
}

union IntOrPtr456 {
    i: int;
    p: int*;
}

// func f456() {
//    u1 := IntOrPtr456{i = 42};
//    u2 := IntOrPtr456{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i456: int;

struct Vector456 {
    x: int;
    y: int;
}

func fact_iter456(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec456(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec456(n-1);
    }
}

const n456 = 1 + sizeof(p456);

var p456: T456*;

struct T456 {
    a: int[n456];
}


func example_test457(): int {
    return fact_rec457(10) == fact_iter457(10);
}

union IntOrPtr457 {
    i: int;
    p: int*;
}

// func f457() {
//    u1 := IntOrPtr457{i = 42};
//    u2 := IntOrPtr457{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i457: int;

struct Vector457 {
    x: int;
    y: int;
}

func fact_iter457(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec457(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec457(n-1);
    }
}

const n457 = 1 + sizeof(p457);

var p457: T457*;

struct T457 {
    a: int[n457];
}


func example_test458(): int {
    return fact_rec458(10) == fact_iter458(10);
}

union IntOrPtr458 {
    i: int;
    p: int*;
}

// func f458() {
//    u1 := IntOrPtr458{i = 42};
//    u2 := IntOrPtr458{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i458: int;

struct Vector458 {
    x: int;
    y: int;
}

func fact_iter458(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec458(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec458(n-1);
    }
}

const n458 = 1 + sizeof(p458);

var p458: T458*;

struct T458 {
    a: int[n458];
}


func example_test459(): int {
    return fact_rec459(10) == fact_iter459(10);
}

union IntOrPtr459 {
    i: int;
    p: int*;
}

// func f459() {
//    u1 := IntOrPtr459{i = 42};
//    u2 := IntOrPtr459{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i459: int;

struct Vector459 {
    x: int;
    y: int;
}

func fact_iter459(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec459(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec459(n-1);
    }
}

const n459 = 1 + sizeof(p459);

var p459: T459*;

struct T459 {
    a: int[n459];
}


func example_test460(): int {
    return fact_rec460(10) == fact_iter460(10);
}

union IntOrPtr460 {
    i: int;
    p: int*;
}

// func f460() {
//    u1 := IntOrPtr460{i = 42};
//    u2 := IntOrPtr460{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i460: int;

struct Vector460 {
    x: int;
    y: int;
}

func fact_iter460(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec460(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec460(n-1);
    }
}

const n460 = 1 + sizeof(p460);

var p460: T460*;

struct T460 {
    a: int[n460];
}


func example_test461(): int {
    return fact_rec461(10) == fact_iter461(10);
}

union IntOrPtr461 {
    i: int;
    p: int*;
}

// func f461() {
//    u1 := IntOrPtr461{i = 42};
//    u2 := IntOrPtr461{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i461: int;

struct Vector461 {
    x: int;
    y: int;
}

func fact_iter461(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec461(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec461(n-1);
    }
}

const n461 = 1 + sizeof(p461);

var p461: T461*;

struct T461 {
    a: int[n461];
}


func example_test462(): int {
    return fact_rec462(10) == fact_iter462(10);
}

union IntOrPtr462 {
    i: int;
    p: int*;
}

// func f462() {
//    u1 := IntOrPtr462{i = 42};
//    u2 := IntOrPtr462{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i462: int;

struct Vector462 {
    x: int;
    y: int;
}

func fact_iter462(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec462(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec462(n-1);
    }
}

const n462 = 1 + sizeof(p462);

var p462: T462*;

struct T462 {
    a: int[n462];
}


func example_test463(): int {
    return fact_rec463(10) == fact_iter463(10);
}

union IntOrPtr463 {
    i: int;
    p: int*;
}

// func f463() {
//    u1 := IntOrPtr463{i = 42};
//    u2 := IntOrPtr463{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i463: int;

struct Vector463 {
    x: int;
    y: int;
}

func fact_iter463(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec463(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec463(n-1);
    }
}

const n463 = 1 + sizeof(p463);

var p463: T463*;

struct T463 {
    a: int[n463];
}


func example_test464(): int {
    return fact_rec464(10) == fact_iter464(10);
}

union IntOrPtr464 {
    i: int;
    p: int*;
}

// func f464() {
//    u1 := IntOrPtr464{i = 42};
//    u2 := IntOrPtr464{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i464: int;

struct Vector464 {
    x: int;
    y: int;
}

func fact_iter464(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec464(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec464(n-1);
    }
}

const n464 = 1 + sizeof(p464);

var p464: T464*;

struct T464 {
    a: int[n464];
}


func example_test465(): int {
    return fact_rec465(10) == fact_iter465(10);
}

union IntOrPtr465 {
    i: int;
    p: int*;
}

// func f465() {
//    u1 := IntOrPtr465{i = 42};
//    u2 := IntOrPtr465{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i465: int;

struct Vector465 {
    x: int;
    y: int;
}

func fact_iter465(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec465(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec465(n-1);
    }
}

const n465 = 1 + sizeof(p465);

var p465: T465*;

struct T465 {
    a: int[n465];
}


func example_test466(): int {
    return fact_rec466(10) == fact_iter466(10);
}

union IntOrPtr466 {
    i: int;
    p: int*;
}

// func f466() {
//    u1 := IntOrPtr466{i = 42};
//    u2 := IntOrPtr466{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i466: int;

struct Vector466 {
    x: int;
    y: int;
}

func fact_iter466(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec466(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec466(n-1);
    }
}

const n466 = 1 + sizeof(p466);

var p466: T466*;

struct T466 {
    a: int[n466];
}


func example_test467(): int {
    return fact_rec467(10) == fact_iter467(10);
}

union IntOrPtr467 {
    i: int;
    p: int*;
}

// func f467() {
//    u1 := IntOrPtr467{i = 42};
//    u2 := IntOrPtr467{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i467: int;

struct Vector467 {
    x: int;
    y: int;
}

func fact_iter467(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec467(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec467(n-1);
    }
}

const n467 = 1 + sizeof(p467);

var p467: T467*;

struct T467 {
    a: int[n467];
}


func example_test468(): int {
    return fact_rec468(10) == fact_iter468(10);
}

union IntOrPtr468 {
    i: int;
    p: int*;
}

// func f468() {
//    u1 := IntOrPtr468{i = 42};
//    u2 := IntOrPtr468{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i468: int;

struct Vector468 {
    x: int;
    y: int;
}

func fact_iter468(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec468(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec468(n-1);
    }
}

const n468 = 1 + sizeof(p468);

var p468: T468*;

struct T468 {
    a: int[n468];
}


func example_test469(): int {
    return fact_rec469(10) == fact_iter469(10);
}

union IntOrPtr469 {
    i: int;
    p: int*;
}

// func f469() {
//    u1 := IntOrPtr469{i = 42};
//    u2 := IntOrPtr469{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i469: int;

struct Vector469 {
    x: int;
    y: int;
}

func fact_iter469(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec469(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec469(n-1);
    }
}

const n469 = 1 + sizeof(p469);

var p469: T469*;

struct T469 {
    a: int[n469];
}


func example_test470(): int {
    return fact_rec470(10) == fact_iter470(10);
}

union IntOrPtr470 {
    i: int;
    p: int*;
}

// func f470() {
//    u1 := IntOrPtr470{i = 42};
//    u2 := IntOrPtr470{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i470: int;

struct Vector470 {
    x: int;
    y: int;
}

func fact_iter470(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec470(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec470(n-1);
    }
}

const n470 = 1 + sizeof(p470);

var p470: T470*;

struct T470 {
    a: int[n470];
}


func example_test471(): int {
    return fact_rec471(10) == fact_iter471(10);
}

union IntOrPtr471 {
    i: int;
    p: int*;
}

// func f471() {
//    u1 := IntOrPtr471{i = 42};
//    u2 := IntOrPtr471{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i471: int;

struct Vector471 {
    x: int;
    y: int;
}

func fact_iter471(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec471(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec471(n-1);
    }
}

const n471 = 1 + sizeof(p471);

var p471: T471*;

struct T471 {
    a: int[n471];
}


func example_test472(): int {
    return fact_rec472(10) == fact_iter472(10);
}

union IntOrPtr472 {
    i: int;
    p: int*;
}

// func f472() {
//    u1 := IntOrPtr472{i = 42};
//    u2 := IntOrPtr472{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i472: int;

struct Vector472 {
    x: int;
    y: int;
}

func fact_iter472(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec472(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec472(n-1);
    }
}

const n472 = 1 + sizeof(p472);

var p472: T472*;

struct T472 {
    a: int[n472];
}


func example_test473(): int {
    return fact_rec473(10) == fact_iter473(10);
}

union IntOrPtr473 {
    i: int;
    p: int*;
}

// func f473() {
//    u1 := IntOrPtr473{i = 42};
//    u2 := IntOrPtr473{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i473: int;

struct Vector473 {
    x: int;
    y: int;
}

func fact_iter473(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec473(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec473(n-1);
    }
}

const n473 = 1 + sizeof(p473);

var p473: T473*;

struct T473 {
    a: int[n473];
}


func example_test474(): int {
    return fact_rec474(10) == fact_iter474(10);
}

union IntOrPtr474 {
    i: int;
    p: int*;
}

// func f474() {
//    u1 := IntOrPtr474{i = 42};
//    u2 := IntOrPtr474{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i474: int;

struct Vector474 {
    x: int;
    y: int;
}

func fact_iter474(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec474(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec474(n-1);
    }
}

const n474 = 1 + sizeof(p474);

var p474: T474*;

struct T474 {
    a: int[n474];
}


func example_test475(): int {
    return fact_rec475(10) == fact_iter475(10);
}

union IntOrPtr475 {
    i: int;
    p: int*;
}

// func f475() {
//    u1 := IntOrPtr475{i = 42};
//    u2 := IntOrPtr475{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i475: int;

struct Vector475 {
    x: int;
    y: int;
}

func fact_iter475(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec475(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec475(n-1);
    }
}

const n475 = 1 + sizeof(p475);

var p475: T475*;

struct T475 {
    a: int[n475];
}


func example_test476(): int {
    return fact_rec476(10) == fact_iter476(10);
}

union IntOrPtr476 {
    i: int;
    p: int*;
}

// func f476() {
//    u1 := IntOrPtr476{i = 42};
//    u2 := IntOrPtr476{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i476: int;

struct Vector476 {
    x: int;
    y: int;
}

func fact_iter476(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec476(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec476(n-1);
    }
}

const n476 = 1 + sizeof(p476);

var p476: T476*;

struct T476 {
    a: int[n476];
}


func example_test477(): int {
    return fact_rec477(10) == fact_iter477(10);
}

union IntOrPtr477 {
    i: int;
    p: int*;
}

// func f477() {
//    u1 := IntOrPtr477{i = 42};
//    u2 := IntOrPtr477{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i477: int;

struct Vector477 {
    x: int;
    y: int;
}

func fact_iter477(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec477(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec477(n-1);
    }
}

const n477 = 1 + sizeof(p477);

var p477: T477*;

struct T477 {
    a: int[n477];
}


func example_test478(): int {
    return fact_rec478(10) == fact_iter478(10);
}

union IntOrPtr478 {
    i: int;
    p: int*;
}

// func f478() {
//    u1 := IntOrPtr478{i = 42};
//    u2 := IntOrPtr478{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i478: int;

struct Vector478 {
    x: int;
    y: int;
}

func fact_iter478(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec478(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec478(n-1);
    }
}

const n478 = 1 + sizeof(p478);

var p478: T478*;

struct T478 {
    a: int[n478];
}


func example_test479(): int {
    return fact_rec479(10) == fact_iter479(10);
}

union IntOrPtr479 {
    i: int;
    p: int*;
}

// func f479() {
//    u1 := IntOrPtr479{i = 42};
//    u2 := IntOrPtr479{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i479: int;

struct Vector479 {
    x: int;
    y: int;
}

func fact_iter479(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec479(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec479(n-1);
    }
}

const n479 = 1 + sizeof(p479);

var p479: T479*;

struct T479 {
    a: int[n479];
}


func example_test480(): int {
    return fact_rec480(10) == fact_iter480(10);
}

union IntOrPtr480 {
    i: int;
    p: int*;
}

// func f480() {
//    u1 := IntOrPtr480{i = 42};
//    u2 := IntOrPtr480{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i480: int;

struct Vector480 {
    x: int;
    y: int;
}

func fact_iter480(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec480(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec480(n-1);
    }
}

const n480 = 1 + sizeof(p480);

var p480: T480*;

struct T480 {
    a: int[n480];
}


func example_test481(): int {
    return fact_rec481(10) == fact_iter481(10);
}

union IntOrPtr481 {
    i: int;
    p: int*;
}

// func f481() {
//    u1 := IntOrPtr481{i = 42};
//    u2 := IntOrPtr481{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i481: int;

struct Vector481 {
    x: int;
    y: int;
}

func fact_iter481(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec481(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec481(n-1);
    }
}

const n481 = 1 + sizeof(p481);

var p481: T481*;

struct T481 {
    a: int[n481];
}


func example_test482(): int {
    return fact_rec482(10) == fact_iter482(10);
}

union IntOrPtr482 {
    i: int;
    p: int*;
}

// func f482() {
//    u1 := IntOrPtr482{i = 42};
//    u2 := IntOrPtr482{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i482: int;

struct Vector482 {
    x: int;
    y: int;
}

func fact_iter482(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec482(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec482(n-1);
    }
}

const n482 = 1 + sizeof(p482);

var p482: T482*;

struct T482 {
    a: int[n482];
}


func example_test483(): int {
    return fact_rec483(10) == fact_iter483(10);
}

union IntOrPtr483 {
    i: int;
    p: int*;
}

// func f483() {
//    u1 := IntOrPtr483{i = 42};
//    u2 := IntOrPtr483{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i483: int;

struct Vector483 {
    x: int;
    y: int;
}

func fact_iter483(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec483(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec483(n-1);
    }
}

const n483 = 1 + sizeof(p483);

var p483: T483*;

struct T483 {
    a: int[n483];
}


func example_test484(): int {
    return fact_rec484(10) == fact_iter484(10);
}

union IntOrPtr484 {
    i: int;
    p: int*;
}

// func f484() {
//    u1 := IntOrPtr484{i = 42};
//    u2 := IntOrPtr484{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i484: int;

struct Vector484 {
    x: int;
    y: int;
}

func fact_iter484(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec484(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec484(n-1);
    }
}

const n484 = 1 + sizeof(p484);

var p484: T484*;

struct T484 {
    a: int[n484];
}


func example_test485(): int {
    return fact_rec485(10) == fact_iter485(10);
}

union IntOrPtr485 {
    i: int;
    p: int*;
}

// func f485() {
//    u1 := IntOrPtr485{i = 42};
//    u2 := IntOrPtr485{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i485: int;

struct Vector485 {
    x: int;
    y: int;
}

func fact_iter485(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec485(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec485(n-1);
    }
}

const n485 = 1 + sizeof(p485);

var p485: T485*;

struct T485 {
    a: int[n485];
}


func example_test486(): int {
    return fact_rec486(10) == fact_iter486(10);
}

union IntOrPtr486 {
    i: int;
    p: int*;
}

// func f486() {
//    u1 := IntOrPtr486{i = 42};
//    u2 := IntOrPtr486{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i486: int;

struct Vector486 {
    x: int;
    y: int;
}

func fact_iter486(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec486(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec486(n-1);
    }
}

const n486 = 1 + sizeof(p486);

var p486: T486*;

struct T486 {
    a: int[n486];
}


func example_test487(): int {
    return fact_rec487(10) == fact_iter487(10);
}

union IntOrPtr487 {
    i: int;
    p: int*;
}

// func f487() {
//    u1 := IntOrPtr487{i = 42};
//    u2 := IntOrPtr487{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i487: int;

struct Vector487 {
    x: int;
    y: int;
}

func fact_iter487(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec487(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec487(n-1);
    }
}

const n487 = 1 + sizeof(p487);

var p487: T487*;

struct T487 {
    a: int[n487];
}


func example_test488(): int {
    return fact_rec488(10) == fact_iter488(10);
}

union IntOrPtr488 {
    i: int;
    p: int*;
}

// func f488() {
//    u1 := IntOrPtr488{i = 42};
//    u2 := IntOrPtr488{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i488: int;

struct Vector488 {
    x: int;
    y: int;
}

func fact_iter488(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec488(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec488(n-1);
    }
}

const n488 = 1 + sizeof(p488);

var p488: T488*;

struct T488 {
    a: int[n488];
}


func example_test489(): int {
    return fact_rec489(10) == fact_iter489(10);
}

union IntOrPtr489 {
    i: int;
    p: int*;
}

// func f489() {
//    u1 := IntOrPtr489{i = 42};
//    u2 := IntOrPtr489{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i489: int;

struct Vector489 {
    x: int;
    y: int;
}

func fact_iter489(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec489(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec489(n-1);
    }
}

const n489 = 1 + sizeof(p489);

var p489: T489*;

struct T489 {
    a: int[n489];
}


func example_test490(): int {
    return fact_rec490(10) == fact_iter490(10);
}

union IntOrPtr490 {
    i: int;
    p: int*;
}

// func f490() {
//    u1 := IntOrPtr490{i = 42};
//    u2 := IntOrPtr490{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i490: int;

struct Vector490 {
    x: int;
    y: int;
}

func fact_iter490(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec490(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec490(n-1);
    }
}

const n490 = 1 + sizeof(p490);

var p490: T490*;

struct T490 {
    a: int[n490];
}


func example_test491(): int {
    return fact_rec491(10) == fact_iter491(10);
}

union IntOrPtr491 {
    i: int;
    p: int*;
}

// func f491() {
//    u1 := IntOrPtr491{i = 42};
//    u2 := IntOrPtr491{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i491: int;

struct Vector491 {
    x: int;
    y: int;
}

func fact_iter491(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec491(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec491(n-1);
    }
}

const n491 = 1 + sizeof(p491);

var p491: T491*;

struct T491 {
    a: int[n491];
}


func example_test492(): int {
    return fact_rec492(10) == fact_iter492(10);
}

union IntOrPtr492 {
    i: int;
    p: int*;
}

// func f492() {
//    u1 := IntOrPtr492{i = 42};
//    u2 := IntOrPtr492{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i492: int;

struct Vector492 {
    x: int;
    y: int;
}

func fact_iter492(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec492(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec492(n-1);
    }
}

const n492 = 1 + sizeof(p492);

var p492: T492*;

struct T492 {
    a: int[n492];
}


func example_test493(): int {
    return fact_rec493(10) == fact_iter493(10);
}

union IntOrPtr493 {
    i: int;
    p: int*;
}

// func f493() {
//    u1 := IntOrPtr493{i = 42};
//    u2 := IntOrPtr493{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i493: int;

struct Vector493 {
    x: int;
    y: int;
}

func fact_iter493(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec493(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec493(n-1);
    }
}

const n493 = 1 + sizeof(p493);

var p493: T493*;

struct T493 {
    a: int[n493];
}


func example_test494(): int {
    return fact_rec494(10) == fact_iter494(10);
}

union IntOrPtr494 {
    i: int;
    p: int*;
}

// func f494() {
//    u1 := IntOrPtr494{i = 42};
//    u2 := IntOrPtr494{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i494: int;

struct Vector494 {
    x: int;
    y: int;
}

func fact_iter494(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec494(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec494(n-1);
    }
}

const n494 = 1 + sizeof(p494);

var p494: T494*;

struct T494 {
    a: int[n494];
}


func example_test495(): int {
    return fact_rec495(10) == fact_iter495(10);
}

union IntOrPtr495 {
    i: int;
    p: int*;
}

// func f495() {
//    u1 := IntOrPtr495{i = 42};
//    u2 := IntOrPtr495{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i495: int;

struct Vector495 {
    x: int;
    y: int;
}

func fact_iter495(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec495(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec495(n-1);
    }
}

const n495 = 1 + sizeof(p495);

var p495: T495*;

struct T495 {
    a: int[n495];
}


func example_test496(): int {
    return fact_rec496(10) == fact_iter496(10);
}

union IntOrPtr496 {
    i: int;
    p: int*;
}

// func f496() {
//    u1 := IntOrPtr496{i = 42};
//    u2 := IntOrPtr496{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i496: int;

struct Vector496 {
    x: int;
    y: int;
}

func fact_iter496(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec496(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec496(n-1);
    }
}

const n496 = 1 + sizeof(p496);

var p496: T496*;

struct T496 {
    a: int[n496];
}


func example_test497(): int {
    return fact_rec497(10) == fact_iter497(10);
}

union IntOrPtr497 {
    i: int;
    p: int*;
}

// func f497() {
//    u1 := IntOrPtr497{i = 42};
//    u2 := IntOrPtr497{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i497: int;

struct Vector497 {
    x: int;
    y: int;
}

func fact_iter497(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec497(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec497(n-1);
    }
}

const n497 = 1 + sizeof(p497);

var p497: T497*;

struct T497 {
    a: int[n497];
}


func example_test498(): int {
    return fact_rec498(10) == fact_iter498(10);
}

union IntOrPtr498 {
    i: int;
    p: int*;
}

// func f498() {
//    u1 := IntOrPtr498{i = 42};
//    u2 := IntOrPtr498{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i498: int;

struct Vector498 {
    x: int;
    y: int;
}

func fact_iter498(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec498(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec498(n-1);
    }
}

const n498 = 1 + sizeof(p498);

var p498: T498*;

struct T498 {
    a: int[n498];
}


func example_test499(): int {
    return fact_rec499(10) == fact_iter499(10);
}

union IntOrPtr499 {
    i: int;
    p: int*;
}

// func f499() {
//    u1 := IntOrPtr499{i = 42};
//    u2 := IntOrPtr499{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i499: int;

struct Vector499 {
    x: int;
    y: int;
}

func fact_iter499(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec499(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec499(n-1);
    }
}

const n499 = 1 + sizeof(p499);

var p499: T499*;

struct T499 {
    a: int[n499];
}


func example_test500(): int {
    return fact_rec500(10) == fact_iter500(10);
}

union IntOrPtr500 {
    i: int;
    p: int*;
}

// func f500() {
//    u1 := IntOrPtr500{i = 42};
//    u2 := IntOrPtr500{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i500: int;

struct Vector500 {
    x: int;
    y: int;
}

func fact_iter500(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec500(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec500(n-1);
    }
}

const n500 = 1 + sizeof(p500);

var p500: T500*;

struct T500 {
    a: int[n500];
}


func example_test501(): int {
    return fact_rec501(10) == fact_iter501(10);
}

union IntOrPtr501 {
    i: int;
    p: int*;
}

// func f501() {
//    u1 := IntOrPtr501{i = 42};
//    u2 := IntOrPtr501{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i501: int;

struct Vector501 {
    x: int;
    y: int;
}

func fact_iter501(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec501(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec501(n-1);
    }
}

const n501 = 1 + sizeof(p501);

var p501: T501*;

struct T501 {
    a: int[n501];
}


func example_test502(): int {
    return fact_rec502(10) == fact_iter502(10);
}

union IntOrPtr502 {
    i: int;
    p: int*;
}

// func f502() {
//    u1 := IntOrPtr502{i = 42};
//    u2 := IntOrPtr502{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i502: int;

struct Vector502 {
    x: int;
    y: int;
}

func fact_iter502(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec502(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec502(n-1);
    }
}

const n502 = 1 + sizeof(p502);

var p502: T502*;

struct T502 {
    a: int[n502];
}


func example_test503(): int {
    return fact_rec503(10) == fact_iter503(10);
}

union IntOrPtr503 {
    i: int;
    p: int*;
}

// func f503() {
//    u1 := IntOrPtr503{i = 42};
//    u2 := IntOrPtr503{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i503: int;

struct Vector503 {
    x: int;
    y: int;
}

func fact_iter503(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec503(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec503(n-1);
    }
}

const n503 = 1 + sizeof(p503);

var p503: T503*;

struct T503 {
    a: int[n503];
}


func example_test504(): int {
    return fact_rec504(10) == fact_iter504(10);
}

union IntOrPtr504 {
    i: int;
    p: int*;
}

// func f504() {
//    u1 := IntOrPtr504{i = 42};
//    u2 := IntOrPtr504{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i504: int;

struct Vector504 {
    x: int;
    y: int;
}

func fact_iter504(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec504(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec504(n-1);
    }
}

const n504 = 1 + sizeof(p504);

var p504: T504*;

struct T504 {
    a: int[n504];
}


func example_test505(): int {
    return fact_rec505(10) == fact_iter505(10);
}

union IntOrPtr505 {
    i: int;
    p: int*;
}

// func f505() {
//    u1 := IntOrPtr505{i = 42};
//    u2 := IntOrPtr505{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i505: int;

struct Vector505 {
    x: int;
    y: int;
}

func fact_iter505(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec505(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec505(n-1);
    }
}

const n505 = 1 + sizeof(p505);

var p505: T505*;

struct T505 {
    a: int[n505];
}


func example_test506(): int {
    return fact_rec506(10) == fact_iter506(10);
}

union IntOrPtr506 {
    i: int;
    p: int*;
}

// func f506() {
//    u1 := IntOrPtr506{i = 42};
//    u2 := IntOrPtr506{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i506: int;

struct Vector506 {
    x: int;
    y: int;
}

func fact_iter506(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec506(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec506(n-1);
    }
}

const n506 = 1 + sizeof(p506);

var p506: T506*;

struct T506 {
    a: int[n506];
}


func example_test507(): int {
    return fact_rec507(10) == fact_iter507(10);
}

union IntOrPtr507 {
    i: int;
    p: int*;
}

// func f507() {
//    u1 := IntOrPtr507{i = 42};
//    u2 := IntOrPtr507{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i507: int;

struct Vector507 {
    x: int;
    y: int;
}

func fact_iter507(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec507(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec507(n-1);
    }
}

const n507 = 1 + sizeof(p507);

var p507: T507*;

struct T507 {
    a: int[n507];
}


func example_test508(): int {
    return fact_rec508(10) == fact_iter508(10);
}

union IntOrPtr508 {
    i: int;
    p: int*;
}

// func f508() {
//    u1 := IntOrPtr508{i = 42};
//    u2 := IntOrPtr508{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i508: int;

struct Vector508 {
    x: int;
    y: int;
}

func fact_iter508(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec508(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec508(n-1);
    }
}

const n508 = 1 + sizeof(p508);

var p508: T508*;

struct T508 {
    a: int[n508];
}


func example_test509(): int {
    return fact_rec509(10) == fact_iter509(10);
}

union IntOrPtr509 {
    i: int;
    p: int*;
}

// func f509() {
//    u1 := IntOrPtr509{i = 42};
//    u2 := IntOrPtr509{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i509: int;

struct Vector509 {
    x: int;
    y: int;
}

func fact_iter509(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec509(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec509(n-1);
    }
}

const n509 = 1 + sizeof(p509);

var p509: T509*;

struct T509 {
    a: int[n509];
}


func example_test510(): int {
    return fact_rec510(10) == fact_iter510(10);
}

union IntOrPtr510 {
    i: int;
    p: int*;
}

// func f510() {
//    u1 := IntOrPtr510{i = 42};
//    u2 := IntOrPtr510{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i510: int;

struct Vector510 {
    x: int;
    y: int;
}

func fact_iter510(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec510(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec510(n-1);
    }
}

const n510 = 1 + sizeof(p510);

var p510: T510*;

struct T510 {
    a: int[n510];
}


func example_test511(): int {
    return fact_rec511(10) == fact_iter511(10);
}

union IntOrPtr511 {
    i: int;
    p: int*;
}

// func f511() {
//    u1 := IntOrPtr511{i = 42};
//    u2 := IntOrPtr511{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i511: int;

struct Vector511 {
    x: int;
    y: int;
}

func fact_iter511(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec511(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec511(n-1);
    }
}

const n511 = 1 + sizeof(p511);

var p511: T511*;

struct T511 {
    a: int[n511];
}


func example_test512(): int {
    return fact_rec512(10) == fact_iter512(10);
}

union IntOrPtr512 {
    i: int;
    p: int*;
}

// func f512() {
//    u1 := IntOrPtr512{i = 42};
//    u2 := IntOrPtr512{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i512: int;

struct Vector512 {
    x: int;
    y: int;
}

func fact_iter512(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec512(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec512(n-1);
    }
}

const n512 = 1 + sizeof(p512);

var p512: T512*;

struct T512 {
    a: int[n512];
}


func example_test513(): int {
    return fact_rec513(10) == fact_iter513(10);
}

union IntOrPtr513 {
    i: int;
    p: int*;
}

// func f513() {
//    u1 := IntOrPtr513{i = 42};
//    u2 := IntOrPtr513{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i513: int;

struct Vector513 {
    x: int;
    y: int;
}

func fact_iter513(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec513(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec513(n-1);
    }
}

const n513 = 1 + sizeof(p513);

var p513: T513*;

struct T513 {
    a: int[n513];
}


func example_test514(): int {
    return fact_rec514(10) == fact_iter514(10);
}

union IntOrPtr514 {
    i: int;
    p: int*;
}

// func f514() {
//    u1 := IntOrPtr514{i = 42};
//    u2 := IntOrPtr514{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i514: int;

struct Vector514 {
    x: int;
    y: int;
}

func fact_iter514(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec514(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec514(n-1);
    }
}

const n514 = 1 + sizeof(p514);

var p514: T514*;

struct T514 {
    a: int[n514];
}


func example_test515(): int {
    return fact_rec515(10) == fact_iter515(10);
}

union IntOrPtr515 {
    i: int;
    p: int*;
}

// func f515() {
//    u1 := IntOrPtr515{i = 42};
//    u2 := IntOrPtr515{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i515: int;

struct Vector515 {
    x: int;
    y: int;
}

func fact_iter515(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec515(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec515(n-1);
    }
}

const n515 = 1 + sizeof(p515);

var p515: T515*;

struct T515 {
    a: int[n515];
}


func example_test516(): int {
    return fact_rec516(10) == fact_iter516(10);
}

union IntOrPtr516 {
    i: int;
    p: int*;
}

// func f516() {
//    u1 := IntOrPtr516{i = 42};
//    u2 := IntOrPtr516{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i516: int;

struct Vector516 {
    x: int;
    y: int;
}

func fact_iter516(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec516(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec516(n-1);
    }
}

const n516 = 1 + sizeof(p516);

var p516: T516*;

struct T516 {
    a: int[n516];
}


func example_test517(): int {
    return fact_rec517(10) == fact_iter517(10);
}

union IntOrPtr517 {
    i: int;
    p: int*;
}

// func f517() {
//    u1 := IntOrPtr517{i = 42};
//    u2 := IntOrPtr517{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i517: int;

struct Vector517 {
    x: int;
    y: int;
}

func fact_iter517(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec517(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec517(n-1);
    }
}

const n517 = 1 + sizeof(p517);

var p517: T517*;

struct T517 {
    a: int[n517];
}


func example_test518(): int {
    return fact_rec518(10) == fact_iter518(10);
}

union IntOrPtr518 {
    i: int;
    p: int*;
}

// func f518() {
//    u1 := IntOrPtr518{i = 42};
//    u2 := IntOrPtr518{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i518: int;

struct Vector518 {
    x: int;
    y: int;
}

func fact_iter518(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec518(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec518(n-1);
    }
}

const n518 = 1 + sizeof(p518);

var p518: T518*;

struct T518 {
    a: int[n518];
}


func example_test519(): int {
    return fact_rec519(10) == fact_iter519(10);
}

union IntOrPtr519 {
    i: int;
    p: int*;
}

// func f519() {
//    u1 := IntOrPtr519{i = 42};
//    u2 := IntOrPtr519{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i519: int;

struct Vector519 {
    x: int;
    y: int;
}

func fact_iter519(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec519(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec519(n-1);
    }
}

const n519 = 1 + sizeof(p519);

var p519: T519*;

struct T519 {
    a: int[n519];
}


func example_test520(): int {
    return fact_rec520(10) == fact_iter520(10);
}

union IntOrPtr520 {
    i: int;
    p: int*;
}

// func f520() {
//    u1 := IntOrPtr520{i = 42};
//    u2 := IntOrPtr520{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i520: int;

struct Vector520 {
    x: int;
    y: int;
}

func fact_iter520(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec520(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec520(n-1);
    }
}

const n520 = 1 + sizeof(p520);

var p520: T520*;

struct T520 {
    a: int[n520];
}


func example_test521(): int {
    return fact_rec521(10) == fact_iter521(10);
}

union IntOrPtr521 {
    i: int;
    p: int*;
}

// func f521() {
//    u1 := IntOrPtr521{i = 42};
//    u2 := IntOrPtr521{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i521: int;

struct Vector521 {
    x: int;
    y: int;
}

func fact_iter521(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec521(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec521(n-1);
    }
}

const n521 = 1 + sizeof(p521);

var p521: T521*;

struct T521 {
    a: int[n521];
}


func example_test522(): int {
    return fact_rec522(10) == fact_iter522(10);
}

union IntOrPtr522 {
    i: int;
    p: int*;
}

// func f522() {
//    u1 := IntOrPtr522{i = 42};
//    u2 := IntOrPtr522{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i522: int;

struct Vector522 {
    x: int;
    y: int;
}

func fact_iter522(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec522(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec522(n-1);
    }
}

const n522 = 1 + sizeof(p522);

var p522: T522*;

struct T522 {
    a: int[n522];
}


func example_test523(): int {
    return fact_rec523(10) == fact_iter523(10);
}

union IntOrPtr523 {
    i: int;
    p: int*;
}

// func f523() {
//    u1 := IntOrPtr523{i = 42};
//    u2 := IntOrPtr523{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i523: int;

struct Vector523 {
    x: int;
    y: int;
}

func fact_iter523(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec523(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec523(n-1);
    }
}

const n523 = 1 + sizeof(p523);

var p523: T523*;

struct T523 {
    a: int[n523];
}


func example_test524(): int {
    return fact_rec524(10) == fact_iter524(10);
}

union IntOrPtr524 {
    i: int;
    p: int*;
}

// func f524() {
//    u1 := IntOrPtr524{i = 42};
//    u2 := IntOrPtr524{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i524: int;

struct Vector524 {
    x: int;
    y: int;
}

func fact_iter524(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec524(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec524(n-1);
    }
}

const n524 = 1 + sizeof(p524);

var p524: T524*;

struct T524 {
    a: int[n524];
}


func example_test525(): int {
    return fact_rec525(10) == fact_iter525(10);
}

union IntOrPtr525 {
    i: int;
    p: int*;
}

// func f525() {
//    u1 := IntOrPtr525{i = 42};
//    u2 := IntOrPtr525{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i525: int;

struct Vector525 {
    x: int;
    y: int;
}

func fact_iter525(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec525(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec525(n-1);
    }
}

const n525 = 1 + sizeof(p525);

var p525: T525*;

struct T525 {
    a: int[n525];
}


func example_test526(): int {
    return fact_rec526(10) == fact_iter526(10);
}

union IntOrPtr526 {
    i: int;
    p: int*;
}

// func f526() {
//    u1 := IntOrPtr526{i = 42};
//    u2 := IntOrPtr526{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i526: int;

struct Vector526 {
    x: int;
    y: int;
}

func fact_iter526(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec526(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec526(n-1);
    }
}

const n526 = 1 + sizeof(p526);

var p526: T526*;

struct T526 {
    a: int[n526];
}


func example_test527(): int {
    return fact_rec527(10) == fact_iter527(10);
}

union IntOrPtr527 {
    i: int;
    p: int*;
}

// func f527() {
//    u1 := IntOrPtr527{i = 42};
//    u2 := IntOrPtr527{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i527: int;

struct Vector527 {
    x: int;
    y: int;
}

func fact_iter527(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec527(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec527(n-1);
    }
}

const n527 = 1 + sizeof(p527);

var p527: T527*;

struct T527 {
    a: int[n527];
}


func example_test528(): int {
    return fact_rec528(10) == fact_iter528(10);
}

union IntOrPtr528 {
    i: int;
    p: int*;
}

// func f528() {
//    u1 := IntOrPtr528{i = 42};
//    u2 := IntOrPtr528{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i528: int;

struct Vector528 {
    x: int;
    y: int;
}

func fact_iter528(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec528(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec528(n-1);
    }
}

const n528 = 1 + sizeof(p528);

var p528: T528*;

struct T528 {
    a: int[n528];
}


func example_test529(): int {
    return fact_rec529(10) == fact_iter529(10);
}

union IntOrPtr529 {
    i: int;
    p: int*;
}

// func f529() {
//    u1 := IntOrPtr529{i = 42};
//    u2 := IntOrPtr529{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i529: int;

struct Vector529 {
    x: int;
    y: int;
}

func fact_iter529(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec529(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec529(n-1);
    }
}

const n529 = 1 + sizeof(p529);

var p529: T529*;

struct T529 {
    a: int[n529];
}


func example_test530(): int {
    return fact_rec530(10) == fact_iter530(10);
}

union IntOrPtr530 {
    i: int;
    p: int*;
}

// func f530() {
//    u1 := IntOrPtr530{i = 42};
//    u2 := IntOrPtr530{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i530: int;

struct Vector530 {
    x: int;
    y: int;
}

func fact_iter530(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec530(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec530(n-1);
    }
}

const n530 = 1 + sizeof(p530);

var p530: T530*;

struct T530 {
    a: int[n530];
}


func example_test531(): int {
    return fact_rec531(10) == fact_iter531(10);
}

union IntOrPtr531 {
    i: int;
    p: int*;
}

// func f531() {
//    u1 := IntOrPtr531{i = 42};
//    u2 := IntOrPtr531{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i531: int;

struct Vector531 {
    x: int;
    y: int;
}

func fact_iter531(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec531(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec531(n-1);
    }
}

const n531 = 1 + sizeof(p531);

var p531: T531*;

struct T531 {
    a: int[n531];
}


func example_test532(): int {
    return fact_rec532(10) == fact_iter532(10);
}

union IntOrPtr532 {
    i: int;
    p: int*;
}

// func f532() {
//    u1 := IntOrPtr532{i = 42};
//    u2 := IntOrPtr532{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i532: int;

struct Vector532 {
    x: int;
    y: int;
}

func fact_iter532(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec532(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec532(n-1);
    }
}

const n532 = 1 + sizeof(p532);

var p532: T532*;

struct T532 {
    a: int[n532];
}


func example_test533(): int {
    return fact_rec533(10) == fact_iter533(10);
}

union IntOrPtr533 {
    i: int;
    p: int*;
}

// func f533() {
//    u1 := IntOrPtr533{i = 42};
//    u2 := IntOrPtr533{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i533: int;

struct Vector533 {
    x: int;
    y: int;
}

func fact_iter533(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec533(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec533(n-1);
    }
}

const n533 = 1 + sizeof(p533);

var p533: T533*;

struct T533 {
    a: int[n533];
}


func example_test534(): int {
    return fact_rec534(10) == fact_iter534(10);
}

union IntOrPtr534 {
    i: int;
    p: int*;
}

// func f534() {
//    u1 := IntOrPtr534{i = 42};
//    u2 := IntOrPtr534{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i534: int;

struct Vector534 {
    x: int;
    y: int;
}

func fact_iter534(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec534(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec534(n-1);
    }
}

const n534 = 1 + sizeof(p534);

var p534: T534*;

struct T534 {
    a: int[n534];
}


func example_test535(): int {
    return fact_rec535(10) == fact_iter535(10);
}

union IntOrPtr535 {
    i: int;
    p: int*;
}

// func f535() {
//    u1 := IntOrPtr535{i = 42};
//    u2 := IntOrPtr535{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i535: int;

struct Vector535 {
    x: int;
    y: int;
}

func fact_iter535(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec535(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec535(n-1);
    }
}

const n535 = 1 + sizeof(p535);

var p535: T535*;

struct T535 {
    a: int[n535];
}


func example_test536(): int {
    return fact_rec536(10) == fact_iter536(10);
}

union IntOrPtr536 {
    i: int;
    p: int*;
}

// func f536() {
//    u1 := IntOrPtr536{i = 42};
//    u2 := IntOrPtr536{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i536: int;

struct Vector536 {
    x: int;
    y: int;
}

func fact_iter536(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec536(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec536(n-1);
    }
}

const n536 = 1 + sizeof(p536);

var p536: T536*;

struct T536 {
    a: int[n536];
}


func example_test537(): int {
    return fact_rec537(10) == fact_iter537(10);
}

union IntOrPtr537 {
    i: int;
    p: int*;
}

// func f537() {
//    u1 := IntOrPtr537{i = 42};
//    u2 := IntOrPtr537{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i537: int;

struct Vector537 {
    x: int;
    y: int;
}

func fact_iter537(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec537(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec537(n-1);
    }
}

const n537 = 1 + sizeof(p537);

var p537: T537*;

struct T537 {
    a: int[n537];
}


func example_test538(): int {
    return fact_rec538(10) == fact_iter538(10);
}

union IntOrPtr538 {
    i: int;
    p: int*;
}

// func f538() {
//    u1 := IntOrPtr538{i = 42};
//    u2 := IntOrPtr538{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i538: int;

struct Vector538 {
    x: int;
    y: int;
}

func fact_iter538(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec538(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec538(n-1);
    }
}

const n538 = 1 + sizeof(p538);

var p538: T538*;

struct T538 {
    a: int[n538];
}


func example_test539(): int {
    return fact_rec539(10) == fact_iter539(10);
}

union IntOrPtr539 {
    i: int;
    p: int*;
}

// func f539() {
//    u1 := IntOrPtr539{i = 42};
//    u2 := IntOrPtr539{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i539: int;

struct Vector539 {
    x: int;
    y: int;
}

func fact_iter539(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec539(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec539(n-1);
    }
}

const n539 = 1 + sizeof(p539);

var p539: T539*;

struct T539 {
    a: int[n539];
}


func example_test540(): int {
    return fact_rec540(10) == fact_iter540(10);
}

union IntOrPtr540 {
    i: int;
    p: int*;
}

// func f540() {
//    u1 := IntOrPtr540{i = 42};
//    u2 := IntOrPtr540{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i540: int;

struct Vector540 {
    x: int;
    y: int;
}

func fact_iter540(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec540(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec540(n-1);
    }
}

const n540 = 1 + sizeof(p540);

var p540: T540*;

struct T540 {
    a: int[n540];
}


func example_test541(): int {
    return fact_rec541(10) == fact_iter541(10);
}

union IntOrPtr541 {
    i: int;
    p: int*;
}

// func f541() {
//    u1 := IntOrPtr541{i = 42};
//    u2 := IntOrPtr541{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i541: int;

struct Vector541 {
    x: int;
    y: int;
}

func fact_iter541(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec541(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec541(n-1);
    }
}

const n541 = 1 + sizeof(p541);

var p541: T541*;

struct T541 {
    a: int[n541];
}


func example_test542(): int {
    return fact_rec542(10) == fact_iter542(10);
}

union IntOrPtr542 {
    i: int;
    p: int*;
}

// func f542() {
//    u1 := IntOrPtr542{i = 42};
//    u2 := IntOrPtr542{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i542: int;

struct Vector542 {
    x: int;
    y: int;
}

func fact_iter542(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec542(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec542(n-1);
    }
}

const n542 = 1 + sizeof(p542);

var p542: T542*;

struct T542 {
    a: int[n542];
}


func example_test543(): int {
    return fact_rec543(10) == fact_iter543(10);
}

union IntOrPtr543 {
    i: int;
    p: int*;
}

// func f543() {
//    u1 := IntOrPtr543{i = 42};
//    u2 := IntOrPtr543{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i543: int;

struct Vector543 {
    x: int;
    y: int;
}

func fact_iter543(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec543(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec543(n-1);
    }
}

const n543 = 1 + sizeof(p543);

var p543: T543*;

struct T543 {
    a: int[n543];
}


func example_test544(): int {
    return fact_rec544(10) == fact_iter544(10);
}

union IntOrPtr544 {
    i: int;
    p: int*;
}

// func f544() {
//    u1 := IntOrPtr544{i = 42};
//    u2 := IntOrPtr544{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i544: int;

struct Vector544 {
    x: int;
    y: int;
}

func fact_iter544(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec544(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec544(n-1);
    }
}

const n544 = 1 + sizeof(p544);

var p544: T544*;

struct T544 {
    a: int[n544];
}


func example_test545(): int {
    return fact_rec545(10) == fact_iter545(10);
}

union IntOrPtr545 {
    i: int;
    p: int*;
}

// func f545() {
//    u1 := IntOrPtr545{i = 42};
//    u2 := IntOrPtr545{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i545: int;

struct Vector545 {
    x: int;
    y: int;
}

func fact_iter545(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec545(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec545(n-1);
    }
}

const n545 = 1 + sizeof(p545);

var p545: T545*;

struct T545 {
    a: int[n545];
}


func example_test546(): int {
    return fact_rec546(10) == fact_iter546(10);
}

union IntOrPtr546 {
    i: int;
    p: int*;
}

// func f546() {
//    u1 := IntOrPtr546{i = 42};
//    u2 := IntOrPtr546{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i546: int;

struct Vector546 {
    x: int;
    y: int;
}

func fact_iter546(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec546(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec546(n-1);
    }
}

const n546 = 1 + sizeof(p546);

var p546: T546*;

struct T546 {
    a: int[n546];
}


func example_test547(): int {
    return fact_rec547(10) == fact_iter547(10);
}

union IntOrPtr547 {
    i: int;
    p: int*;
}

// func f547() {
//    u1 := IntOrPtr547{i = 42};
//    u2 := IntOrPtr547{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i547: int;

struct Vector547 {
    x: int;
    y: int;
}

func fact_iter547(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec547(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec547(n-1);
    }
}

const n547 = 1 + sizeof(p547);

var p547: T547*;

struct T547 {
    a: int[n547];
}


func example_test548(): int {
    return fact_rec548(10) == fact_iter548(10);
}

union IntOrPtr548 {
    i: int;
    p: int*;
}

// func f548() {
//    u1 := IntOrPtr548{i = 42};
//    u2 := IntOrPtr548{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i548: int;

struct Vector548 {
    x: int;
    y: int;
}

func fact_iter548(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec548(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec548(n-1);
    }
}

const n548 = 1 + sizeof(p548);

var p548: T548*;

struct T548 {
    a: int[n548];
}


func example_test549(): int {
    return fact_rec549(10) == fact_iter549(10);
}

union IntOrPtr549 {
    i: int;
    p: int*;
}

// func f549() {
//    u1 := IntOrPtr549{i = 42};
//    u2 := IntOrPtr549{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i549: int;

struct Vector549 {
    x: int;
    y: int;
}

func fact_iter549(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec549(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec549(n-1);
    }
}

const n549 = 1 + sizeof(p549);

var p549: T549*;

struct T549 {
    a: int[n549];
}


func example_test550(): int {
    return fact_rec550(10) == fact_iter550(10);
}

union IntOrPtr550 {
    i: int;
    p: int*;
}

// func f550() {
//    u1 := IntOrPtr550{i = 42};
//    u2 := IntOrPtr550{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i550: int;

struct Vector550 {
    x: int;
    y: int;
}

func fact_iter550(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec550(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec550(n-1);
    }
}

const n550 = 1 + sizeof(p550);

var p550: T550*;

struct T550 {
    a: int[n550];
}


func example_test551(): int {
    return fact_rec551(10) == fact_iter551(10);
}

union IntOrPtr551 {
    i: int;
    p: int*;
}

// func f551() {
//    u1 := IntOrPtr551{i = 42};
//    u2 := IntOrPtr551{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i551: int;

struct Vector551 {
    x: int;
    y: int;
}

func fact_iter551(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec551(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec551(n-1);
    }
}

const n551 = 1 + sizeof(p551);

var p551: T551*;

struct T551 {
    a: int[n551];
}


func example_test552(): int {
    return fact_rec552(10) == fact_iter552(10);
}

union IntOrPtr552 {
    i: int;
    p: int*;
}

// func f552() {
//    u1 := IntOrPtr552{i = 42};
//    u2 := IntOrPtr552{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i552: int;

struct Vector552 {
    x: int;
    y: int;
}

func fact_iter552(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec552(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec552(n-1);
    }
}

const n552 = 1 + sizeof(p552);

var p552: T552*;

struct T552 {
    a: int[n552];
}


func example_test553(): int {
    return fact_rec553(10) == fact_iter553(10);
}

union IntOrPtr553 {
    i: int;
    p: int*;
}

// func f553() {
//    u1 := IntOrPtr553{i = 42};
//    u2 := IntOrPtr553{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i553: int;

struct Vector553 {
    x: int;
    y: int;
}

func fact_iter553(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec553(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec553(n-1);
    }
}

const n553 = 1 + sizeof(p553);

var p553: T553*;

struct T553 {
    a: int[n553];
}


func example_test554(): int {
    return fact_rec554(10) == fact_iter554(10);
}

union IntOrPtr554 {
    i: int;
    p: int*;
}

// func f554() {
//    u1 := IntOrPtr554{i = 42};
//    u2 := IntOrPtr554{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i554: int;

struct Vector554 {
    x: int;
    y: int;
}

func fact_iter554(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec554(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec554(n-1);
    }
}

const n554 = 1 + sizeof(p554);

var p554: T554*;

struct T554 {
    a: int[n554];
}


func example_test555(): int {
    return fact_rec555(10) == fact_iter555(10);
}

union IntOrPtr555 {
    i: int;
    p: int*;
}

// func f555() {
//    u1 := IntOrPtr555{i = 42};
//    u2 := IntOrPtr555{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i555: int;

struct Vector555 {
    x: int;
    y: int;
}

func fact_iter555(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec555(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec555(n-1);
    }
}

const n555 = 1 + sizeof(p555);

var p555: T555*;

struct T555 {
    a: int[n555];
}


func example_test556(): int {
    return fact_rec556(10) == fact_iter556(10);
}

union IntOrPtr556 {
    i: int;
    p: int*;
}

// func f556() {
//    u1 := IntOrPtr556{i = 42};
//    u2 := IntOrPtr556{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i556: int;

struct Vector556 {
    x: int;
    y: int;
}

func fact_iter556(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec556(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec556(n-1);
    }
}

const n556 = 1 + sizeof(p556);

var p556: T556*;

struct T556 {
    a: int[n556];
}


func example_test557(): int {
    return fact_rec557(10) == fact_iter557(10);
}

union IntOrPtr557 {
    i: int;
    p: int*;
}

// func f557() {
//    u1 := IntOrPtr557{i = 42};
//    u2 := IntOrPtr557{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i557: int;

struct Vector557 {
    x: int;
    y: int;
}

func fact_iter557(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec557(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec557(n-1);
    }
}

const n557 = 1 + sizeof(p557);

var p557: T557*;

struct T557 {
    a: int[n557];
}


func example_test558(): int {
    return fact_rec558(10) == fact_iter558(10);
}

union IntOrPtr558 {
    i: int;
    p: int*;
}

// func f558() {
//    u1 := IntOrPtr558{i = 42};
//    u2 := IntOrPtr558{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i558: int;

struct Vector558 {
    x: int;
    y: int;
}

func fact_iter558(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec558(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec558(n-1);
    }
}

const n558 = 1 + sizeof(p558);

var p558: T558*;

struct T558 {
    a: int[n558];
}


func example_test559(): int {
    return fact_rec559(10) == fact_iter559(10);
}

union IntOrPtr559 {
    i: int;
    p: int*;
}

// func f559() {
//    u1 := IntOrPtr559{i = 42};
//    u2 := IntOrPtr559{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i559: int;

struct Vector559 {
    x: int;
    y: int;
}

func fact_iter559(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec559(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec559(n-1);
    }
}

const n559 = 1 + sizeof(p559);

var p559: T559*;

struct T559 {
    a: int[n559];
}


func example_test560(): int {
    return fact_rec560(10) == fact_iter560(10);
}

union IntOrPtr560 {
    i: int;
    p: int*;
}

// func f560() {
//    u1 := IntOrPtr560{i = 42};
//    u2 := IntOrPtr560{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i560: int;

struct Vector560 {
    x: int;
    y: int;
}

func fact_iter560(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec560(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec560(n-1);
    }
}

const n560 = 1 + sizeof(p560);

var p560: T560*;

struct T560 {
    a: int[n560];
}


func example_test561(): int {
    return fact_rec561(10) == fact_iter561(10);
}

union IntOrPtr561 {
    i: int;
    p: int*;
}

// func f561() {
//    u1 := IntOrPtr561{i = 42};
//    u2 := IntOrPtr561{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i561: int;

struct Vector561 {
    x: int;
    y: int;
}

func fact_iter561(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec561(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec561(n-1);
    }
}

const n561 = 1 + sizeof(p561);

var p561: T561*;

struct T561 {
    a: int[n561];
}


func example_test562(): int {
    return fact_rec562(10) == fact_iter562(10);
}

union IntOrPtr562 {
    i: int;
    p: int*;
}

// func f562() {
//    u1 := IntOrPtr562{i = 42};
//    u2 := IntOrPtr562{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i562: int;

struct Vector562 {
    x: int;
    y: int;
}

func fact_iter562(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec562(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec562(n-1);
    }
}

const n562 = 1 + sizeof(p562);

var p562: T562*;

struct T562 {
    a: int[n562];
}


func example_test563(): int {
    return fact_rec563(10) == fact_iter563(10);
}

union IntOrPtr563 {
    i: int;
    p: int*;
}

// func f563() {
//    u1 := IntOrPtr563{i = 42};
//    u2 := IntOrPtr563{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i563: int;

struct Vector563 {
    x: int;
    y: int;
}

func fact_iter563(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec563(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec563(n-1);
    }
}

const n563 = 1 + sizeof(p563);

var p563: T563*;

struct T563 {
    a: int[n563];
}


func example_test564(): int {
    return fact_rec564(10) == fact_iter564(10);
}

union IntOrPtr564 {
    i: int;
    p: int*;
}

// func f564() {
//    u1 := IntOrPtr564{i = 42};
//    u2 := IntOrPtr564{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i564: int;

struct Vector564 {
    x: int;
    y: int;
}

func fact_iter564(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec564(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec564(n-1);
    }
}

const n564 = 1 + sizeof(p564);

var p564: T564*;

struct T564 {
    a: int[n564];
}


func example_test565(): int {
    return fact_rec565(10) == fact_iter565(10);
}

union IntOrPtr565 {
    i: int;
    p: int*;
}

// func f565() {
//    u1 := IntOrPtr565{i = 42};
//    u2 := IntOrPtr565{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i565: int;

struct Vector565 {
    x: int;
    y: int;
}

func fact_iter565(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec565(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec565(n-1);
    }
}

const n565 = 1 + sizeof(p565);

var p565: T565*;

struct T565 {
    a: int[n565];
}


func example_test566(): int {
    return fact_rec566(10) == fact_iter566(10);
}

union IntOrPtr566 {
    i: int;
    p: int*;
}

// func f566() {
//    u1 := IntOrPtr566{i = 42};
//    u2 := IntOrPtr566{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i566: int;

struct Vector566 {
    x: int;
    y: int;
}

func fact_iter566(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec566(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec566(n-1);
    }
}

const n566 = 1 + sizeof(p566);

var p566: T566*;

struct T566 {
    a: int[n566];
}


func example_test567(): int {
    return fact_rec567(10) == fact_iter567(10);
}

union IntOrPtr567 {
    i: int;
    p: int*;
}

// func f567() {
//    u1 := IntOrPtr567{i = 42};
//    u2 := IntOrPtr567{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i567: int;

struct Vector567 {
    x: int;
    y: int;
}

func fact_iter567(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec567(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec567(n-1);
    }
}

const n567 = 1 + sizeof(p567);

var p567: T567*;

struct T567 {
    a: int[n567];
}


func example_test568(): int {
    return fact_rec568(10) == fact_iter568(10);
}

union IntOrPtr568 {
    i: int;
    p: int*;
}

// func f568() {
//    u1 := IntOrPtr568{i = 42};
//    u2 := IntOrPtr568{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i568: int;

struct Vector568 {
    x: int;
    y: int;
}

func fact_iter568(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec568(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec568(n-1);
    }
}

const n568 = 1 + sizeof(p568);

var p568: T568*;

struct T568 {
    a: int[n568];
}


func example_test569(): int {
    return fact_rec569(10) == fact_iter569(10);
}

union IntOrPtr569 {
    i: int;
    p: int*;
}

// func f569() {
//    u1 := IntOrPtr569{i = 42};
//    u2 := IntOrPtr569{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i569: int;

struct Vector569 {
    x: int;
    y: int;
}

func fact_iter569(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec569(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec569(n-1);
    }
}

const n569 = 1 + sizeof(p569);

var p569: T569*;

struct T569 {
    a: int[n569];
}


func example_test570(): int {
    return fact_rec570(10) == fact_iter570(10);
}

union IntOrPtr570 {
    i: int;
    p: int*;
}

// func f570() {
//    u1 := IntOrPtr570{i = 42};
//    u2 := IntOrPtr570{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i570: int;

struct Vector570 {
    x: int;
    y: int;
}

func fact_iter570(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec570(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec570(n-1);
    }
}

const n570 = 1 + sizeof(p570);

var p570: T570*;

struct T570 {
    a: int[n570];
}


func example_test571(): int {
    return fact_rec571(10) == fact_iter571(10);
}

union IntOrPtr571 {
    i: int;
    p: int*;
}

// func f571() {
//    u1 := IntOrPtr571{i = 42};
//    u2 := IntOrPtr571{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i571: int;

struct Vector571 {
    x: int;
    y: int;
}

func fact_iter571(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec571(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec571(n-1);
    }
}

const n571 = 1 + sizeof(p571);

var p571: T571*;

struct T571 {
    a: int[n571];
}


func example_test572(): int {
    return fact_rec572(10) == fact_iter572(10);
}

union IntOrPtr572 {
    i: int;
    p: int*;
}

// func f572() {
//    u1 := IntOrPtr572{i = 42};
//    u2 := IntOrPtr572{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i572: int;

struct Vector572 {
    x: int;
    y: int;
}

func fact_iter572(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec572(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec572(n-1);
    }
}

const n572 = 1 + sizeof(p572);

var p572: T572*;

struct T572 {
    a: int[n572];
}


func example_test573(): int {
    return fact_rec573(10) == fact_iter573(10);
}

union IntOrPtr573 {
    i: int;
    p: int*;
}

// func f573() {
//    u1 := IntOrPtr573{i = 42};
//    u2 := IntOrPtr573{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i573: int;

struct Vector573 {
    x: int;
    y: int;
}

func fact_iter573(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec573(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec573(n-1);
    }
}

const n573 = 1 + sizeof(p573);

var p573: T573*;

struct T573 {
    a: int[n573];
}


func example_test574(): int {
    return fact_rec574(10) == fact_iter574(10);
}

union IntOrPtr574 {
    i: int;
    p: int*;
}

// func f574() {
//    u1 := IntOrPtr574{i = 42};
//    u2 := IntOrPtr574{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i574: int;

struct Vector574 {
    x: int;
    y: int;
}

func fact_iter574(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec574(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec574(n-1);
    }
}

const n574 = 1 + sizeof(p574);

var p574: T574*;

struct T574 {
    a: int[n574];
}


func example_test575(): int {
    return fact_rec575(10) == fact_iter575(10);
}

union IntOrPtr575 {
    i: int;
    p: int*;
}

// func f575() {
//    u1 := IntOrPtr575{i = 42};
//    u2 := IntOrPtr575{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i575: int;

struct Vector575 {
    x: int;
    y: int;
}

func fact_iter575(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec575(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec575(n-1);
    }
}

const n575 = 1 + sizeof(p575);

var p575: T575*;

struct T575 {
    a: int[n575];
}


func example_test576(): int {
    return fact_rec576(10) == fact_iter576(10);
}

union IntOrPtr576 {
    i: int;
    p: int*;
}

// func f576() {
//    u1 := IntOrPtr576{i = 42};
//    u2 := IntOrPtr576{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i576: int;

struct Vector576 {
    x: int;
    y: int;
}

func fact_iter576(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec576(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec576(n-1);
    }
}

const n576 = 1 + sizeof(p576);

var p576: T576*;

struct T576 {
    a: int[n576];
}


func example_test577(): int {
    return fact_rec577(10) == fact_iter577(10);
}

union IntOrPtr577 {
    i: int;
    p: int*;
}

// func f577() {
//    u1 := IntOrPtr577{i = 42};
//    u2 := IntOrPtr577{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i577: int;

struct Vector577 {
    x: int;
    y: int;
}

func fact_iter577(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec577(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec577(n-1);
    }
}

const n577 = 1 + sizeof(p577);

var p577: T577*;

struct T577 {
    a: int[n577];
}


func example_test578(): int {
    return fact_rec578(10) == fact_iter578(10);
}

union IntOrPtr578 {
    i: int;
    p: int*;
}

// func f578() {
//    u1 := IntOrPtr578{i = 42};
//    u2 := IntOrPtr578{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i578: int;

struct Vector578 {
    x: int;
    y: int;
}

func fact_iter578(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec578(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec578(n-1);
    }
}

const n578 = 1 + sizeof(p578);

var p578: T578*;

struct T578 {
    a: int[n578];
}


func example_test579(): int {
    return fact_rec579(10) == fact_iter579(10);
}

union IntOrPtr579 {
    i: int;
    p: int*;
}

// func f579() {
//    u1 := IntOrPtr579{i = 42};
//    u2 := IntOrPtr579{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i579: int;

struct Vector579 {
    x: int;
    y: int;
}

func fact_iter579(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec579(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec579(n-1);
    }
}

const n579 = 1 + sizeof(p579);

var p579: T579*;

struct T579 {
    a: int[n579];
}


func example_test580(): int {
    return fact_rec580(10) == fact_iter580(10);
}

union IntOrPtr580 {
    i: int;
    p: int*;
}

// func f580() {
//    u1 := IntOrPtr580{i = 42};
//    u2 := IntOrPtr580{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i580: int;

struct Vector580 {
    x: int;
    y: int;
}

func fact_iter580(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec580(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec580(n-1);
    }
}

const n580 = 1 + sizeof(p580);

var p580: T580*;

struct T580 {
    a: int[n580];
}


func example_test581(): int {
    return fact_rec581(10) == fact_iter581(10);
}

union IntOrPtr581 {
    i: int;
    p: int*;
}

// func f581() {
//    u1 := IntOrPtr581{i = 42};
//    u2 := IntOrPtr581{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i581: int;

struct Vector581 {
    x: int;
    y: int;
}

func fact_iter581(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec581(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec581(n-1);
    }
}

const n581 = 1 + sizeof(p581);

var p581: T581*;

struct T581 {
    a: int[n581];
}


func example_test582(): int {
    return fact_rec582(10) == fact_iter582(10);
}

union IntOrPtr582 {
    i: int;
    p: int*;
}

// func f582() {
//    u1 := IntOrPtr582{i = 42};
//    u2 := IntOrPtr582{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i582: int;

struct Vector582 {
    x: int;
    y: int;
}

func fact_iter582(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec582(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec582(n-1);
    }
}

const n582 = 1 + sizeof(p582);

var p582: T582*;

struct T582 {
    a: int[n582];
}


func example_test583(): int {
    return fact_rec583(10) == fact_iter583(10);
}

union IntOrPtr583 {
    i: int;
    p: int*;
}

// func f583() {
//    u1 := IntOrPtr583{i = 42};
//    u2 := IntOrPtr583{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i583: int;

struct Vector583 {
    x: int;
    y: int;
}

func fact_iter583(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec583(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec583(n-1);
    }
}

const n583 = 1 + sizeof(p583);

var p583: T583*;

struct T583 {
    a: int[n583];
}


func example_test584(): int {
    return fact_rec584(10) == fact_iter584(10);
}

union IntOrPtr584 {
    i: int;
    p: int*;
}

// func f584() {
//    u1 := IntOrPtr584{i = 42};
//    u2 := IntOrPtr584{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i584: int;

struct Vector584 {
    x: int;
    y: int;
}

func fact_iter584(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec584(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec584(n-1);
    }
}

const n584 = 1 + sizeof(p584);

var p584: T584*;

struct T584 {
    a: int[n584];
}


func example_test585(): int {
    return fact_rec585(10) == fact_iter585(10);
}

union IntOrPtr585 {
    i: int;
    p: int*;
}

// func f585() {
//    u1 := IntOrPtr585{i = 42};
//    u2 := IntOrPtr585{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i585: int;

struct Vector585 {
    x: int;
    y: int;
}

func fact_iter585(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec585(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec585(n-1);
    }
}

const n585 = 1 + sizeof(p585);

var p585: T585*;

struct T585 {
    a: int[n585];
}


func example_test586(): int {
    return fact_rec586(10) == fact_iter586(10);
}

union IntOrPtr586 {
    i: int;
    p: int*;
}

// func f586() {
//    u1 := IntOrPtr586{i = 42};
//    u2 := IntOrPtr586{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i586: int;

struct Vector586 {
    x: int;
    y: int;
}

func fact_iter586(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec586(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec586(n-1);
    }
}

const n586 = 1 + sizeof(p586);

var p586: T586*;

struct T586 {
    a: int[n586];
}


func example_test587(): int {
    return fact_rec587(10) == fact_iter587(10);
}

union IntOrPtr587 {
    i: int;
    p: int*;
}

// func f587() {
//    u1 := IntOrPtr587{i = 42};
//    u2 := IntOrPtr587{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i587: int;

struct Vector587 {
    x: int;
    y: int;
}

func fact_iter587(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec587(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec587(n-1);
    }
}

const n587 = 1 + sizeof(p587);

var p587: T587*;

struct T587 {
    a: int[n587];
}


func example_test588(): int {
    return fact_rec588(10) == fact_iter588(10);
}

union IntOrPtr588 {
    i: int;
    p: int*;
}

// func f588() {
//    u1 := IntOrPtr588{i = 42};
//    u2 := IntOrPtr588{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i588: int;

struct Vector588 {
    x: int;
    y: int;
}

func fact_iter588(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec588(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec588(n-1);
    }
}

const n588 = 1 + sizeof(p588);

var p588: T588*;

struct T588 {
    a: int[n588];
}


func example_test589(): int {
    return fact_rec589(10) == fact_iter589(10);
}

union IntOrPtr589 {
    i: int;
    p: int*;
}

// func f589() {
//    u1 := IntOrPtr589{i = 42};
//    u2 := IntOrPtr589{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i589: int;

struct Vector589 {
    x: int;
    y: int;
}

func fact_iter589(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec589(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec589(n-1);
    }
}

const n589 = 1 + sizeof(p589);

var p589: T589*;

struct T589 {
    a: int[n589];
}


func example_test590(): int {
    return fact_rec590(10) == fact_iter590(10);
}

union IntOrPtr590 {
    i: int;
    p: int*;
}

// func f590() {
//    u1 := IntOrPtr590{i = 42};
//    u2 := IntOrPtr590{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i590: int;

struct Vector590 {
    x: int;
    y: int;
}

func fact_iter590(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec590(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec590(n-1);
    }
}

const n590 = 1 + sizeof(p590);

var p590: T590*;

struct T590 {
    a: int[n590];
}


func example_test591(): int {
    return fact_rec591(10) == fact_iter591(10);
}

union IntOrPtr591 {
    i: int;
    p: int*;
}

// func f591() {
//    u1 := IntOrPtr591{i = 42};
//    u2 := IntOrPtr591{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i591: int;

struct Vector591 {
    x: int;
    y: int;
}

func fact_iter591(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec591(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec591(n-1);
    }
}

const n591 = 1 + sizeof(p591);

var p591: T591*;

struct T591 {
    a: int[n591];
}


func example_test592(): int {
    return fact_rec592(10) == fact_iter592(10);
}

union IntOrPtr592 {
    i: int;
    p: int*;
}

// func f592() {
//    u1 := IntOrPtr592{i = 42};
//    u2 := IntOrPtr592{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i592: int;

struct Vector592 {
    x: int;
    y: int;
}

func fact_iter592(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec592(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec592(n-1);
    }
}

const n592 = 1 + sizeof(p592);

var p592: T592*;

struct T592 {
    a: int[n592];
}


func example_test593(): int {
    return fact_rec593(10) == fact_iter593(10);
}

union IntOrPtr593 {
    i: int;
    p: int*;
}

// func f593() {
//    u1 := IntOrPtr593{i = 42};
//    u2 := IntOrPtr593{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i593: int;

struct Vector593 {
    x: int;
    y: int;
}

func fact_iter593(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec593(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec593(n-1);
    }
}

const n593 = 1 + sizeof(p593);

var p593: T593*;

struct T593 {
    a: int[n593];
}


func example_test594(): int {
    return fact_rec594(10) == fact_iter594(10);
}

union IntOrPtr594 {
    i: int;
    p: int*;
}

// func f594() {
//    u1 := IntOrPtr594{i = 42};
//    u2 := IntOrPtr594{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i594: int;

struct Vector594 {
    x: int;
    y: int;
}

func fact_iter594(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec594(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec594(n-1);
    }
}

const n594 = 1 + sizeof(p594);

var p594: T594*;

struct T594 {
    a: int[n594];
}


func example_test595(): int {
    return fact_rec595(10) == fact_iter595(10);
}

union IntOrPtr595 {
    i: int;
    p: int*;
}

// func f595() {
//    u1 := IntOrPtr595{i = 42};
//    u2 := IntOrPtr595{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i595: int;

struct Vector595 {
    x: int;
    y: int;
}

func fact_iter595(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec595(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec595(n-1);
    }
}

const n595 = 1 + sizeof(p595);

var p595: T595*;

struct T595 {
    a: int[n595];
}


func example_test596(): int {
    return fact_rec596(10) == fact_iter596(10);
}

union IntOrPtr596 {
    i: int;
    p: int*;
}

// func f596() {
//    u1 := IntOrPtr596{i = 42};
//    u2 := IntOrPtr596{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i596: int;

struct Vector596 {
    x: int;
    y: int;
}

func fact_iter596(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec596(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec596(n-1);
    }
}

const n596 = 1 + sizeof(p596);

var p596: T596*;

struct T596 {
    a: int[n596];
}


func example_test597(): int {
    return fact_rec597(10) == fact_iter597(10);
}

union IntOrPtr597 {
    i: int;
    p: int*;
}

// func f597() {
//    u1 := IntOrPtr597{i = 42};
//    u2 := IntOrPtr597{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i597: int;

struct Vector597 {
    x: int;
    y: int;
}

func fact_iter597(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec597(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec597(n-1);
    }
}

const n597 = 1 + sizeof(p597);

var p597: T597*;

struct T597 {
    a: int[n597];
}


func example_test598(): int {
    return fact_rec598(10) == fact_iter598(10);
}

union IntOrPtr598 {
    i: int;
    p: int*;
}

// func f598() {
//    u1 := IntOrPtr598{i = 42};
//    u2 := IntOrPtr598{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i598: int;

struct Vector598 {
    x: int;
    y: int;
}

func fact_iter598(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec598(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec598(n-1);
    }
}

const n598 = 1 + sizeof(p598);

var p598: T598*;

struct T598 {
    a: int[n598];
}


func example_test599(): int {
    return fact_rec599(10) == fact_iter599(10);
}

union IntOrPtr599 {
    i: int;
    p: int*;
}

// func f599() {
//    u1 := IntOrPtr599{i = 42};
//    u2 := IntOrPtr599{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i599: int;

struct Vector599 {
    x: int;
    y: int;
}

func fact_iter599(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec599(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec599(n-1);
    }
}

const n599 = 1 + sizeof(p599);

var p599: T599*;

struct T599 {
    a: int[n599];
}


func example_test600(): int {
    return fact_rec600(10) == fact_iter600(10);
}

union IntOrPtr600 {
    i: int;
    p: int*;
}

// func f600() {
//    u1 := IntOrPtr600{i = 42};
//    u2 := IntOrPtr600{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i600: int;

struct Vector600 {
    x: int;
    y: int;
}

func fact_iter600(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec600(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec600(n-1);
    }
}

const n600 = 1 + sizeof(p600);

var p600: T600*;

struct T600 {
    a: int[n600];
}


func example_test601(): int {
    return fact_rec601(10) == fact_iter601(10);
}

union IntOrPtr601 {
    i: int;
    p: int*;
}

// func f601() {
//    u1 := IntOrPtr601{i = 42};
//    u2 := IntOrPtr601{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i601: int;

struct Vector601 {
    x: int;
    y: int;
}

func fact_iter601(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec601(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec601(n-1);
    }
}

const n601 = 1 + sizeof(p601);

var p601: T601*;

struct T601 {
    a: int[n601];
}


func example_test602(): int {
    return fact_rec602(10) == fact_iter602(10);
}

union IntOrPtr602 {
    i: int;
    p: int*;
}

// func f602() {
//    u1 := IntOrPtr602{i = 42};
//    u2 := IntOrPtr602{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i602: int;

struct Vector602 {
    x: int;
    y: int;
}

func fact_iter602(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec602(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec602(n-1);
    }
}

const n602 = 1 + sizeof(p602);

var p602: T602*;

struct T602 {
    a: int[n602];
}


func example_test603(): int {
    return fact_rec603(10) == fact_iter603(10);
}

union IntOrPtr603 {
    i: int;
    p: int*;
}

// func f603() {
//    u1 := IntOrPtr603{i = 42};
//    u2 := IntOrPtr603{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i603: int;

struct Vector603 {
    x: int;
    y: int;
}

func fact_iter603(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec603(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec603(n-1);
    }
}

const n603 = 1 + sizeof(p603);

var p603: T603*;

struct T603 {
    a: int[n603];
}


func example_test604(): int {
    return fact_rec604(10) == fact_iter604(10);
}

union IntOrPtr604 {
    i: int;
    p: int*;
}

// func f604() {
//    u1 := IntOrPtr604{i = 42};
//    u2 := IntOrPtr604{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i604: int;

struct Vector604 {
    x: int;
    y: int;
}

func fact_iter604(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec604(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec604(n-1);
    }
}

const n604 = 1 + sizeof(p604);

var p604: T604*;

struct T604 {
    a: int[n604];
}


func example_test605(): int {
    return fact_rec605(10) == fact_iter605(10);
}

union IntOrPtr605 {
    i: int;
    p: int*;
}

// func f605() {
//    u1 := IntOrPtr605{i = 42};
//    u2 := IntOrPtr605{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i605: int;

struct Vector605 {
    x: int;
    y: int;
}

func fact_iter605(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec605(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec605(n-1);
    }
}

const n605 = 1 + sizeof(p605);

var p605: T605*;

struct T605 {
    a: int[n605];
}


func example_test606(): int {
    return fact_rec606(10) == fact_iter606(10);
}

union IntOrPtr606 {
    i: int;
    p: int*;
}

// func f606() {
//    u1 := IntOrPtr606{i = 42};
//    u2 := IntOrPtr606{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i606: int;

struct Vector606 {
    x: int;
    y: int;
}

func fact_iter606(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec606(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec606(n-1);
    }
}

const n606 = 1 + sizeof(p606);

var p606: T606*;

struct T606 {
    a: int[n606];
}


func example_test607(): int {
    return fact_rec607(10) == fact_iter607(10);
}

union IntOrPtr607 {
    i: int;
    p: int*;
}

// func f607() {
//    u1 := IntOrPtr607{i = 42};
//    u2 := IntOrPtr607{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i607: int;

struct Vector607 {
    x: int;
    y: int;
}

func fact_iter607(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec607(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec607(n-1);
    }
}

const n607 = 1 + sizeof(p607);

var p607: T607*;

struct T607 {
    a: int[n607];
}


func example_test608(): int {
    return fact_rec608(10) == fact_iter608(10);
}

union IntOrPtr608 {
    i: int;
    p: int*;
}

// func f608() {
//    u1 := IntOrPtr608{i = 42};
//    u2 := IntOrPtr608{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i608: int;

struct Vector608 {
    x: int;
    y: int;
}

func fact_iter608(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec608(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec608(n-1);
    }
}

const n608 = 1 + sizeof(p608);

var p608: T608*;

struct T608 {
    a: int[n608];
}


func example_test609(): int {
    return fact_rec609(10) == fact_iter609(10);
}

union IntOrPtr609 {
    i: int;
    p: int*;
}

// func f609() {
//    u1 := IntOrPtr609{i = 42};
//    u2 := IntOrPtr609{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i609: int;

struct Vector609 {
    x: int;
    y: int;
}

func fact_iter609(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec609(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec609(n-1);
    }
}

const n609 = 1 + sizeof(p609);

var p609: T609*;

struct T609 {
    a: int[n609];
}


func example_test610(): int {
    return fact_rec610(10) == fact_iter610(10);
}

union IntOrPtr610 {
    i: int;
    p: int*;
}

// func f610() {
//    u1 := IntOrPtr610{i = 42};
//    u2 := IntOrPtr610{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i610: int;

struct Vector610 {
    x: int;
    y: int;
}

func fact_iter610(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec610(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec610(n-1);
    }
}

const n610 = 1 + sizeof(p610);

var p610: T610*;

struct T610 {
    a: int[n610];
}


func example_test611(): int {
    return fact_rec611(10) == fact_iter611(10);
}

union IntOrPtr611 {
    i: int;
    p: int*;
}

// func f611() {
//    u1 := IntOrPtr611{i = 42};
//    u2 := IntOrPtr611{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i611: int;

struct Vector611 {
    x: int;
    y: int;
}

func fact_iter611(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec611(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec611(n-1);
    }
}

const n611 = 1 + sizeof(p611);

var p611: T611*;

struct T611 {
    a: int[n611];
}


func example_test612(): int {
    return fact_rec612(10) == fact_iter612(10);
}

union IntOrPtr612 {
    i: int;
    p: int*;
}

// func f612() {
//    u1 := IntOrPtr612{i = 42};
//    u2 := IntOrPtr612{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i612: int;

struct Vector612 {
    x: int;
    y: int;
}

func fact_iter612(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec612(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec612(n-1);
    }
}

const n612 = 1 + sizeof(p612);

var p612: T612*;

struct T612 {
    a: int[n612];
}


func example_test613(): int {
    return fact_rec613(10) == fact_iter613(10);
}

union IntOrPtr613 {
    i: int;
    p: int*;
}

// func f613() {
//    u1 := IntOrPtr613{i = 42};
//    u2 := IntOrPtr613{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i613: int;

struct Vector613 {
    x: int;
    y: int;
}

func fact_iter613(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec613(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec613(n-1);
    }
}

const n613 = 1 + sizeof(p613);

var p613: T613*;

struct T613 {
    a: int[n613];
}


func example_test614(): int {
    return fact_rec614(10) == fact_iter614(10);
}

union IntOrPtr614 {
    i: int;
    p: int*;
}

// func f614() {
//    u1 := IntOrPtr614{i = 42};
//    u2 := IntOrPtr614{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i614: int;

struct Vector614 {
    x: int;
    y: int;
}

func fact_iter614(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec614(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec614(n-1);
    }
}

const n614 = 1 + sizeof(p614);

var p614: T614*;

struct T614 {
    a: int[n614];
}


func example_test615(): int {
    return fact_rec615(10) == fact_iter615(10);
}

union IntOrPtr615 {
    i: int;
    p: int*;
}

// func f615() {
//    u1 := IntOrPtr615{i = 42};
//    u2 := IntOrPtr615{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i615: int;

struct Vector615 {
    x: int;
    y: int;
}

func fact_iter615(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec615(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec615(n-1);
    }
}

const n615 = 1 + sizeof(p615);

var p615: T615*;

struct T615 {
    a: int[n615];
}


func example_test616(): int {
    return fact_rec616(10) == fact_iter616(10);
}

union IntOrPtr616 {
    i: int;
    p: int*;
}

// func f616() {
//    u1 := IntOrPtr616{i = 42};
//    u2 := IntOrPtr616{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i616: int;

struct Vector616 {
    x: int;
    y: int;
}

func fact_iter616(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec616(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec616(n-1);
    }
}

const n616 = 1 + sizeof(p616);

var p616: T616*;

struct T616 {
    a: int[n616];
}


func example_test617(): int {
    return fact_rec617(10) == fact_iter617(10);
}

union IntOrPtr617 {
    i: int;
    p: int*;
}

// func f617() {
//    u1 := IntOrPtr617{i = 42};
//    u2 := IntOrPtr617{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i617: int;

struct Vector617 {
    x: int;
    y: int;
}

func fact_iter617(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec617(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec617(n-1);
    }
}

const n617 = 1 + sizeof(p617);

var p617: T617*;

struct T617 {
    a: int[n617];
}


func example_test618(): int {
    return fact_rec618(10) == fact_iter618(10);
}

union IntOrPtr618 {
    i: int;
    p: int*;
}

// func f618() {
//    u1 := IntOrPtr618{i = 42};
//    u2 := IntOrPtr618{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i618: int;

struct Vector618 {
    x: int;
    y: int;
}

func fact_iter618(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec618(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec618(n-1);
    }
}

const n618 = 1 + sizeof(p618);

var p618: T618*;

struct T618 {
    a: int[n618];
}


func example_test619(): int {
    return fact_rec619(10) == fact_iter619(10);
}

union IntOrPtr619 {
    i: int;
    p: int*;
}

// func f619() {
//    u1 := IntOrPtr619{i = 42};
//    u2 := IntOrPtr619{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i619: int;

struct Vector619 {
    x: int;
    y: int;
}

func fact_iter619(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec619(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec619(n-1);
    }
}

const n619 = 1 + sizeof(p619);

var p619: T619*;

struct T619 {
    a: int[n619];
}


func example_test620(): int {
    return fact_rec620(10) == fact_iter620(10);
}

union IntOrPtr620 {
    i: int;
    p: int*;
}

// func f620() {
//    u1 := IntOrPtr620{i = 42};
//    u2 := IntOrPtr620{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i620: int;

struct Vector620 {
    x: int;
    y: int;
}

func fact_iter620(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec620(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec620(n-1);
    }
}

const n620 = 1 + sizeof(p620);

var p620: T620*;

struct T620 {
    a: int[n620];
}


func example_test621(): int {
    return fact_rec621(10) == fact_iter621(10);
}

union IntOrPtr621 {
    i: int;
    p: int*;
}

// func f621() {
//    u1 := IntOrPtr621{i = 42};
//    u2 := IntOrPtr621{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i621: int;

struct Vector621 {
    x: int;
    y: int;
}

func fact_iter621(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec621(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec621(n-1);
    }
}

const n621 = 1 + sizeof(p621);

var p621: T621*;

struct T621 {
    a: int[n621];
}


func example_test622(): int {
    return fact_rec622(10) == fact_iter622(10);
}

union IntOrPtr622 {
    i: int;
    p: int*;
}

// func f622() {
//    u1 := IntOrPtr622{i = 42};
//    u2 := IntOrPtr622{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i622: int;

struct Vector622 {
    x: int;
    y: int;
}

func fact_iter622(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec622(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec622(n-1);
    }
}

const n622 = 1 + sizeof(p622);

var p622: T622*;

struct T622 {
    a: int[n622];
}


func example_test623(): int {
    return fact_rec623(10) == fact_iter623(10);
}

union IntOrPtr623 {
    i: int;
    p: int*;
}

// func f623() {
//    u1 := IntOrPtr623{i = 42};
//    u2 := IntOrPtr623{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i623: int;

struct Vector623 {
    x: int;
    y: int;
}

func fact_iter623(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec623(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec623(n-1);
    }
}

const n623 = 1 + sizeof(p623);

var p623: T623*;

struct T623 {
    a: int[n623];
}


func example_test624(): int {
    return fact_rec624(10) == fact_iter624(10);
}

union IntOrPtr624 {
    i: int;
    p: int*;
}

// func f624() {
//    u1 := IntOrPtr624{i = 42};
//    u2 := IntOrPtr624{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i624: int;

struct Vector624 {
    x: int;
    y: int;
}

func fact_iter624(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec624(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec624(n-1);
    }
}

const n624 = 1 + sizeof(p624);

var p624: T624*;

struct T624 {
    a: int[n624];
}


func example_test625(): int {
    return fact_rec625(10) == fact_iter625(10);
}

union IntOrPtr625 {
    i: int;
    p: int*;
}

// func f625() {
//    u1 := IntOrPtr625{i = 42};
//    u2 := IntOrPtr625{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i625: int;

struct Vector625 {
    x: int;
    y: int;
}

func fact_iter625(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec625(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec625(n-1);
    }
}

const n625 = 1 + sizeof(p625);

var p625: T625*;

struct T625 {
    a: int[n625];
}


func example_test626(): int {
    return fact_rec626(10) == fact_iter626(10);
}

union IntOrPtr626 {
    i: int;
    p: int*;
}

// func f626() {
//    u1 := IntOrPtr626{i = 42};
//    u2 := IntOrPtr626{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i626: int;

struct Vector626 {
    x: int;
    y: int;
}

func fact_iter626(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec626(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec626(n-1);
    }
}

const n626 = 1 + sizeof(p626);

var p626: T626*;

struct T626 {
    a: int[n626];
}


func example_test627(): int {
    return fact_rec627(10) == fact_iter627(10);
}

union IntOrPtr627 {
    i: int;
    p: int*;
}

// func f627() {
//    u1 := IntOrPtr627{i = 42};
//    u2 := IntOrPtr627{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i627: int;

struct Vector627 {
    x: int;
    y: int;
}

func fact_iter627(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec627(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec627(n-1);
    }
}

const n627 = 1 + sizeof(p627);

var p627: T627*;

struct T627 {
    a: int[n627];
}


func example_test628(): int {
    return fact_rec628(10) == fact_iter628(10);
}

union IntOrPtr628 {
    i: int;
    p: int*;
}

// func f628() {
//    u1 := IntOrPtr628{i = 42};
//    u2 := IntOrPtr628{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i628: int;

struct Vector628 {
    x: int;
    y: int;
}

func fact_iter628(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec628(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec628(n-1);
    }
}

const n628 = 1 + sizeof(p628);

var p628: T628*;

struct T628 {
    a: int[n628];
}


func example_test629(): int {
    return fact_rec629(10) == fact_iter629(10);
}

union IntOrPtr629 {
    i: int;
    p: int*;
}

// func f629() {
//    u1 := IntOrPtr629{i = 42};
//    u2 := IntOrPtr629{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i629: int;

struct Vector629 {
    x: int;
    y: int;
}

func fact_iter629(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec629(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec629(n-1);
    }
}

const n629 = 1 + sizeof(p629);

var p629: T629*;

struct T629 {
    a: int[n629];
}


func example_test630(): int {
    return fact_rec630(10) == fact_iter630(10);
}

union IntOrPtr630 {
    i: int;
    p: int*;
}

// func f630() {
//    u1 := IntOrPtr630{i = 42};
//    u2 := IntOrPtr630{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i630: int;

struct Vector630 {
    x: int;
    y: int;
}

func fact_iter630(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec630(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec630(n-1);
    }
}

const n630 = 1 + sizeof(p630);

var p630: T630*;

struct T630 {
    a: int[n630];
}


func example_test631(): int {
    return fact_rec631(10) == fact_iter631(10);
}

union IntOrPtr631 {
    i: int;
    p: int*;
}

// func f631() {
//    u1 := IntOrPtr631{i = 42};
//    u2 := IntOrPtr631{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i631: int;

struct Vector631 {
    x: int;
    y: int;
}

func fact_iter631(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec631(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec631(n-1);
    }
}

const n631 = 1 + sizeof(p631);

var p631: T631*;

struct T631 {
    a: int[n631];
}


func example_test632(): int {
    return fact_rec632(10) == fact_iter632(10);
}

union IntOrPtr632 {
    i: int;
    p: int*;
}

// func f632() {
//    u1 := IntOrPtr632{i = 42};
//    u2 := IntOrPtr632{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i632: int;

struct Vector632 {
    x: int;
    y: int;
}

func fact_iter632(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec632(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec632(n-1);
    }
}

const n632 = 1 + sizeof(p632);

var p632: T632*;

struct T632 {
    a: int[n632];
}


func example_test633(): int {
    return fact_rec633(10) == fact_iter633(10);
}

union IntOrPtr633 {
    i: int;
    p: int*;
}

// func f633() {
//    u1 := IntOrPtr633{i = 42};
//    u2 := IntOrPtr633{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i633: int;

struct Vector633 {
    x: int;
    y: int;
}

func fact_iter633(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec633(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec633(n-1);
    }
}

const n633 = 1 + sizeof(p633);

var p633: T633*;

struct T633 {
    a: int[n633];
}


func example_test634(): int {
    return fact_rec634(10) == fact_iter634(10);
}

union IntOrPtr634 {
    i: int;
    p: int*;
}

// func f634() {
//    u1 := IntOrPtr634{i = 42};
//    u2 := IntOrPtr634{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i634: int;

struct Vector634 {
    x: int;
    y: int;
}

func fact_iter634(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec634(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec634(n-1);
    }
}

const n634 = 1 + sizeof(p634);

var p634: T634*;

struct T634 {
    a: int[n634];
}


func example_test635(): int {
    return fact_rec635(10) == fact_iter635(10);
}

union IntOrPtr635 {
    i: int;
    p: int*;
}

// func f635() {
//    u1 := IntOrPtr635{i = 42};
//    u2 := IntOrPtr635{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i635: int;

struct Vector635 {
    x: int;
    y: int;
}

func fact_iter635(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec635(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec635(n-1);
    }
}

const n635 = 1 + sizeof(p635);

var p635: T635*;

struct T635 {
    a: int[n635];
}


func example_test636(): int {
    return fact_rec636(10) == fact_iter636(10);
}

union IntOrPtr636 {
    i: int;
    p: int*;
}

// func f636() {
//    u1 := IntOrPtr636{i = 42};
//    u2 := IntOrPtr636{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i636: int;

struct Vector636 {
    x: int;
    y: int;
}

func fact_iter636(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec636(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec636(n-1);
    }
}

const n636 = 1 + sizeof(p636);

var p636: T636*;

struct T636 {
    a: int[n636];
}


func example_test637(): int {
    return fact_rec637(10) == fact_iter637(10);
}

union IntOrPtr637 {
    i: int;
    p: int*;
}

// func f637() {
//    u1 := IntOrPtr637{i = 42};
//    u2 := IntOrPtr637{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i637: int;

struct Vector637 {
    x: int;
    y: int;
}

func fact_iter637(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec637(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec637(n-1);
    }
}

const n637 = 1 + sizeof(p637);

var p637: T637*;

struct T637 {
    a: int[n637];
}


func example_test638(): int {
    return fact_rec638(10) == fact_iter638(10);
}

union IntOrPtr638 {
    i: int;
    p: int*;
}

// func f638() {
//    u1 := IntOrPtr638{i = 42};
//    u2 := IntOrPtr638{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i638: int;

struct Vector638 {
    x: int;
    y: int;
}

func fact_iter638(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec638(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec638(n-1);
    }
}

const n638 = 1 + sizeof(p638);

var p638: T638*;

struct T638 {
    a: int[n638];
}


func example_test639(): int {
    return fact_rec639(10) == fact_iter639(10);
}

union IntOrPtr639 {
    i: int;
    p: int*;
}

// func f639() {
//    u1 := IntOrPtr639{i = 42};
//    u2 := IntOrPtr639{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i639: int;

struct Vector639 {
    x: int;
    y: int;
}

func fact_iter639(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec639(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec639(n-1);
    }
}

const n639 = 1 + sizeof(p639);

var p639: T639*;

struct T639 {
    a: int[n639];
}


func example_test640(): int {
    return fact_rec640(10) == fact_iter640(10);
}

union IntOrPtr640 {
    i: int;
    p: int*;
}

// func f640() {
//    u1 := IntOrPtr640{i = 42};
//    u2 := IntOrPtr640{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i640: int;

struct Vector640 {
    x: int;
    y: int;
}

func fact_iter640(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec640(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec640(n-1);
    }
}

const n640 = 1 + sizeof(p640);

var p640: T640*;

struct T640 {
    a: int[n640];
}


func example_test641(): int {
    return fact_rec641(10) == fact_iter641(10);
}

union IntOrPtr641 {
    i: int;
    p: int*;
}

// func f641() {
//    u1 := IntOrPtr641{i = 42};
//    u2 := IntOrPtr641{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i641: int;

struct Vector641 {
    x: int;
    y: int;
}

func fact_iter641(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec641(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec641(n-1);
    }
}

const n641 = 1 + sizeof(p641);

var p641: T641*;

struct T641 {
    a: int[n641];
}


func example_test642(): int {
    return fact_rec642(10) == fact_iter642(10);
}

union IntOrPtr642 {
    i: int;
    p: int*;
}

// func f642() {
//    u1 := IntOrPtr642{i = 42};
//    u2 := IntOrPtr642{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i642: int;

struct Vector642 {
    x: int;
    y: int;
}

func fact_iter642(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec642(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec642(n-1);
    }
}

const n642 = 1 + sizeof(p642);

var p642: T642*;

struct T642 {
    a: int[n642];
}


func example_test643(): int {
    return fact_rec643(10) == fact_iter643(10);
}

union IntOrPtr643 {
    i: int;
    p: int*;
}

// func f643() {
//    u1 := IntOrPtr643{i = 42};
//    u2 := IntOrPtr643{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i643: int;

struct Vector643 {
    x: int;
    y: int;
}

func fact_iter643(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec643(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec643(n-1);
    }
}

const n643 = 1 + sizeof(p643);

var p643: T643*;

struct T643 {
    a: int[n643];
}


func example_test644(): int {
    return fact_rec644(10) == fact_iter644(10);
}

union IntOrPtr644 {
    i: int;
    p: int*;
}

// func f644() {
//    u1 := IntOrPtr644{i = 42};
//    u2 := IntOrPtr644{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i644: int;

struct Vector644 {
    x: int;
    y: int;
}

func fact_iter644(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec644(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec644(n-1);
    }
}

const n644 = 1 + sizeof(p644);

var p644: T644*;

struct T644 {
    a: int[n644];
}


func example_test645(): int {
    return fact_rec645(10) == fact_iter645(10);
}

union IntOrPtr645 {
    i: int;
    p: int*;
}

// func f645() {
//    u1 := IntOrPtr645{i = 42};
//    u2 := IntOrPtr645{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i645: int;

struct Vector645 {
    x: int;
    y: int;
}

func fact_iter645(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec645(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec645(n-1);
    }
}

const n645 = 1 + sizeof(p645);

var p645: T645*;

struct T645 {
    a: int[n645];
}


func example_test646(): int {
    return fact_rec646(10) == fact_iter646(10);
}

union IntOrPtr646 {
    i: int;
    p: int*;
}

// func f646() {
//    u1 := IntOrPtr646{i = 42};
//    u2 := IntOrPtr646{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i646: int;

struct Vector646 {
    x: int;
    y: int;
}

func fact_iter646(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec646(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec646(n-1);
    }
}

const n646 = 1 + sizeof(p646);

var p646: T646*;

struct T646 {
    a: int[n646];
}


func example_test647(): int {
    return fact_rec647(10) == fact_iter647(10);
}

union IntOrPtr647 {
    i: int;
    p: int*;
}

// func f647() {
//    u1 := IntOrPtr647{i = 42};
//    u2 := IntOrPtr647{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i647: int;

struct Vector647 {
    x: int;
    y: int;
}

func fact_iter647(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec647(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec647(n-1);
    }
}

const n647 = 1 + sizeof(p647);

var p647: T647*;

struct T647 {
    a: int[n647];
}


func example_test648(): int {
    return fact_rec648(10) == fact_iter648(10);
}

union IntOrPtr648 {
    i: int;
    p: int*;
}

// func f648() {
//    u1 := IntOrPtr648{i = 42};
//    u2 := IntOrPtr648{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i648: int;

struct Vector648 {
    x: int;
    y: int;
}

func fact_iter648(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec648(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec648(n-1);
    }
}

const n648 = 1 + sizeof(p648);

var p648: T648*;

struct T648 {
    a: int[n648];
}


func example_test649(): int {
    return fact_rec649(10) == fact_iter649(10);
}

union IntOrPtr649 {
    i: int;
    p: int*;
}

// func f649() {
//    u1 := IntOrPtr649{i = 42};
//    u2 := IntOrPtr649{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i649: int;

struct Vector649 {
    x: int;
    y: int;
}

func fact_iter649(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec649(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec649(n-1);
    }
}

const n649 = 1 + sizeof(p649);

var p649: T649*;

struct T649 {
    a: int[n649];
}


func example_test650(): int {
    return fact_rec650(10) == fact_iter650(10);
}

union IntOrPtr650 {
    i: int;
    p: int*;
}

// func f650() {
//    u1 := IntOrPtr650{i = 42};
//    u2 := IntOrPtr650{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i650: int;

struct Vector650 {
    x: int;
    y: int;
}

func fact_iter650(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec650(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec650(n-1);
    }
}

const n650 = 1 + sizeof(p650);

var p650: T650*;

struct T650 {
    a: int[n650];
}


func example_test651(): int {
    return fact_rec651(10) == fact_iter651(10);
}

union IntOrPtr651 {
    i: int;
    p: int*;
}

// func f651() {
//    u1 := IntOrPtr651{i = 42};
//    u2 := IntOrPtr651{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i651: int;

struct Vector651 {
    x: int;
    y: int;
}

func fact_iter651(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec651(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec651(n-1);
    }
}

const n651 = 1 + sizeof(p651);

var p651: T651*;

struct T651 {
    a: int[n651];
}


func example_test652(): int {
    return fact_rec652(10) == fact_iter652(10);
}

union IntOrPtr652 {
    i: int;
    p: int*;
}

// func f652() {
//    u1 := IntOrPtr652{i = 42};
//    u2 := IntOrPtr652{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i652: int;

struct Vector652 {
    x: int;
    y: int;
}

func fact_iter652(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec652(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec652(n-1);
    }
}

const n652 = 1 + sizeof(p652);

var p652: T652*;

struct T652 {
    a: int[n652];
}


func example_test653(): int {
    return fact_rec653(10) == fact_iter653(10);
}

union IntOrPtr653 {
    i: int;
    p: int*;
}

// func f653() {
//    u1 := IntOrPtr653{i = 42};
//    u2 := IntOrPtr653{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i653: int;

struct Vector653 {
    x: int;
    y: int;
}

func fact_iter653(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec653(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec653(n-1);
    }
}

const n653 = 1 + sizeof(p653);

var p653: T653*;

struct T653 {
    a: int[n653];
}


func example_test654(): int {
    return fact_rec654(10) == fact_iter654(10);
}

union IntOrPtr654 {
    i: int;
    p: int*;
}

// func f654() {
//    u1 := IntOrPtr654{i = 42};
//    u2 := IntOrPtr654{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i654: int;

struct Vector654 {
    x: int;
    y: int;
}

func fact_iter654(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec654(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec654(n-1);
    }
}

const n654 = 1 + sizeof(p654);

var p654: T654*;

struct T654 {
    a: int[n654];
}


func example_test655(): int {
    return fact_rec655(10) == fact_iter655(10);
}

union IntOrPtr655 {
    i: int;
    p: int*;
}

// func f655() {
//    u1 := IntOrPtr655{i = 42};
//    u2 := IntOrPtr655{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i655: int;

struct Vector655 {
    x: int;
    y: int;
}

func fact_iter655(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec655(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec655(n-1);
    }
}

const n655 = 1 + sizeof(p655);

var p655: T655*;

struct T655 {
    a: int[n655];
}


func example_test656(): int {
    return fact_rec656(10) == fact_iter656(10);
}

union IntOrPtr656 {
    i: int;
    p: int*;
}

// func f656() {
//    u1 := IntOrPtr656{i = 42};
//    u2 := IntOrPtr656{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i656: int;

struct Vector656 {
    x: int;
    y: int;
}

func fact_iter656(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec656(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec656(n-1);
    }
}

const n656 = 1 + sizeof(p656);

var p656: T656*;

struct T656 {
    a: int[n656];
}


func example_test657(): int {
    return fact_rec657(10) == fact_iter657(10);
}

union IntOrPtr657 {
    i: int;
    p: int*;
}

// func f657() {
//    u1 := IntOrPtr657{i = 42};
//    u2 := IntOrPtr657{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i657: int;

struct Vector657 {
    x: int;
    y: int;
}

func fact_iter657(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec657(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec657(n-1);
    }
}

const n657 = 1 + sizeof(p657);

var p657: T657*;

struct T657 {
    a: int[n657];
}


func example_test658(): int {
    return fact_rec658(10) == fact_iter658(10);
}

union IntOrPtr658 {
    i: int;
    p: int*;
}

// func f658() {
//    u1 := IntOrPtr658{i = 42};
//    u2 := IntOrPtr658{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i658: int;

struct Vector658 {
    x: int;
    y: int;
}

func fact_iter658(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec658(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec658(n-1);
    }
}

const n658 = 1 + sizeof(p658);

var p658: T658*;

struct T658 {
    a: int[n658];
}


func example_test659(): int {
    return fact_rec659(10) == fact_iter659(10);
}

union IntOrPtr659 {
    i: int;
    p: int*;
}

// func f659() {
//    u1 := IntOrPtr659{i = 42};
//    u2 := IntOrPtr659{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i659: int;

struct Vector659 {
    x: int;
    y: int;
}

func fact_iter659(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec659(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec659(n-1);
    }
}

const n659 = 1 + sizeof(p659);

var p659: T659*;

struct T659 {
    a: int[n659];
}


func example_test660(): int {
    return fact_rec660(10) == fact_iter660(10);
}

union IntOrPtr660 {
    i: int;
    p: int*;
}

// func f660() {
//    u1 := IntOrPtr660{i = 42};
//    u2 := IntOrPtr660{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i660: int;

struct Vector660 {
    x: int;
    y: int;
}

func fact_iter660(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec660(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec660(n-1);
    }
}

const n660 = 1 + sizeof(p660);

var p660: T660*;

struct T660 {
    a: int[n660];
}


func example_test661(): int {
    return fact_rec661(10) == fact_iter661(10);
}

union IntOrPtr661 {
    i: int;
    p: int*;
}

// func f661() {
//    u1 := IntOrPtr661{i = 42};
//    u2 := IntOrPtr661{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i661: int;

struct Vector661 {
    x: int;
    y: int;
}

func fact_iter661(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec661(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec661(n-1);
    }
}

const n661 = 1 + sizeof(p661);

var p661: T661*;

struct T661 {
    a: int[n661];
}


func example_test662(): int {
    return fact_rec662(10) == fact_iter662(10);
}

union IntOrPtr662 {
    i: int;
    p: int*;
}

// func f662() {
//    u1 := IntOrPtr662{i = 42};
//    u2 := IntOrPtr662{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i662: int;

struct Vector662 {
    x: int;
    y: int;
}

func fact_iter662(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec662(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec662(n-1);
    }
}

const n662 = 1 + sizeof(p662);

var p662: T662*;

struct T662 {
    a: int[n662];
}


func example_test663(): int {
    return fact_rec663(10) == fact_iter663(10);
}

union IntOrPtr663 {
    i: int;
    p: int*;
}

// func f663() {
//    u1 := IntOrPtr663{i = 42};
//    u2 := IntOrPtr663{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i663: int;

struct Vector663 {
    x: int;
    y: int;
}

func fact_iter663(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec663(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec663(n-1);
    }
}

const n663 = 1 + sizeof(p663);

var p663: T663*;

struct T663 {
    a: int[n663];
}


func example_test664(): int {
    return fact_rec664(10) == fact_iter664(10);
}

union IntOrPtr664 {
    i: int;
    p: int*;
}

// func f664() {
//    u1 := IntOrPtr664{i = 42};
//    u2 := IntOrPtr664{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i664: int;

struct Vector664 {
    x: int;
    y: int;
}

func fact_iter664(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec664(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec664(n-1);
    }
}

const n664 = 1 + sizeof(p664);

var p664: T664*;

struct T664 {
    a: int[n664];
}


func example_test665(): int {
    return fact_rec665(10) == fact_iter665(10);
}

union IntOrPtr665 {
    i: int;
    p: int*;
}

// func f665() {
//    u1 := IntOrPtr665{i = 42};
//    u2 := IntOrPtr665{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i665: int;

struct Vector665 {
    x: int;
    y: int;
}

func fact_iter665(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec665(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec665(n-1);
    }
}

const n665 = 1 + sizeof(p665);

var p665: T665*;

struct T665 {
    a: int[n665];
}


func example_test666(): int {
    return fact_rec666(10) == fact_iter666(10);
}

union IntOrPtr666 {
    i: int;
    p: int*;
}

// func f666() {
//    u1 := IntOrPtr666{i = 42};
//    u2 := IntOrPtr666{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i666: int;

struct Vector666 {
    x: int;
    y: int;
}

func fact_iter666(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec666(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec666(n-1);
    }
}

const n666 = 1 + sizeof(p666);

var p666: T666*;

struct T666 {
    a: int[n666];
}


func example_test667(): int {
    return fact_rec667(10) == fact_iter667(10);
}

union IntOrPtr667 {
    i: int;
    p: int*;
}

// func f667() {
//    u1 := IntOrPtr667{i = 42};
//    u2 := IntOrPtr667{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i667: int;

struct Vector667 {
    x: int;
    y: int;
}

func fact_iter667(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec667(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec667(n-1);
    }
}

const n667 = 1 + sizeof(p667);

var p667: T667*;

struct T667 {
    a: int[n667];
}


func example_test668(): int {
    return fact_rec668(10) == fact_iter668(10);
}

union IntOrPtr668 {
    i: int;
    p: int*;
}

// func f668() {
//    u1 := IntOrPtr668{i = 42};
//    u2 := IntOrPtr668{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i668: int;

struct Vector668 {
    x: int;
    y: int;
}

func fact_iter668(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec668(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec668(n-1);
    }
}

const n668 = 1 + sizeof(p668);

var p668: T668*;

struct T668 {
    a: int[n668];
}


func example_test669(): int {
    return fact_rec669(10) == fact_iter669(10);
}

union IntOrPtr669 {
    i: int;
    p: int*;
}

// func f669() {
//    u1 := IntOrPtr669{i = 42};
//    u2 := IntOrPtr669{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i669: int;

struct Vector669 {
    x: int;
    y: int;
}

func fact_iter669(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec669(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec669(n-1);
    }
}

const n669 = 1 + sizeof(p669);

var p669: T669*;

struct T669 {
    a: int[n669];
}


func example_test670(): int {
    return fact_rec670(10) == fact_iter670(10);
}

union IntOrPtr670 {
    i: int;
    p: int*;
}

// func f670() {
//    u1 := IntOrPtr670{i = 42};
//    u2 := IntOrPtr670{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i670: int;

struct Vector670 {
    x: int;
    y: int;
}

func fact_iter670(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec670(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec670(n-1);
    }
}

const n670 = 1 + sizeof(p670);

var p670: T670*;

struct T670 {
    a: int[n670];
}


func example_test671(): int {
    return fact_rec671(10) == fact_iter671(10);
}

union IntOrPtr671 {
    i: int;
    p: int*;
}

// func f671() {
//    u1 := IntOrPtr671{i = 42};
//    u2 := IntOrPtr671{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i671: int;

struct Vector671 {
    x: int;
    y: int;
}

func fact_iter671(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec671(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec671(n-1);
    }
}

const n671 = 1 + sizeof(p671);

var p671: T671*;

struct T671 {
    a: int[n671];
}


func example_test672(): int {
    return fact_rec672(10) == fact_iter672(10);
}

union IntOrPtr672 {
    i: int;
    p: int*;
}

// func f672() {
//    u1 := IntOrPtr672{i = 42};
//    u2 := IntOrPtr672{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i672: int;

struct Vector672 {
    x: int;
    y: int;
}

func fact_iter672(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec672(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec672(n-1);
    }
}

const n672 = 1 + sizeof(p672);

var p672: T672*;

struct T672 {
    a: int[n672];
}


func example_test673(): int {
    return fact_rec673(10) == fact_iter673(10);
}

union IntOrPtr673 {
    i: int;
    p: int*;
}

// func f673() {
//    u1 := IntOrPtr673{i = 42};
//    u2 := IntOrPtr673{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i673: int;

struct Vector673 {
    x: int;
    y: int;
}

func fact_iter673(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec673(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec673(n-1);
    }
}

const n673 = 1 + sizeof(p673);

var p673: T673*;

struct T673 {
    a: int[n673];
}


func example_test674(): int {
    return fact_rec674(10) == fact_iter674(10);
}

union IntOrPtr674 {
    i: int;
    p: int*;
}

// func f674() {
//    u1 := IntOrPtr674{i = 42};
//    u2 := IntOrPtr674{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i674: int;

struct Vector674 {
    x: int;
    y: int;
}

func fact_iter674(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec674(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec674(n-1);
    }
}

const n674 = 1 + sizeof(p674);

var p674: T674*;

struct T674 {
    a: int[n674];
}


func example_test675(): int {
    return fact_rec675(10) == fact_iter675(10);
}

union IntOrPtr675 {
    i: int;
    p: int*;
}

// func f675() {
//    u1 := IntOrPtr675{i = 42};
//    u2 := IntOrPtr675{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i675: int;

struct Vector675 {
    x: int;
    y: int;
}

func fact_iter675(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec675(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec675(n-1);
    }
}

const n675 = 1 + sizeof(p675);

var p675: T675*;

struct T675 {
    a: int[n675];
}


func example_test676(): int {
    return fact_rec676(10) == fact_iter676(10);
}

union IntOrPtr676 {
    i: int;
    p: int*;
}

// func f676() {
//    u1 := IntOrPtr676{i = 42};
//    u2 := IntOrPtr676{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i676: int;

struct Vector676 {
    x: int;
    y: int;
}

func fact_iter676(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec676(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec676(n-1);
    }
}

const n676 = 1 + sizeof(p676);

var p676: T676*;

struct T676 {
    a: int[n676];
}


func example_test677(): int {
    return fact_rec677(10) == fact_iter677(10);
}

union IntOrPtr677 {
    i: int;
    p: int*;
}

// func f677() {
//    u1 := IntOrPtr677{i = 42};
//    u2 := IntOrPtr677{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i677: int;

struct Vector677 {
    x: int;
    y: int;
}

func fact_iter677(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec677(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec677(n-1);
    }
}

const n677 = 1 + sizeof(p677);

var p677: T677*;

struct T677 {
    a: int[n677];
}


func example_test678(): int {
    return fact_rec678(10) == fact_iter678(10);
}

union IntOrPtr678 {
    i: int;
    p: int*;
}

// func f678() {
//    u1 := IntOrPtr678{i = 42};
//    u2 := IntOrPtr678{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i678: int;

struct Vector678 {
    x: int;
    y: int;
}

func fact_iter678(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec678(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec678(n-1);
    }
}

const n678 = 1 + sizeof(p678);

var p678: T678*;

struct T678 {
    a: int[n678];
}


func example_test679(): int {
    return fact_rec679(10) == fact_iter679(10);
}

union IntOrPtr679 {
    i: int;
    p: int*;
}

// func f679() {
//    u1 := IntOrPtr679{i = 42};
//    u2 := IntOrPtr679{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i679: int;

struct Vector679 {
    x: int;
    y: int;
}

func fact_iter679(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec679(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec679(n-1);
    }
}

const n679 = 1 + sizeof(p679);

var p679: T679*;

struct T679 {
    a: int[n679];
}


func example_test680(): int {
    return fact_rec680(10) == fact_iter680(10);
}

union IntOrPtr680 {
    i: int;
    p: int*;
}

// func f680() {
//    u1 := IntOrPtr680{i = 42};
//    u2 := IntOrPtr680{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i680: int;

struct Vector680 {
    x: int;
    y: int;
}

func fact_iter680(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec680(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec680(n-1);
    }
}

const n680 = 1 + sizeof(p680);

var p680: T680*;

struct T680 {
    a: int[n680];
}


func example_test681(): int {
    return fact_rec681(10) == fact_iter681(10);
}

union IntOrPtr681 {
    i: int;
    p: int*;
}

// func f681() {
//    u1 := IntOrPtr681{i = 42};
//    u2 := IntOrPtr681{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i681: int;

struct Vector681 {
    x: int;
    y: int;
}

func fact_iter681(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec681(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec681(n-1);
    }
}

const n681 = 1 + sizeof(p681);

var p681: T681*;

struct T681 {
    a: int[n681];
}


func example_test682(): int {
    return fact_rec682(10) == fact_iter682(10);
}

union IntOrPtr682 {
    i: int;
    p: int*;
}

// func f682() {
//    u1 := IntOrPtr682{i = 42};
//    u2 := IntOrPtr682{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i682: int;

struct Vector682 {
    x: int;
    y: int;
}

func fact_iter682(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec682(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec682(n-1);
    }
}

const n682 = 1 + sizeof(p682);

var p682: T682*;

struct T682 {
    a: int[n682];
}


func example_test683(): int {
    return fact_rec683(10) == fact_iter683(10);
}

union IntOrPtr683 {
    i: int;
    p: int*;
}

// func f683() {
//    u1 := IntOrPtr683{i = 42};
//    u2 := IntOrPtr683{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i683: int;

struct Vector683 {
    x: int;
    y: int;
}

func fact_iter683(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec683(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec683(n-1);
    }
}

const n683 = 1 + sizeof(p683);

var p683: T683*;

struct T683 {
    a: int[n683];
}


func example_test684(): int {
    return fact_rec684(10) == fact_iter684(10);
}

union IntOrPtr684 {
    i: int;
    p: int*;
}

// func f684() {
//    u1 := IntOrPtr684{i = 42};
//    u2 := IntOrPtr684{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i684: int;

struct Vector684 {
    x: int;
    y: int;
}

func fact_iter684(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec684(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec684(n-1);
    }
}

const n684 = 1 + sizeof(p684);

var p684: T684*;

struct T684 {
    a: int[n684];
}


func example_test685(): int {
    return fact_rec685(10) == fact_iter685(10);
}

union IntOrPtr685 {
    i: int;
    p: int*;
}

// func f685() {
//    u1 := IntOrPtr685{i = 42};
//    u2 := IntOrPtr685{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i685: int;

struct Vector685 {
    x: int;
    y: int;
}

func fact_iter685(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec685(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec685(n-1);
    }
}

const n685 = 1 + sizeof(p685);

var p685: T685*;

struct T685 {
    a: int[n685];
}


func example_test686(): int {
    return fact_rec686(10) == fact_iter686(10);
}

union IntOrPtr686 {
    i: int;
    p: int*;
}

// func f686() {
//    u1 := IntOrPtr686{i = 42};
//    u2 := IntOrPtr686{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i686: int;

struct Vector686 {
    x: int;
    y: int;
}

func fact_iter686(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec686(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec686(n-1);
    }
}

const n686 = 1 + sizeof(p686);

var p686: T686*;

struct T686 {
    a: int[n686];
}


func example_test687(): int {
    return fact_rec687(10) == fact_iter687(10);
}

union IntOrPtr687 {
    i: int;
    p: int*;
}

// func f687() {
//    u1 := IntOrPtr687{i = 42};
//    u2 := IntOrPtr687{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i687: int;

struct Vector687 {
    x: int;
    y: int;
}

func fact_iter687(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec687(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec687(n-1);
    }
}

const n687 = 1 + sizeof(p687);

var p687: T687*;

struct T687 {
    a: int[n687];
}


func example_test688(): int {
    return fact_rec688(10) == fact_iter688(10);
}

union IntOrPtr688 {
    i: int;
    p: int*;
}

// func f688() {
//    u1 := IntOrPtr688{i = 42};
//    u2 := IntOrPtr688{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i688: int;

struct Vector688 {
    x: int;
    y: int;
}

func fact_iter688(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec688(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec688(n-1);
    }
}

const n688 = 1 + sizeof(p688);

var p688: T688*;

struct T688 {
    a: int[n688];
}


func example_test689(): int {
    return fact_rec689(10) == fact_iter689(10);
}

union IntOrPtr689 {
    i: int;
    p: int*;
}

// func f689() {
//    u1 := IntOrPtr689{i = 42};
//    u2 := IntOrPtr689{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i689: int;

struct Vector689 {
    x: int;
    y: int;
}

func fact_iter689(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec689(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec689(n-1);
    }
}

const n689 = 1 + sizeof(p689);

var p689: T689*;

struct T689 {
    a: int[n689];
}


func example_test690(): int {
    return fact_rec690(10) == fact_iter690(10);
}

union IntOrPtr690 {
    i: int;
    p: int*;
}

// func f690() {
//    u1 := IntOrPtr690{i = 42};
//    u2 := IntOrPtr690{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i690: int;

struct Vector690 {
    x: int;
    y: int;
}

func fact_iter690(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec690(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec690(n-1);
    }
}

const n690 = 1 + sizeof(p690);

var p690: T690*;

struct T690 {
    a: int[n690];
}


func example_test691(): int {
    return fact_rec691(10) == fact_iter691(10);
}

union IntOrPtr691 {
    i: int;
    p: int*;
}

// func f691() {
//    u1 := IntOrPtr691{i = 42};
//    u2 := IntOrPtr691{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i691: int;

struct Vector691 {
    x: int;
    y: int;
}

func fact_iter691(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec691(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec691(n-1);
    }
}

const n691 = 1 + sizeof(p691);

var p691: T691*;

struct T691 {
    a: int[n691];
}


func example_test692(): int {
    return fact_rec692(10) == fact_iter692(10);
}

union IntOrPtr692 {
    i: int;
    p: int*;
}

// func f692() {
//    u1 := IntOrPtr692{i = 42};
//    u2 := IntOrPtr692{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i692: int;

struct Vector692 {
    x: int;
    y: int;
}

func fact_iter692(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec692(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec692(n-1);
    }
}

const n692 = 1 + sizeof(p692);

var p692: T692*;

struct T692 {
    a: int[n692];
}


func example_test693(): int {
    return fact_rec693(10) == fact_iter693(10);
}

union IntOrPtr693 {
    i: int;
    p: int*;
}

// func f693() {
//    u1 := IntOrPtr693{i = 42};
//    u2 := IntOrPtr693{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i693: int;

struct Vector693 {
    x: int;
    y: int;
}

func fact_iter693(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec693(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec693(n-1);
    }
}

const n693 = 1 + sizeof(p693);

var p693: T693*;

struct T693 {
    a: int[n693];
}


func example_test694(): int {
    return fact_rec694(10) == fact_iter694(10);
}

union IntOrPtr694 {
    i: int;
    p: int*;
}

// func f694() {
//    u1 := IntOrPtr694{i = 42};
//    u2 := IntOrPtr694{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i694: int;

struct Vector694 {
    x: int;
    y: int;
}

func fact_iter694(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec694(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec694(n-1);
    }
}

const n694 = 1 + sizeof(p694);

var p694: T694*;

struct T694 {
    a: int[n694];
}


func example_test695(): int {
    return fact_rec695(10) == fact_iter695(10);
}

union IntOrPtr695 {
    i: int;
    p: int*;
}

// func f695() {
//    u1 := IntOrPtr695{i = 42};
//    u2 := IntOrPtr695{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i695: int;

struct Vector695 {
    x: int;
    y: int;
}

func fact_iter695(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec695(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec695(n-1);
    }
}

const n695 = 1 + sizeof(p695);

var p695: T695*;

struct T695 {
    a: int[n695];
}


func example_test696(): int {
    return fact_rec696(10) == fact_iter696(10);
}

union IntOrPtr696 {
    i: int;
    p: int*;
}

// func f696() {
//    u1 := IntOrPtr696{i = 42};
//    u2 := IntOrPtr696{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i696: int;

struct Vector696 {
    x: int;
    y: int;
}

func fact_iter696(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec696(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec696(n-1);
    }
}

const n696 = 1 + sizeof(p696);

var p696: T696*;

struct T696 {
    a: int[n696];
}


func example_test697(): int {
    return fact_rec697(10) == fact_iter697(10);
}

union IntOrPtr697 {
    i: int;
    p: int*;
}

// func f697() {
//    u1 := IntOrPtr697{i = 42};
//    u2 := IntOrPtr697{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i697: int;

struct Vector697 {
    x: int;
    y: int;
}

func fact_iter697(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec697(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec697(n-1);
    }
}

const n697 = 1 + sizeof(p697);

var p697: T697*;

struct T697 {
    a: int[n697];
}


func example_test698(): int {
    return fact_rec698(10) == fact_iter698(10);
}

union IntOrPtr698 {
    i: int;
    p: int*;
}

// func f698() {
//    u1 := IntOrPtr698{i = 42};
//    u2 := IntOrPtr698{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i698: int;

struct Vector698 {
    x: int;
    y: int;
}

func fact_iter698(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec698(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec698(n-1);
    }
}

const n698 = 1 + sizeof(p698);

var p698: T698*;

struct T698 {
    a: int[n698];
}


func example_test699(): int {
    return fact_rec699(10) == fact_iter699(10);
}

union IntOrPtr699 {
    i: int;
    p: int*;
}

// func f699() {
//    u1 := IntOrPtr699{i = 42};
//    u2 := IntOrPtr699{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i699: int;

struct Vector699 {
    x: int;
    y: int;
}

func fact_iter699(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec699(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec699(n-1);
    }
}

const n699 = 1 + sizeof(p699);

var p699: T699*;

struct T699 {
    a: int[n699];
}


func example_test700(): int {
    return fact_rec700(10) == fact_iter700(10);
}

union IntOrPtr700 {
    i: int;
    p: int*;
}

// func f700() {
//    u1 := IntOrPtr700{i = 42};
//    u2 := IntOrPtr700{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i700: int;

struct Vector700 {
    x: int;
    y: int;
}

func fact_iter700(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec700(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec700(n-1);
    }
}

const n700 = 1 + sizeof(p700);

var p700: T700*;

struct T700 {
    a: int[n700];
}


func example_test701(): int {
    return fact_rec701(10) == fact_iter701(10);
}

union IntOrPtr701 {
    i: int;
    p: int*;
}

// func f701() {
//    u1 := IntOrPtr701{i = 42};
//    u2 := IntOrPtr701{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i701: int;

struct Vector701 {
    x: int;
    y: int;
}

func fact_iter701(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec701(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec701(n-1);
    }
}

const n701 = 1 + sizeof(p701);

var p701: T701*;

struct T701 {
    a: int[n701];
}


func example_test702(): int {
    return fact_rec702(10) == fact_iter702(10);
}

union IntOrPtr702 {
    i: int;
    p: int*;
}

// func f702() {
//    u1 := IntOrPtr702{i = 42};
//    u2 := IntOrPtr702{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i702: int;

struct Vector702 {
    x: int;
    y: int;
}

func fact_iter702(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec702(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec702(n-1);
    }
}

const n702 = 1 + sizeof(p702);

var p702: T702*;

struct T702 {
    a: int[n702];
}


func example_test703(): int {
    return fact_rec703(10) == fact_iter703(10);
}

union IntOrPtr703 {
    i: int;
    p: int*;
}

// func f703() {
//    u1 := IntOrPtr703{i = 42};
//    u2 := IntOrPtr703{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i703: int;

struct Vector703 {
    x: int;
    y: int;
}

func fact_iter703(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec703(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec703(n-1);
    }
}

const n703 = 1 + sizeof(p703);

var p703: T703*;

struct T703 {
    a: int[n703];
}


func example_test704(): int {
    return fact_rec704(10) == fact_iter704(10);
}

union IntOrPtr704 {
    i: int;
    p: int*;
}

// func f704() {
//    u1 := IntOrPtr704{i = 42};
//    u2 := IntOrPtr704{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i704: int;

struct Vector704 {
    x: int;
    y: int;
}

func fact_iter704(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec704(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec704(n-1);
    }
}

const n704 = 1 + sizeof(p704);

var p704: T704*;

struct T704 {
    a: int[n704];
}


func example_test705(): int {
    return fact_rec705(10) == fact_iter705(10);
}

union IntOrPtr705 {
    i: int;
    p: int*;
}

// func f705() {
//    u1 := IntOrPtr705{i = 42};
//    u2 := IntOrPtr705{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i705: int;

struct Vector705 {
    x: int;
    y: int;
}

func fact_iter705(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec705(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec705(n-1);
    }
}

const n705 = 1 + sizeof(p705);

var p705: T705*;

struct T705 {
    a: int[n705];
}


func example_test706(): int {
    return fact_rec706(10) == fact_iter706(10);
}

union IntOrPtr706 {
    i: int;
    p: int*;
}

// func f706() {
//    u1 := IntOrPtr706{i = 42};
//    u2 := IntOrPtr706{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i706: int;

struct Vector706 {
    x: int;
    y: int;
}

func fact_iter706(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec706(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec706(n-1);
    }
}

const n706 = 1 + sizeof(p706);

var p706: T706*;

struct T706 {
    a: int[n706];
}


func example_test707(): int {
    return fact_rec707(10) == fact_iter707(10);
}

union IntOrPtr707 {
    i: int;
    p: int*;
}

// func f707() {
//    u1 := IntOrPtr707{i = 42};
//    u2 := IntOrPtr707{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i707: int;

struct Vector707 {
    x: int;
    y: int;
}

func fact_iter707(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec707(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec707(n-1);
    }
}

const n707 = 1 + sizeof(p707);

var p707: T707*;

struct T707 {
    a: int[n707];
}


func example_test708(): int {
    return fact_rec708(10) == fact_iter708(10);
}

union IntOrPtr708 {
    i: int;
    p: int*;
}

// func f708() {
//    u1 := IntOrPtr708{i = 42};
//    u2 := IntOrPtr708{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i708: int;

struct Vector708 {
    x: int;
    y: int;
}

func fact_iter708(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec708(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec708(n-1);
    }
}

const n708 = 1 + sizeof(p708);

var p708: T708*;

struct T708 {
    a: int[n708];
}


func example_test709(): int {
    return fact_rec709(10) == fact_iter709(10);
}

union IntOrPtr709 {
    i: int;
    p: int*;
}

// func f709() {
//    u1 := IntOrPtr709{i = 42};
//    u2 := IntOrPtr709{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i709: int;

struct Vector709 {
    x: int;
    y: int;
}

func fact_iter709(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec709(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec709(n-1);
    }
}

const n709 = 1 + sizeof(p709);

var p709: T709*;

struct T709 {
    a: int[n709];
}


func example_test710(): int {
    return fact_rec710(10) == fact_iter710(10);
}

union IntOrPtr710 {
    i: int;
    p: int*;
}

// func f710() {
//    u1 := IntOrPtr710{i = 42};
//    u2 := IntOrPtr710{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i710: int;

struct Vector710 {
    x: int;
    y: int;
}

func fact_iter710(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec710(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec710(n-1);
    }
}

const n710 = 1 + sizeof(p710);

var p710: T710*;

struct T710 {
    a: int[n710];
}


func example_test711(): int {
    return fact_rec711(10) == fact_iter711(10);
}

union IntOrPtr711 {
    i: int;
    p: int*;
}

// func f711() {
//    u1 := IntOrPtr711{i = 42};
//    u2 := IntOrPtr711{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i711: int;

struct Vector711 {
    x: int;
    y: int;
}

func fact_iter711(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec711(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec711(n-1);
    }
}

const n711 = 1 + sizeof(p711);

var p711: T711*;

struct T711 {
    a: int[n711];
}


func example_test712(): int {
    return fact_rec712(10) == fact_iter712(10);
}

union IntOrPtr712 {
    i: int;
    p: int*;
}

// func f712() {
//    u1 := IntOrPtr712{i = 42};
//    u2 := IntOrPtr712{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i712: int;

struct Vector712 {
    x: int;
    y: int;
}

func fact_iter712(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec712(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec712(n-1);
    }
}

const n712 = 1 + sizeof(p712);

var p712: T712*;

struct T712 {
    a: int[n712];
}


func example_test713(): int {
    return fact_rec713(10) == fact_iter713(10);
}

union IntOrPtr713 {
    i: int;
    p: int*;
}

// func f713() {
//    u1 := IntOrPtr713{i = 42};
//    u2 := IntOrPtr713{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i713: int;

struct Vector713 {
    x: int;
    y: int;
}

func fact_iter713(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec713(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec713(n-1);
    }
}

const n713 = 1 + sizeof(p713);

var p713: T713*;

struct T713 {
    a: int[n713];
}


func example_test714(): int {
    return fact_rec714(10) == fact_iter714(10);
}

union IntOrPtr714 {
    i: int;
    p: int*;
}

// func f714() {
//    u1 := IntOrPtr714{i = 42};
//    u2 := IntOrPtr714{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i714: int;

struct Vector714 {
    x: int;
    y: int;
}

func fact_iter714(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec714(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec714(n-1);
    }
}

const n714 = 1 + sizeof(p714);

var p714: T714*;

struct T714 {
    a: int[n714];
}


func example_test715(): int {
    return fact_rec715(10) == fact_iter715(10);
}

union IntOrPtr715 {
    i: int;
    p: int*;
}

// func f715() {
//    u1 := IntOrPtr715{i = 42};
//    u2 := IntOrPtr715{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i715: int;

struct Vector715 {
    x: int;
    y: int;
}

func fact_iter715(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec715(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec715(n-1);
    }
}

const n715 = 1 + sizeof(p715);

var p715: T715*;

struct T715 {
    a: int[n715];
}


func example_test716(): int {
    return fact_rec716(10) == fact_iter716(10);
}

union IntOrPtr716 {
    i: int;
    p: int*;
}

// func f716() {
//    u1 := IntOrPtr716{i = 42};
//    u2 := IntOrPtr716{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i716: int;

struct Vector716 {
    x: int;
    y: int;
}

func fact_iter716(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec716(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec716(n-1);
    }
}

const n716 = 1 + sizeof(p716);

var p716: T716*;

struct T716 {
    a: int[n716];
}


func example_test717(): int {
    return fact_rec717(10) == fact_iter717(10);
}

union IntOrPtr717 {
    i: int;
    p: int*;
}

// func f717() {
//    u1 := IntOrPtr717{i = 42};
//    u2 := IntOrPtr717{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i717: int;

struct Vector717 {
    x: int;
    y: int;
}

func fact_iter717(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec717(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec717(n-1);
    }
}

const n717 = 1 + sizeof(p717);

var p717: T717*;

struct T717 {
    a: int[n717];
}


func example_test718(): int {
    return fact_rec718(10) == fact_iter718(10);
}

union IntOrPtr718 {
    i: int;
    p: int*;
}

// func f718() {
//    u1 := IntOrPtr718{i = 42};
//    u2 := IntOrPtr718{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i718: int;

struct Vector718 {
    x: int;
    y: int;
}

func fact_iter718(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec718(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec718(n-1);
    }
}

const n718 = 1 + sizeof(p718);

var p718: T718*;

struct T718 {
    a: int[n718];
}


func example_test719(): int {
    return fact_rec719(10) == fact_iter719(10);
}

union IntOrPtr719 {
    i: int;
    p: int*;
}

// func f719() {
//    u1 := IntOrPtr719{i = 42};
//    u2 := IntOrPtr719{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i719: int;

struct Vector719 {
    x: int;
    y: int;
}

func fact_iter719(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec719(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec719(n-1);
    }
}

const n719 = 1 + sizeof(p719);

var p719: T719*;

struct T719 {
    a: int[n719];
}


func example_test720(): int {
    return fact_rec720(10) == fact_iter720(10);
}

union IntOrPtr720 {
    i: int;
    p: int*;
}

// func f720() {
//    u1 := IntOrPtr720{i = 42};
//    u2 := IntOrPtr720{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i720: int;

struct Vector720 {
    x: int;
    y: int;
}

func fact_iter720(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec720(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec720(n-1);
    }
}

const n720 = 1 + sizeof(p720);

var p720: T720*;

struct T720 {
    a: int[n720];
}


func example_test721(): int {
    return fact_rec721(10) == fact_iter721(10);
}

union IntOrPtr721 {
    i: int;
    p: int*;
}

// func f721() {
//    u1 := IntOrPtr721{i = 42};
//    u2 := IntOrPtr721{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i721: int;

struct Vector721 {
    x: int;
    y: int;
}

func fact_iter721(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec721(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec721(n-1);
    }
}

const n721 = 1 + sizeof(p721);

var p721: T721*;

struct T721 {
    a: int[n721];
}


func example_test722(): int {
    return fact_rec722(10) == fact_iter722(10);
}

union IntOrPtr722 {
    i: int;
    p: int*;
}

// func f722() {
//    u1 := IntOrPtr722{i = 42};
//    u2 := IntOrPtr722{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i722: int;

struct Vector722 {
    x: int;
    y: int;
}

func fact_iter722(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec722(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec722(n-1);
    }
}

const n722 = 1 + sizeof(p722);

var p722: T722*;

struct T722 {
    a: int[n722];
}


func example_test723(): int {
    return fact_rec723(10) == fact_iter723(10);
}

union IntOrPtr723 {
    i: int;
    p: int*;
}

// func f723() {
//    u1 := IntOrPtr723{i = 42};
//    u2 := IntOrPtr723{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i723: int;

struct Vector723 {
    x: int;
    y: int;
}

func fact_iter723(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec723(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec723(n-1);
    }
}

const n723 = 1 + sizeof(p723);

var p723: T723*;

struct T723 {
    a: int[n723];
}


func example_test724(): int {
    return fact_rec724(10) == fact_iter724(10);
}

union IntOrPtr724 {
    i: int;
    p: int*;
}

// func f724() {
//    u1 := IntOrPtr724{i = 42};
//    u2 := IntOrPtr724{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i724: int;

struct Vector724 {
    x: int;
    y: int;
}

func fact_iter724(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec724(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec724(n-1);
    }
}

const n724 = 1 + sizeof(p724);

var p724: T724*;

struct T724 {
    a: int[n724];
}


func example_test725(): int {
    return fact_rec725(10) == fact_iter725(10);
}

union IntOrPtr725 {
    i: int;
    p: int*;
}

// func f725() {
//    u1 := IntOrPtr725{i = 42};
//    u2 := IntOrPtr725{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i725: int;

struct Vector725 {
    x: int;
    y: int;
}

func fact_iter725(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec725(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec725(n-1);
    }
}

const n725 = 1 + sizeof(p725);

var p725: T725*;

struct T725 {
    a: int[n725];
}


func example_test726(): int {
    return fact_rec726(10) == fact_iter726(10);
}

union IntOrPtr726 {
    i: int;
    p: int*;
}

// func f726() {
//    u1 := IntOrPtr726{i = 42};
//    u2 := IntOrPtr726{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i726: int;

struct Vector726 {
    x: int;
    y: int;
}

func fact_iter726(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec726(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec726(n-1);
    }
}

const n726 = 1 + sizeof(p726);

var p726: T726*;

struct T726 {
    a: int[n726];
}


func example_test727(): int {
    return fact_rec727(10) == fact_iter727(10);
}

union IntOrPtr727 {
    i: int;
    p: int*;
}

// func f727() {
//    u1 := IntOrPtr727{i = 42};
//    u2 := IntOrPtr727{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i727: int;

struct Vector727 {
    x: int;
    y: int;
}

func fact_iter727(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec727(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec727(n-1);
    }
}

const n727 = 1 + sizeof(p727);

var p727: T727*;

struct T727 {
    a: int[n727];
}


func example_test728(): int {
    return fact_rec728(10) == fact_iter728(10);
}

union IntOrPtr728 {
    i: int;
    p: int*;
}

// func f728() {
//    u1 := IntOrPtr728{i = 42};
//    u2 := IntOrPtr728{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i728: int;

struct Vector728 {
    x: int;
    y: int;
}

func fact_iter728(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec728(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec728(n-1);
    }
}

const n728 = 1 + sizeof(p728);

var p728: T728*;

struct T728 {
    a: int[n728];
}


func example_test729(): int {
    return fact_rec729(10) == fact_iter729(10);
}

union IntOrPtr729 {
    i: int;
    p: int*;
}

// func f729() {
//    u1 := IntOrPtr729{i = 42};
//    u2 := IntOrPtr729{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i729: int;

struct Vector729 {
    x: int;
    y: int;
}

func fact_iter729(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec729(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec729(n-1);
    }
}

const n729 = 1 + sizeof(p729);

var p729: T729*;

struct T729 {
    a: int[n729];
}


func example_test730(): int {
    return fact_rec730(10) == fact_iter730(10);
}

union IntOrPtr730 {
    i: int;
    p: int*;
}

// func f730() {
//    u1 := IntOrPtr730{i = 42};
//    u2 := IntOrPtr730{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i730: int;

struct Vector730 {
    x: int;
    y: int;
}

func fact_iter730(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec730(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec730(n-1);
    }
}

const n730 = 1 + sizeof(p730);

var p730: T730*;

struct T730 {
    a: int[n730];
}


func example_test731(): int {
    return fact_rec731(10) == fact_iter731(10);
}

union IntOrPtr731 {
    i: int;
    p: int*;
}

// func f731() {
//    u1 := IntOrPtr731{i = 42};
//    u2 := IntOrPtr731{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i731: int;

struct Vector731 {
    x: int;
    y: int;
}

func fact_iter731(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec731(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec731(n-1);
    }
}

const n731 = 1 + sizeof(p731);

var p731: T731*;

struct T731 {
    a: int[n731];
}


func example_test732(): int {
    return fact_rec732(10) == fact_iter732(10);
}

union IntOrPtr732 {
    i: int;
    p: int*;
}

// func f732() {
//    u1 := IntOrPtr732{i = 42};
//    u2 := IntOrPtr732{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i732: int;

struct Vector732 {
    x: int;
    y: int;
}

func fact_iter732(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec732(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec732(n-1);
    }
}

const n732 = 1 + sizeof(p732);

var p732: T732*;

struct T732 {
    a: int[n732];
}


func example_test733(): int {
    return fact_rec733(10) == fact_iter733(10);
}

union IntOrPtr733 {
    i: int;
    p: int*;
}

// func f733() {
//    u1 := IntOrPtr733{i = 42};
//    u2 := IntOrPtr733{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i733: int;

struct Vector733 {
    x: int;
    y: int;
}

func fact_iter733(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec733(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec733(n-1);
    }
}

const n733 = 1 + sizeof(p733);

var p733: T733*;

struct T733 {
    a: int[n733];
}


func example_test734(): int {
    return fact_rec734(10) == fact_iter734(10);
}

union IntOrPtr734 {
    i: int;
    p: int*;
}

// func f734() {
//    u1 := IntOrPtr734{i = 42};
//    u2 := IntOrPtr734{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i734: int;

struct Vector734 {
    x: int;
    y: int;
}

func fact_iter734(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec734(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec734(n-1);
    }
}

const n734 = 1 + sizeof(p734);

var p734: T734*;

struct T734 {
    a: int[n734];
}


func example_test735(): int {
    return fact_rec735(10) == fact_iter735(10);
}

union IntOrPtr735 {
    i: int;
    p: int*;
}

// func f735() {
//    u1 := IntOrPtr735{i = 42};
//    u2 := IntOrPtr735{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i735: int;

struct Vector735 {
    x: int;
    y: int;
}

func fact_iter735(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec735(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec735(n-1);
    }
}

const n735 = 1 + sizeof(p735);

var p735: T735*;

struct T735 {
    a: int[n735];
}


func example_test736(): int {
    return fact_rec736(10) == fact_iter736(10);
}

union IntOrPtr736 {
    i: int;
    p: int*;
}

// func f736() {
//    u1 := IntOrPtr736{i = 42};
//    u2 := IntOrPtr736{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i736: int;

struct Vector736 {
    x: int;
    y: int;
}

func fact_iter736(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec736(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec736(n-1);
    }
}

const n736 = 1 + sizeof(p736);

var p736: T736*;

struct T736 {
    a: int[n736];
}


func example_test737(): int {
    return fact_rec737(10) == fact_iter737(10);
}

union IntOrPtr737 {
    i: int;
    p: int*;
}

// func f737() {
//    u1 := IntOrPtr737{i = 42};
//    u2 := IntOrPtr737{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i737: int;

struct Vector737 {
    x: int;
    y: int;
}

func fact_iter737(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec737(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec737(n-1);
    }
}

const n737 = 1 + sizeof(p737);

var p737: T737*;

struct T737 {
    a: int[n737];
}


func example_test738(): int {
    return fact_rec738(10) == fact_iter738(10);
}

union IntOrPtr738 {
    i: int;
    p: int*;
}

// func f738() {
//    u1 := IntOrPtr738{i = 42};
//    u2 := IntOrPtr738{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i738: int;

struct Vector738 {
    x: int;
    y: int;
}

func fact_iter738(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec738(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec738(n-1);
    }
}

const n738 = 1 + sizeof(p738);

var p738: T738*;

struct T738 {
    a: int[n738];
}


func example_test739(): int {
    return fact_rec739(10) == fact_iter739(10);
}

union IntOrPtr739 {
    i: int;
    p: int*;
}

// func f739() {
//    u1 := IntOrPtr739{i = 42};
//    u2 := IntOrPtr739{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i739: int;

struct Vector739 {
    x: int;
    y: int;
}

func fact_iter739(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec739(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec739(n-1);
    }
}

const n739 = 1 + sizeof(p739);

var p739: T739*;

struct T739 {
    a: int[n739];
}


func example_test740(): int {
    return fact_rec740(10) == fact_iter740(10);
}

union IntOrPtr740 {
    i: int;
    p: int*;
}

// func f740() {
//    u1 := IntOrPtr740{i = 42};
//    u2 := IntOrPtr740{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i740: int;

struct Vector740 {
    x: int;
    y: int;
}

func fact_iter740(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec740(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec740(n-1);
    }
}

const n740 = 1 + sizeof(p740);

var p740: T740*;

struct T740 {
    a: int[n740];
}


func example_test741(): int {
    return fact_rec741(10) == fact_iter741(10);
}

union IntOrPtr741 {
    i: int;
    p: int*;
}

// func f741() {
//    u1 := IntOrPtr741{i = 42};
//    u2 := IntOrPtr741{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i741: int;

struct Vector741 {
    x: int;
    y: int;
}

func fact_iter741(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec741(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec741(n-1);
    }
}

const n741 = 1 + sizeof(p741);

var p741: T741*;

struct T741 {
    a: int[n741];
}


func example_test742(): int {
    return fact_rec742(10) == fact_iter742(10);
}

union IntOrPtr742 {
    i: int;
    p: int*;
}

// func f742() {
//    u1 := IntOrPtr742{i = 42};
//    u2 := IntOrPtr742{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i742: int;

struct Vector742 {
    x: int;
    y: int;
}

func fact_iter742(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec742(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec742(n-1);
    }
}

const n742 = 1 + sizeof(p742);

var p742: T742*;

struct T742 {
    a: int[n742];
}


func example_test743(): int {
    return fact_rec743(10) == fact_iter743(10);
}

union IntOrPtr743 {
    i: int;
    p: int*;
}

// func f743() {
//    u1 := IntOrPtr743{i = 42};
//    u2 := IntOrPtr743{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i743: int;

struct Vector743 {
    x: int;
    y: int;
}

func fact_iter743(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec743(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec743(n-1);
    }
}

const n743 = 1 + sizeof(p743);

var p743: T743*;

struct T743 {
    a: int[n743];
}


func example_test744(): int {
    return fact_rec744(10) == fact_iter744(10);
}

union IntOrPtr744 {
    i: int;
    p: int*;
}

// func f744() {
//    u1 := IntOrPtr744{i = 42};
//    u2 := IntOrPtr744{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i744: int;

struct Vector744 {
    x: int;
    y: int;
}

func fact_iter744(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec744(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec744(n-1);
    }
}

const n744 = 1 + sizeof(p744);

var p744: T744*;

struct T744 {
    a: int[n744];
}


func example_test745(): int {
    return fact_rec745(10) == fact_iter745(10);
}

union IntOrPtr745 {
    i: int;
    p: int*;
}

// func f745() {
//    u1 := IntOrPtr745{i = 42};
//    u2 := IntOrPtr745{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i745: int;

struct Vector745 {
    x: int;
    y: int;
}

func fact_iter745(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec745(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec745(n-1);
    }
}

const n745 = 1 + sizeof(p745);

var p745: T745*;

struct T745 {
    a: int[n745];
}


func example_test746(): int {
    return fact_rec746(10) == fact_iter746(10);
}

union IntOrPtr746 {
    i: int;
    p: int*;
}

// func f746() {
//    u1 := IntOrPtr746{i = 42};
//    u2 := IntOrPtr746{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i746: int;

struct Vector746 {
    x: int;
    y: int;
}

func fact_iter746(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec746(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec746(n-1);
    }
}

const n746 = 1 + sizeof(p746);

var p746: T746*;

struct T746 {
    a: int[n746];
}


func example_test747(): int {
    return fact_rec747(10) == fact_iter747(10);
}

union IntOrPtr747 {
    i: int;
    p: int*;
}

// func f747() {
//    u1 := IntOrPtr747{i = 42};
//    u2 := IntOrPtr747{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i747: int;

struct Vector747 {
    x: int;
    y: int;
}

func fact_iter747(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec747(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec747(n-1);
    }
}

const n747 = 1 + sizeof(p747);

var p747: T747*;

struct T747 {
    a: int[n747];
}


func example_test748(): int {
    return fact_rec748(10) == fact_iter748(10);
}

union IntOrPtr748 {
    i: int;
    p: int*;
}

// func f748() {
//    u1 := IntOrPtr748{i = 42};
//    u2 := IntOrPtr748{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i748: int;

struct Vector748 {
    x: int;
    y: int;
}

func fact_iter748(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec748(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec748(n-1);
    }
}

const n748 = 1 + sizeof(p748);

var p748: T748*;

struct T748 {
    a: int[n748];
}


func example_test749(): int {
    return fact_rec749(10) == fact_iter749(10);
}

union IntOrPtr749 {
    i: int;
    p: int*;
}

// func f749() {
//    u1 := IntOrPtr749{i = 42};
//    u2 := IntOrPtr749{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i749: int;

struct Vector749 {
    x: int;
    y: int;
}

func fact_iter749(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec749(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec749(n-1);
    }
}

const n749 = 1 + sizeof(p749);

var p749: T749*;

struct T749 {
    a: int[n749];
}


func example_test750(): int {
    return fact_rec750(10) == fact_iter750(10);
}

union IntOrPtr750 {
    i: int;
    p: int*;
}

// func f750() {
//    u1 := IntOrPtr750{i = 42};
//    u2 := IntOrPtr750{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i750: int;

struct Vector750 {
    x: int;
    y: int;
}

func fact_iter750(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec750(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec750(n-1);
    }
}

const n750 = 1 + sizeof(p750);

var p750: T750*;

struct T750 {
    a: int[n750];
}


func example_test751(): int {
    return fact_rec751(10) == fact_iter751(10);
}

union IntOrPtr751 {
    i: int;
    p: int*;
}

// func f751() {
//    u1 := IntOrPtr751{i = 42};
//    u2 := IntOrPtr751{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i751: int;

struct Vector751 {
    x: int;
    y: int;
}

func fact_iter751(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec751(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec751(n-1);
    }
}

const n751 = 1 + sizeof(p751);

var p751: T751*;

struct T751 {
    a: int[n751];
}


func example_test752(): int {
    return fact_rec752(10) == fact_iter752(10);
}

union IntOrPtr752 {
    i: int;
    p: int*;
}

// func f752() {
//    u1 := IntOrPtr752{i = 42};
//    u2 := IntOrPtr752{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i752: int;

struct Vector752 {
    x: int;
    y: int;
}

func fact_iter752(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec752(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec752(n-1);
    }
}

const n752 = 1 + sizeof(p752);

var p752: T752*;

struct T752 {
    a: int[n752];
}


func example_test753(): int {
    return fact_rec753(10) == fact_iter753(10);
}

union IntOrPtr753 {
    i: int;
    p: int*;
}

// func f753() {
//    u1 := IntOrPtr753{i = 42};
//    u2 := IntOrPtr753{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i753: int;

struct Vector753 {
    x: int;
    y: int;
}

func fact_iter753(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec753(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec753(n-1);
    }
}

const n753 = 1 + sizeof(p753);

var p753: T753*;

struct T753 {
    a: int[n753];
}


func example_test754(): int {
    return fact_rec754(10) == fact_iter754(10);
}

union IntOrPtr754 {
    i: int;
    p: int*;
}

// func f754() {
//    u1 := IntOrPtr754{i = 42};
//    u2 := IntOrPtr754{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i754: int;

struct Vector754 {
    x: int;
    y: int;
}

func fact_iter754(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec754(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec754(n-1);
    }
}

const n754 = 1 + sizeof(p754);

var p754: T754*;

struct T754 {
    a: int[n754];
}


func example_test755(): int {
    return fact_rec755(10) == fact_iter755(10);
}

union IntOrPtr755 {
    i: int;
    p: int*;
}

// func f755() {
//    u1 := IntOrPtr755{i = 42};
//    u2 := IntOrPtr755{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i755: int;

struct Vector755 {
    x: int;
    y: int;
}

func fact_iter755(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec755(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec755(n-1);
    }
}

const n755 = 1 + sizeof(p755);

var p755: T755*;

struct T755 {
    a: int[n755];
}


func example_test756(): int {
    return fact_rec756(10) == fact_iter756(10);
}

union IntOrPtr756 {
    i: int;
    p: int*;
}

// func f756() {
//    u1 := IntOrPtr756{i = 42};
//    u2 := IntOrPtr756{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i756: int;

struct Vector756 {
    x: int;
    y: int;
}

func fact_iter756(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec756(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec756(n-1);
    }
}

const n756 = 1 + sizeof(p756);

var p756: T756*;

struct T756 {
    a: int[n756];
}


func example_test757(): int {
    return fact_rec757(10) == fact_iter757(10);
}

union IntOrPtr757 {
    i: int;
    p: int*;
}

// func f757() {
//    u1 := IntOrPtr757{i = 42};
//    u2 := IntOrPtr757{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i757: int;

struct Vector757 {
    x: int;
    y: int;
}

func fact_iter757(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec757(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec757(n-1);
    }
}

const n757 = 1 + sizeof(p757);

var p757: T757*;

struct T757 {
    a: int[n757];
}


func example_test758(): int {
    return fact_rec758(10) == fact_iter758(10);
}

union IntOrPtr758 {
    i: int;
    p: int*;
}

// func f758() {
//    u1 := IntOrPtr758{i = 42};
//    u2 := IntOrPtr758{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i758: int;

struct Vector758 {
    x: int;
    y: int;
}

func fact_iter758(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec758(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec758(n-1);
    }
}

const n758 = 1 + sizeof(p758);

var p758: T758*;

struct T758 {
    a: int[n758];
}


func example_test759(): int {
    return fact_rec759(10) == fact_iter759(10);
}

union IntOrPtr759 {
    i: int;
    p: int*;
}

// func f759() {
//    u1 := IntOrPtr759{i = 42};
//    u2 := IntOrPtr759{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i759: int;

struct Vector759 {
    x: int;
    y: int;
}

func fact_iter759(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec759(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec759(n-1);
    }
}

const n759 = 1 + sizeof(p759);

var p759: T759*;

struct T759 {
    a: int[n759];
}


func example_test760(): int {
    return fact_rec760(10) == fact_iter760(10);
}

union IntOrPtr760 {
    i: int;
    p: int*;
}

// func f760() {
//    u1 := IntOrPtr760{i = 42};
//    u2 := IntOrPtr760{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i760: int;

struct Vector760 {
    x: int;
    y: int;
}

func fact_iter760(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec760(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec760(n-1);
    }
}

const n760 = 1 + sizeof(p760);

var p760: T760*;

struct T760 {
    a: int[n760];
}


func example_test761(): int {
    return fact_rec761(10) == fact_iter761(10);
}

union IntOrPtr761 {
    i: int;
    p: int*;
}

// func f761() {
//    u1 := IntOrPtr761{i = 42};
//    u2 := IntOrPtr761{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i761: int;

struct Vector761 {
    x: int;
    y: int;
}

func fact_iter761(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec761(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec761(n-1);
    }
}

const n761 = 1 + sizeof(p761);

var p761: T761*;

struct T761 {
    a: int[n761];
}


func example_test762(): int {
    return fact_rec762(10) == fact_iter762(10);
}

union IntOrPtr762 {
    i: int;
    p: int*;
}

// func f762() {
//    u1 := IntOrPtr762{i = 42};
//    u2 := IntOrPtr762{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i762: int;

struct Vector762 {
    x: int;
    y: int;
}

func fact_iter762(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec762(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec762(n-1);
    }
}

const n762 = 1 + sizeof(p762);

var p762: T762*;

struct T762 {
    a: int[n762];
}


func example_test763(): int {
    return fact_rec763(10) == fact_iter763(10);
}

union IntOrPtr763 {
    i: int;
    p: int*;
}

// func f763() {
//    u1 := IntOrPtr763{i = 42};
//    u2 := IntOrPtr763{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i763: int;

struct Vector763 {
    x: int;
    y: int;
}

func fact_iter763(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec763(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec763(n-1);
    }
}

const n763 = 1 + sizeof(p763);

var p763: T763*;

struct T763 {
    a: int[n763];
}


func example_test764(): int {
    return fact_rec764(10) == fact_iter764(10);
}

union IntOrPtr764 {
    i: int;
    p: int*;
}

// func f764() {
//    u1 := IntOrPtr764{i = 42};
//    u2 := IntOrPtr764{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i764: int;

struct Vector764 {
    x: int;
    y: int;
}

func fact_iter764(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec764(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec764(n-1);
    }
}

const n764 = 1 + sizeof(p764);

var p764: T764*;

struct T764 {
    a: int[n764];
}


func example_test765(): int {
    return fact_rec765(10) == fact_iter765(10);
}

union IntOrPtr765 {
    i: int;
    p: int*;
}

// func f765() {
//    u1 := IntOrPtr765{i = 42};
//    u2 := IntOrPtr765{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i765: int;

struct Vector765 {
    x: int;
    y: int;
}

func fact_iter765(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec765(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec765(n-1);
    }
}

const n765 = 1 + sizeof(p765);

var p765: T765*;

struct T765 {
    a: int[n765];
}


func example_test766(): int {
    return fact_rec766(10) == fact_iter766(10);
}

union IntOrPtr766 {
    i: int;
    p: int*;
}

// func f766() {
//    u1 := IntOrPtr766{i = 42};
//    u2 := IntOrPtr766{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i766: int;

struct Vector766 {
    x: int;
    y: int;
}

func fact_iter766(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec766(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec766(n-1);
    }
}

const n766 = 1 + sizeof(p766);

var p766: T766*;

struct T766 {
    a: int[n766];
}


func example_test767(): int {
    return fact_rec767(10) == fact_iter767(10);
}

union IntOrPtr767 {
    i: int;
    p: int*;
}

// func f767() {
//    u1 := IntOrPtr767{i = 42};
//    u2 := IntOrPtr767{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i767: int;

struct Vector767 {
    x: int;
    y: int;
}

func fact_iter767(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec767(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec767(n-1);
    }
}

const n767 = 1 + sizeof(p767);

var p767: T767*;

struct T767 {
    a: int[n767];
}


func example_test768(): int {
    return fact_rec768(10) == fact_iter768(10);
}

union IntOrPtr768 {
    i: int;
    p: int*;
}

// func f768() {
//    u1 := IntOrPtr768{i = 42};
//    u2 := IntOrPtr768{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i768: int;

struct Vector768 {
    x: int;
    y: int;
}

func fact_iter768(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec768(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec768(n-1);
    }
}

const n768 = 1 + sizeof(p768);

var p768: T768*;

struct T768 {
    a: int[n768];
}


func example_test769(): int {
    return fact_rec769(10) == fact_iter769(10);
}

union IntOrPtr769 {
    i: int;
    p: int*;
}

// func f769() {
//    u1 := IntOrPtr769{i = 42};
//    u2 := IntOrPtr769{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i769: int;

struct Vector769 {
    x: int;
    y: int;
}

func fact_iter769(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec769(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec769(n-1);
    }
}

const n769 = 1 + sizeof(p769);

var p769: T769*;

struct T769 {
    a: int[n769];
}


func example_test770(): int {
    return fact_rec770(10) == fact_iter770(10);
}

union IntOrPtr770 {
    i: int;
    p: int*;
}

// func f770() {
//    u1 := IntOrPtr770{i = 42};
//    u2 := IntOrPtr770{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i770: int;

struct Vector770 {
    x: int;
    y: int;
}

func fact_iter770(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec770(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec770(n-1);
    }
}

const n770 = 1 + sizeof(p770);

var p770: T770*;

struct T770 {
    a: int[n770];
}


func example_test771(): int {
    return fact_rec771(10) == fact_iter771(10);
}

union IntOrPtr771 {
    i: int;
    p: int*;
}

// func f771() {
//    u1 := IntOrPtr771{i = 42};
//    u2 := IntOrPtr771{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i771: int;

struct Vector771 {
    x: int;
    y: int;
}

func fact_iter771(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec771(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec771(n-1);
    }
}

const n771 = 1 + sizeof(p771);

var p771: T771*;

struct T771 {
    a: int[n771];
}


func example_test772(): int {
    return fact_rec772(10) == fact_iter772(10);
}

union IntOrPtr772 {
    i: int;
    p: int*;
}

// func f772() {
//    u1 := IntOrPtr772{i = 42};
//    u2 := IntOrPtr772{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i772: int;

struct Vector772 {
    x: int;
    y: int;
}

func fact_iter772(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec772(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec772(n-1);
    }
}

const n772 = 1 + sizeof(p772);

var p772: T772*;

struct T772 {
    a: int[n772];
}


func example_test773(): int {
    return fact_rec773(10) == fact_iter773(10);
}

union IntOrPtr773 {
    i: int;
    p: int*;
}

// func f773() {
//    u1 := IntOrPtr773{i = 42};
//    u2 := IntOrPtr773{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i773: int;

struct Vector773 {
    x: int;
    y: int;
}

func fact_iter773(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec773(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec773(n-1);
    }
}

const n773 = 1 + sizeof(p773);

var p773: T773*;

struct T773 {
    a: int[n773];
}


func example_test774(): int {
    return fact_rec774(10) == fact_iter774(10);
}

union IntOrPtr774 {
    i: int;
    p: int*;
}

// func f774() {
//    u1 := IntOrPtr774{i = 42};
//    u2 := IntOrPtr774{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i774: int;

struct Vector774 {
    x: int;
    y: int;
}

func fact_iter774(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec774(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec774(n-1);
    }
}

const n774 = 1 + sizeof(p774);

var p774: T774*;

struct T774 {
    a: int[n774];
}


func example_test775(): int {
    return fact_rec775(10) == fact_iter775(10);
}

union IntOrPtr775 {
    i: int;
    p: int*;
}

// func f775() {
//    u1 := IntOrPtr775{i = 42};
//    u2 := IntOrPtr775{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i775: int;

struct Vector775 {
    x: int;
    y: int;
}

func fact_iter775(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec775(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec775(n-1);
    }
}

const n775 = 1 + sizeof(p775);

var p775: T775*;

struct T775 {
    a: int[n775];
}


func example_test776(): int {
    return fact_rec776(10) == fact_iter776(10);
}

union IntOrPtr776 {
    i: int;
    p: int*;
}

// func f776() {
//    u1 := IntOrPtr776{i = 42};
//    u2 := IntOrPtr776{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i776: int;

struct Vector776 {
    x: int;
    y: int;
}

func fact_iter776(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec776(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec776(n-1);
    }
}

const n776 = 1 + sizeof(p776);

var p776: T776*;

struct T776 {
    a: int[n776];
}


func example_test777(): int {
    return fact_rec777(10) == fact_iter777(10);
}

union IntOrPtr777 {
    i: int;
    p: int*;
}

// func f777() {
//    u1 := IntOrPtr777{i = 42};
//    u2 := IntOrPtr777{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i777: int;

struct Vector777 {
    x: int;
    y: int;
}

func fact_iter777(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec777(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec777(n-1);
    }
}

const n777 = 1 + sizeof(p777);

var p777: T777*;

struct T777 {
    a: int[n777];
}


func example_test778(): int {
    return fact_rec778(10) == fact_iter778(10);
}

union IntOrPtr778 {
    i: int;
    p: int*;
}

// func f778() {
//    u1 := IntOrPtr778{i = 42};
//    u2 := IntOrPtr778{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i778: int;

struct Vector778 {
    x: int;
    y: int;
}

func fact_iter778(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec778(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec778(n-1);
    }
}

const n778 = 1 + sizeof(p778);

var p778: T778*;

struct T778 {
    a: int[n778];
}


func example_test779(): int {
    return fact_rec779(10) == fact_iter779(10);
}

union IntOrPtr779 {
    i: int;
    p: int*;
}

// func f779() {
//    u1 := IntOrPtr779{i = 42};
//    u2 := IntOrPtr779{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i779: int;

struct Vector779 {
    x: int;
    y: int;
}

func fact_iter779(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec779(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec779(n-1);
    }
}

const n779 = 1 + sizeof(p779);

var p779: T779*;

struct T779 {
    a: int[n779];
}


func example_test780(): int {
    return fact_rec780(10) == fact_iter780(10);
}

union IntOrPtr780 {
    i: int;
    p: int*;
}

// func f780() {
//    u1 := IntOrPtr780{i = 42};
//    u2 := IntOrPtr780{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i780: int;

struct Vector780 {
    x: int;
    y: int;
}

func fact_iter780(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec780(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec780(n-1);
    }
}

const n780 = 1 + sizeof(p780);

var p780: T780*;

struct T780 {
    a: int[n780];
}


func example_test781(): int {
    return fact_rec781(10) == fact_iter781(10);
}

union IntOrPtr781 {
    i: int;
    p: int*;
}

// func f781() {
//    u1 := IntOrPtr781{i = 42};
//    u2 := IntOrPtr781{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i781: int;

struct Vector781 {
    x: int;
    y: int;
}

func fact_iter781(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec781(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec781(n-1);
    }
}

const n781 = 1 + sizeof(p781);

var p781: T781*;

struct T781 {
    a: int[n781];
}


func example_test782(): int {
    return fact_rec782(10) == fact_iter782(10);
}

union IntOrPtr782 {
    i: int;
    p: int*;
}

// func f782() {
//    u1 := IntOrPtr782{i = 42};
//    u2 := IntOrPtr782{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i782: int;

struct Vector782 {
    x: int;
    y: int;
}

func fact_iter782(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec782(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec782(n-1);
    }
}

const n782 = 1 + sizeof(p782);

var p782: T782*;

struct T782 {
    a: int[n782];
}


func example_test783(): int {
    return fact_rec783(10) == fact_iter783(10);
}

union IntOrPtr783 {
    i: int;
    p: int*;
}

// func f783() {
//    u1 := IntOrPtr783{i = 42};
//    u2 := IntOrPtr783{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i783: int;

struct Vector783 {
    x: int;
    y: int;
}

func fact_iter783(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec783(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec783(n-1);
    }
}

const n783 = 1 + sizeof(p783);

var p783: T783*;

struct T783 {
    a: int[n783];
}


func example_test784(): int {
    return fact_rec784(10) == fact_iter784(10);
}

union IntOrPtr784 {
    i: int;
    p: int*;
}

// func f784() {
//    u1 := IntOrPtr784{i = 42};
//    u2 := IntOrPtr784{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i784: int;

struct Vector784 {
    x: int;
    y: int;
}

func fact_iter784(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec784(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec784(n-1);
    }
}

const n784 = 1 + sizeof(p784);

var p784: T784*;

struct T784 {
    a: int[n784];
}


func example_test785(): int {
    return fact_rec785(10) == fact_iter785(10);
}

union IntOrPtr785 {
    i: int;
    p: int*;
}

// func f785() {
//    u1 := IntOrPtr785{i = 42};
//    u2 := IntOrPtr785{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i785: int;

struct Vector785 {
    x: int;
    y: int;
}

func fact_iter785(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec785(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec785(n-1);
    }
}

const n785 = 1 + sizeof(p785);

var p785: T785*;

struct T785 {
    a: int[n785];
}


func example_test786(): int {
    return fact_rec786(10) == fact_iter786(10);
}

union IntOrPtr786 {
    i: int;
    p: int*;
}

// func f786() {
//    u1 := IntOrPtr786{i = 42};
//    u2 := IntOrPtr786{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i786: int;

struct Vector786 {
    x: int;
    y: int;
}

func fact_iter786(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec786(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec786(n-1);
    }
}

const n786 = 1 + sizeof(p786);

var p786: T786*;

struct T786 {
    a: int[n786];
}


func example_test787(): int {
    return fact_rec787(10) == fact_iter787(10);
}

union IntOrPtr787 {
    i: int;
    p: int*;
}

// func f787() {
//    u1 := IntOrPtr787{i = 42};
//    u2 := IntOrPtr787{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i787: int;

struct Vector787 {
    x: int;
    y: int;
}

func fact_iter787(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec787(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec787(n-1);
    }
}

const n787 = 1 + sizeof(p787);

var p787: T787*;

struct T787 {
    a: int[n787];
}


func example_test788(): int {
    return fact_rec788(10) == fact_iter788(10);
}

union IntOrPtr788 {
    i: int;
    p: int*;
}

// func f788() {
//    u1 := IntOrPtr788{i = 42};
//    u2 := IntOrPtr788{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i788: int;

struct Vector788 {
    x: int;
    y: int;
}

func fact_iter788(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec788(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec788(n-1);
    }
}

const n788 = 1 + sizeof(p788);

var p788: T788*;

struct T788 {
    a: int[n788];
}


func example_test789(): int {
    return fact_rec789(10) == fact_iter789(10);
}

union IntOrPtr789 {
    i: int;
    p: int*;
}

// func f789() {
//    u1 := IntOrPtr789{i = 42};
//    u2 := IntOrPtr789{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i789: int;

struct Vector789 {
    x: int;
    y: int;
}

func fact_iter789(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec789(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec789(n-1);
    }
}

const n789 = 1 + sizeof(p789);

var p789: T789*;

struct T789 {
    a: int[n789];
}


func example_test790(): int {
    return fact_rec790(10) == fact_iter790(10);
}

union IntOrPtr790 {
    i: int;
    p: int*;
}

// func f790() {
//    u1 := IntOrPtr790{i = 42};
//    u2 := IntOrPtr790{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i790: int;

struct Vector790 {
    x: int;
    y: int;
}

func fact_iter790(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec790(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec790(n-1);
    }
}

const n790 = 1 + sizeof(p790);

var p790: T790*;

struct T790 {
    a: int[n790];
}


func example_test791(): int {
    return fact_rec791(10) == fact_iter791(10);
}

union IntOrPtr791 {
    i: int;
    p: int*;
}

// func f791() {
//    u1 := IntOrPtr791{i = 42};
//    u2 := IntOrPtr791{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i791: int;

struct Vector791 {
    x: int;
    y: int;
}

func fact_iter791(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec791(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec791(n-1);
    }
}

const n791 = 1 + sizeof(p791);

var p791: T791*;

struct T791 {
    a: int[n791];
}


func example_test792(): int {
    return fact_rec792(10) == fact_iter792(10);
}

union IntOrPtr792 {
    i: int;
    p: int*;
}

// func f792() {
//    u1 := IntOrPtr792{i = 42};
//    u2 := IntOrPtr792{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i792: int;

struct Vector792 {
    x: int;
    y: int;
}

func fact_iter792(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec792(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec792(n-1);
    }
}

const n792 = 1 + sizeof(p792);

var p792: T792*;

struct T792 {
    a: int[n792];
}


func example_test793(): int {
    return fact_rec793(10) == fact_iter793(10);
}

union IntOrPtr793 {
    i: int;
    p: int*;
}

// func f793() {
//    u1 := IntOrPtr793{i = 42};
//    u2 := IntOrPtr793{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i793: int;

struct Vector793 {
    x: int;
    y: int;
}

func fact_iter793(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec793(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec793(n-1);
    }
}

const n793 = 1 + sizeof(p793);

var p793: T793*;

struct T793 {
    a: int[n793];
}


func example_test794(): int {
    return fact_rec794(10) == fact_iter794(10);
}

union IntOrPtr794 {
    i: int;
    p: int*;
}

// func f794() {
//    u1 := IntOrPtr794{i = 42};
//    u2 := IntOrPtr794{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i794: int;

struct Vector794 {
    x: int;
    y: int;
}

func fact_iter794(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec794(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec794(n-1);
    }
}

const n794 = 1 + sizeof(p794);

var p794: T794*;

struct T794 {
    a: int[n794];
}


func example_test795(): int {
    return fact_rec795(10) == fact_iter795(10);
}

union IntOrPtr795 {
    i: int;
    p: int*;
}

// func f795() {
//    u1 := IntOrPtr795{i = 42};
//    u2 := IntOrPtr795{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i795: int;

struct Vector795 {
    x: int;
    y: int;
}

func fact_iter795(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec795(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec795(n-1);
    }
}

const n795 = 1 + sizeof(p795);

var p795: T795*;

struct T795 {
    a: int[n795];
}


func example_test796(): int {
    return fact_rec796(10) == fact_iter796(10);
}

union IntOrPtr796 {
    i: int;
    p: int*;
}

// func f796() {
//    u1 := IntOrPtr796{i = 42};
//    u2 := IntOrPtr796{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i796: int;

struct Vector796 {
    x: int;
    y: int;
}

func fact_iter796(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec796(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec796(n-1);
    }
}

const n796 = 1 + sizeof(p796);

var p796: T796*;

struct T796 {
    a: int[n796];
}


func example_test797(): int {
    return fact_rec797(10) == fact_iter797(10);
}

union IntOrPtr797 {
    i: int;
    p: int*;
}

// func f797() {
//    u1 := IntOrPtr797{i = 42};
//    u2 := IntOrPtr797{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i797: int;

struct Vector797 {
    x: int;
    y: int;
}

func fact_iter797(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec797(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec797(n-1);
    }
}

const n797 = 1 + sizeof(p797);

var p797: T797*;

struct T797 {
    a: int[n797];
}


func example_test798(): int {
    return fact_rec798(10) == fact_iter798(10);
}

union IntOrPtr798 {
    i: int;
    p: int*;
}

// func f798() {
//    u1 := IntOrPtr798{i = 42};
//    u2 := IntOrPtr798{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i798: int;

struct Vector798 {
    x: int;
    y: int;
}

func fact_iter798(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec798(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec798(n-1);
    }
}

const n798 = 1 + sizeof(p798);

var p798: T798*;

struct T798 {
    a: int[n798];
}


func example_test799(): int {
    return fact_rec799(10) == fact_iter799(10);
}

union IntOrPtr799 {
    i: int;
    p: int*;
}

// func f799() {
//    u1 := IntOrPtr799{i = 42};
//    u2 := IntOrPtr799{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i799: int;

struct Vector799 {
    x: int;
    y: int;
}

func fact_iter799(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec799(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec799(n-1);
    }
}

const n799 = 1 + sizeof(p799);

var p799: T799*;

struct T799 {
    a: int[n799];
}


func example_test800(): int {
    return fact_rec800(10) == fact_iter800(10);
}

union IntOrPtr800 {
    i: int;
    p: int*;
}

// func f800() {
//    u1 := IntOrPtr800{i = 42};
//    u2 := IntOrPtr800{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i800: int;

struct Vector800 {
    x: int;
    y: int;
}

func fact_iter800(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec800(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec800(n-1);
    }
}

const n800 = 1 + sizeof(p800);

var p800: T800*;

struct T800 {
    a: int[n800];
}


func example_test801(): int {
    return fact_rec801(10) == fact_iter801(10);
}

union IntOrPtr801 {
    i: int;
    p: int*;
}

// func f801() {
//    u1 := IntOrPtr801{i = 42};
//    u2 := IntOrPtr801{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i801: int;

struct Vector801 {
    x: int;
    y: int;
}

func fact_iter801(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec801(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec801(n-1);
    }
}

const n801 = 1 + sizeof(p801);

var p801: T801*;

struct T801 {
    a: int[n801];
}


func example_test802(): int {
    return fact_rec802(10) == fact_iter802(10);
}

union IntOrPtr802 {
    i: int;
    p: int*;
}

// func f802() {
//    u1 := IntOrPtr802{i = 42};
//    u2 := IntOrPtr802{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i802: int;

struct Vector802 {
    x: int;
    y: int;
}

func fact_iter802(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec802(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec802(n-1);
    }
}

const n802 = 1 + sizeof(p802);

var p802: T802*;

struct T802 {
    a: int[n802];
}


func example_test803(): int {
    return fact_rec803(10) == fact_iter803(10);
}

union IntOrPtr803 {
    i: int;
    p: int*;
}

// func f803() {
//    u1 := IntOrPtr803{i = 42};
//    u2 := IntOrPtr803{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i803: int;

struct Vector803 {
    x: int;
    y: int;
}

func fact_iter803(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec803(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec803(n-1);
    }
}

const n803 = 1 + sizeof(p803);

var p803: T803*;

struct T803 {
    a: int[n803];
}


func example_test804(): int {
    return fact_rec804(10) == fact_iter804(10);
}

union IntOrPtr804 {
    i: int;
    p: int*;
}

// func f804() {
//    u1 := IntOrPtr804{i = 42};
//    u2 := IntOrPtr804{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i804: int;

struct Vector804 {
    x: int;
    y: int;
}

func fact_iter804(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec804(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec804(n-1);
    }
}

const n804 = 1 + sizeof(p804);

var p804: T804*;

struct T804 {
    a: int[n804];
}


func example_test805(): int {
    return fact_rec805(10) == fact_iter805(10);
}

union IntOrPtr805 {
    i: int;
    p: int*;
}

// func f805() {
//    u1 := IntOrPtr805{i = 42};
//    u2 := IntOrPtr805{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i805: int;

struct Vector805 {
    x: int;
    y: int;
}

func fact_iter805(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec805(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec805(n-1);
    }
}

const n805 = 1 + sizeof(p805);

var p805: T805*;

struct T805 {
    a: int[n805];
}


func example_test806(): int {
    return fact_rec806(10) == fact_iter806(10);
}

union IntOrPtr806 {
    i: int;
    p: int*;
}

// func f806() {
//    u1 := IntOrPtr806{i = 42};
//    u2 := IntOrPtr806{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i806: int;

struct Vector806 {
    x: int;
    y: int;
}

func fact_iter806(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec806(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec806(n-1);
    }
}

const n806 = 1 + sizeof(p806);

var p806: T806*;

struct T806 {
    a: int[n806];
}


func example_test807(): int {
    return fact_rec807(10) == fact_iter807(10);
}

union IntOrPtr807 {
    i: int;
    p: int*;
}

// func f807() {
//    u1 := IntOrPtr807{i = 42};
//    u2 := IntOrPtr807{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i807: int;

struct Vector807 {
    x: int;
    y: int;
}

func fact_iter807(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec807(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec807(n-1);
    }
}

const n807 = 1 + sizeof(p807);

var p807: T807*;

struct T807 {
    a: int[n807];
}


func example_test808(): int {
    return fact_rec808(10) == fact_iter808(10);
}

union IntOrPtr808 {
    i: int;
    p: int*;
}

// func f808() {
//    u1 := IntOrPtr808{i = 42};
//    u2 := IntOrPtr808{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i808: int;

struct Vector808 {
    x: int;
    y: int;
}

func fact_iter808(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec808(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec808(n-1);
    }
}

const n808 = 1 + sizeof(p808);

var p808: T808*;

struct T808 {
    a: int[n808];
}


func example_test809(): int {
    return fact_rec809(10) == fact_iter809(10);
}

union IntOrPtr809 {
    i: int;
    p: int*;
}

// func f809() {
//    u1 := IntOrPtr809{i = 42};
//    u2 := IntOrPtr809{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i809: int;

struct Vector809 {
    x: int;
    y: int;
}

func fact_iter809(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec809(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec809(n-1);
    }
}

const n809 = 1 + sizeof(p809);

var p809: T809*;

struct T809 {
    a: int[n809];
}


func example_test810(): int {
    return fact_rec810(10) == fact_iter810(10);
}

union IntOrPtr810 {
    i: int;
    p: int*;
}

// func f810() {
//    u1 := IntOrPtr810{i = 42};
//    u2 := IntOrPtr810{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i810: int;

struct Vector810 {
    x: int;
    y: int;
}

func fact_iter810(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec810(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec810(n-1);
    }
}

const n810 = 1 + sizeof(p810);

var p810: T810*;

struct T810 {
    a: int[n810];
}


func example_test811(): int {
    return fact_rec811(10) == fact_iter811(10);
}

union IntOrPtr811 {
    i: int;
    p: int*;
}

// func f811() {
//    u1 := IntOrPtr811{i = 42};
//    u2 := IntOrPtr811{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i811: int;

struct Vector811 {
    x: int;
    y: int;
}

func fact_iter811(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec811(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec811(n-1);
    }
}

const n811 = 1 + sizeof(p811);

var p811: T811*;

struct T811 {
    a: int[n811];
}


func example_test812(): int {
    return fact_rec812(10) == fact_iter812(10);
}

union IntOrPtr812 {
    i: int;
    p: int*;
}

// func f812() {
//    u1 := IntOrPtr812{i = 42};
//    u2 := IntOrPtr812{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i812: int;

struct Vector812 {
    x: int;
    y: int;
}

func fact_iter812(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec812(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec812(n-1);
    }
}

const n812 = 1 + sizeof(p812);

var p812: T812*;

struct T812 {
    a: int[n812];
}


func example_test813(): int {
    return fact_rec813(10) == fact_iter813(10);
}

union IntOrPtr813 {
    i: int;
    p: int*;
}

// func f813() {
//    u1 := IntOrPtr813{i = 42};
//    u2 := IntOrPtr813{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i813: int;

struct Vector813 {
    x: int;
    y: int;
}

func fact_iter813(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec813(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec813(n-1);
    }
}

const n813 = 1 + sizeof(p813);

var p813: T813*;

struct T813 {
    a: int[n813];
}


func example_test814(): int {
    return fact_rec814(10) == fact_iter814(10);
}

union IntOrPtr814 {
    i: int;
    p: int*;
}

// func f814() {
//    u1 := IntOrPtr814{i = 42};
//    u2 := IntOrPtr814{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i814: int;

struct Vector814 {
    x: int;
    y: int;
}

func fact_iter814(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec814(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec814(n-1);
    }
}

const n814 = 1 + sizeof(p814);

var p814: T814*;

struct T814 {
    a: int[n814];
}


func example_test815(): int {
    return fact_rec815(10) == fact_iter815(10);
}

union IntOrPtr815 {
    i: int;
    p: int*;
}

// func f815() {
//    u1 := IntOrPtr815{i = 42};
//    u2 := IntOrPtr815{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i815: int;

struct Vector815 {
    x: int;
    y: int;
}

func fact_iter815(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec815(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec815(n-1);
    }
}

const n815 = 1 + sizeof(p815);

var p815: T815*;

struct T815 {
    a: int[n815];
}


func example_test816(): int {
    return fact_rec816(10) == fact_iter816(10);
}

union IntOrPtr816 {
    i: int;
    p: int*;
}

// func f816() {
//    u1 := IntOrPtr816{i = 42};
//    u2 := IntOrPtr816{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i816: int;

struct Vector816 {
    x: int;
    y: int;
}

func fact_iter816(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec816(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec816(n-1);
    }
}

const n816 = 1 + sizeof(p816);

var p816: T816*;

struct T816 {
    a: int[n816];
}


func example_test817(): int {
    return fact_rec817(10) == fact_iter817(10);
}

union IntOrPtr817 {
    i: int;
    p: int*;
}

// func f817() {
//    u1 := IntOrPtr817{i = 42};
//    u2 := IntOrPtr817{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i817: int;

struct Vector817 {
    x: int;
    y: int;
}

func fact_iter817(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec817(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec817(n-1);
    }
}

const n817 = 1 + sizeof(p817);

var p817: T817*;

struct T817 {
    a: int[n817];
}


func example_test818(): int {
    return fact_rec818(10) == fact_iter818(10);
}

union IntOrPtr818 {
    i: int;
    p: int*;
}

// func f818() {
//    u1 := IntOrPtr818{i = 42};
//    u2 := IntOrPtr818{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i818: int;

struct Vector818 {
    x: int;
    y: int;
}

func fact_iter818(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec818(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec818(n-1);
    }
}

const n818 = 1 + sizeof(p818);

var p818: T818*;

struct T818 {
    a: int[n818];
}


func example_test819(): int {
    return fact_rec819(10) == fact_iter819(10);
}

union IntOrPtr819 {
    i: int;
    p: int*;
}

// func f819() {
//    u1 := IntOrPtr819{i = 42};
//    u2 := IntOrPtr819{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i819: int;

struct Vector819 {
    x: int;
    y: int;
}

func fact_iter819(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec819(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec819(n-1);
    }
}

const n819 = 1 + sizeof(p819);

var p819: T819*;

struct T819 {
    a: int[n819];
}


func example_test820(): int {
    return fact_rec820(10) == fact_iter820(10);
}

union IntOrPtr820 {
    i: int;
    p: int*;
}

// func f820() {
//    u1 := IntOrPtr820{i = 42};
//    u2 := IntOrPtr820{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i820: int;

struct Vector820 {
    x: int;
    y: int;
}

func fact_iter820(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec820(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec820(n-1);
    }
}

const n820 = 1 + sizeof(p820);

var p820: T820*;

struct T820 {
    a: int[n820];
}


func example_test821(): int {
    return fact_rec821(10) == fact_iter821(10);
}

union IntOrPtr821 {
    i: int;
    p: int*;
}

// func f821() {
//    u1 := IntOrPtr821{i = 42};
//    u2 := IntOrPtr821{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i821: int;

struct Vector821 {
    x: int;
    y: int;
}

func fact_iter821(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec821(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec821(n-1);
    }
}

const n821 = 1 + sizeof(p821);

var p821: T821*;

struct T821 {
    a: int[n821];
}


func example_test822(): int {
    return fact_rec822(10) == fact_iter822(10);
}

union IntOrPtr822 {
    i: int;
    p: int*;
}

// func f822() {
//    u1 := IntOrPtr822{i = 42};
//    u2 := IntOrPtr822{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i822: int;

struct Vector822 {
    x: int;
    y: int;
}

func fact_iter822(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec822(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec822(n-1);
    }
}

const n822 = 1 + sizeof(p822);

var p822: T822*;

struct T822 {
    a: int[n822];
}


func example_test823(): int {
    return fact_rec823(10) == fact_iter823(10);
}

union IntOrPtr823 {
    i: int;
    p: int*;
}

// func f823() {
//    u1 := IntOrPtr823{i = 42};
//    u2 := IntOrPtr823{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i823: int;

struct Vector823 {
    x: int;
    y: int;
}

func fact_iter823(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec823(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec823(n-1);
    }
}

const n823 = 1 + sizeof(p823);

var p823: T823*;

struct T823 {
    a: int[n823];
}


func example_test824(): int {
    return fact_rec824(10) == fact_iter824(10);
}

union IntOrPtr824 {
    i: int;
    p: int*;
}

// func f824() {
//    u1 := IntOrPtr824{i = 42};
//    u2 := IntOrPtr824{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i824: int;

struct Vector824 {
    x: int;
    y: int;
}

func fact_iter824(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec824(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec824(n-1);
    }
}

const n824 = 1 + sizeof(p824);

var p824: T824*;

struct T824 {
    a: int[n824];
}


func example_test825(): int {
    return fact_rec825(10) == fact_iter825(10);
}

union IntOrPtr825 {
    i: int;
    p: int*;
}

// func f825() {
//    u1 := IntOrPtr825{i = 42};
//    u2 := IntOrPtr825{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i825: int;

struct Vector825 {
    x: int;
    y: int;
}

func fact_iter825(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec825(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec825(n-1);
    }
}

const n825 = 1 + sizeof(p825);

var p825: T825*;

struct T825 {
    a: int[n825];
}


func example_test826(): int {
    return fact_rec826(10) == fact_iter826(10);
}

union IntOrPtr826 {
    i: int;
    p: int*;
}

// func f826() {
//    u1 := IntOrPtr826{i = 42};
//    u2 := IntOrPtr826{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i826: int;

struct Vector826 {
    x: int;
    y: int;
}

func fact_iter826(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec826(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec826(n-1);
    }
}

const n826 = 1 + sizeof(p826);

var p826: T826*;

struct T826 {
    a: int[n826];
}


func example_test827(): int {
    return fact_rec827(10) == fact_iter827(10);
}

union IntOrPtr827 {
    i: int;
    p: int*;
}

// func f827() {
//    u1 := IntOrPtr827{i = 42};
//    u2 := IntOrPtr827{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i827: int;

struct Vector827 {
    x: int;
    y: int;
}

func fact_iter827(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec827(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec827(n-1);
    }
}

const n827 = 1 + sizeof(p827);

var p827: T827*;

struct T827 {
    a: int[n827];
}


func example_test828(): int {
    return fact_rec828(10) == fact_iter828(10);
}

union IntOrPtr828 {
    i: int;
    p: int*;
}

// func f828() {
//    u1 := IntOrPtr828{i = 42};
//    u2 := IntOrPtr828{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i828: int;

struct Vector828 {
    x: int;
    y: int;
}

func fact_iter828(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec828(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec828(n-1);
    }
}

const n828 = 1 + sizeof(p828);

var p828: T828*;

struct T828 {
    a: int[n828];
}


func example_test829(): int {
    return fact_rec829(10) == fact_iter829(10);
}

union IntOrPtr829 {
    i: int;
    p: int*;
}

// func f829() {
//    u1 := IntOrPtr829{i = 42};
//    u2 := IntOrPtr829{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i829: int;

struct Vector829 {
    x: int;
    y: int;
}

func fact_iter829(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec829(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec829(n-1);
    }
}

const n829 = 1 + sizeof(p829);

var p829: T829*;

struct T829 {
    a: int[n829];
}


func example_test830(): int {
    return fact_rec830(10) == fact_iter830(10);
}

union IntOrPtr830 {
    i: int;
    p: int*;
}

// func f830() {
//    u1 := IntOrPtr830{i = 42};
//    u2 := IntOrPtr830{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i830: int;

struct Vector830 {
    x: int;
    y: int;
}

func fact_iter830(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec830(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec830(n-1);
    }
}

const n830 = 1 + sizeof(p830);

var p830: T830*;

struct T830 {
    a: int[n830];
}


func example_test831(): int {
    return fact_rec831(10) == fact_iter831(10);
}

union IntOrPtr831 {
    i: int;
    p: int*;
}

// func f831() {
//    u1 := IntOrPtr831{i = 42};
//    u2 := IntOrPtr831{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i831: int;

struct Vector831 {
    x: int;
    y: int;
}

func fact_iter831(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec831(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec831(n-1);
    }
}

const n831 = 1 + sizeof(p831);

var p831: T831*;

struct T831 {
    a: int[n831];
}


func example_test832(): int {
    return fact_rec832(10) == fact_iter832(10);
}

union IntOrPtr832 {
    i: int;
    p: int*;
}

// func f832() {
//    u1 := IntOrPtr832{i = 42};
//    u2 := IntOrPtr832{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i832: int;

struct Vector832 {
    x: int;
    y: int;
}

func fact_iter832(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec832(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec832(n-1);
    }
}

const n832 = 1 + sizeof(p832);

var p832: T832*;

struct T832 {
    a: int[n832];
}


func example_test833(): int {
    return fact_rec833(10) == fact_iter833(10);
}

union IntOrPtr833 {
    i: int;
    p: int*;
}

// func f833() {
//    u1 := IntOrPtr833{i = 42};
//    u2 := IntOrPtr833{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i833: int;

struct Vector833 {
    x: int;
    y: int;
}

func fact_iter833(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec833(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec833(n-1);
    }
}

const n833 = 1 + sizeof(p833);

var p833: T833*;

struct T833 {
    a: int[n833];
}


func example_test834(): int {
    return fact_rec834(10) == fact_iter834(10);
}

union IntOrPtr834 {
    i: int;
    p: int*;
}

// func f834() {
//    u1 := IntOrPtr834{i = 42};
//    u2 := IntOrPtr834{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i834: int;

struct Vector834 {
    x: int;
    y: int;
}

func fact_iter834(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec834(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec834(n-1);
    }
}

const n834 = 1 + sizeof(p834);

var p834: T834*;

struct T834 {
    a: int[n834];
}


func example_test835(): int {
    return fact_rec835(10) == fact_iter835(10);
}

union IntOrPtr835 {
    i: int;
    p: int*;
}

// func f835() {
//    u1 := IntOrPtr835{i = 42};
//    u2 := IntOrPtr835{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i835: int;

struct Vector835 {
    x: int;
    y: int;
}

func fact_iter835(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec835(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec835(n-1);
    }
}

const n835 = 1 + sizeof(p835);

var p835: T835*;

struct T835 {
    a: int[n835];
}


func example_test836(): int {
    return fact_rec836(10) == fact_iter836(10);
}

union IntOrPtr836 {
    i: int;
    p: int*;
}

// func f836() {
//    u1 := IntOrPtr836{i = 42};
//    u2 := IntOrPtr836{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i836: int;

struct Vector836 {
    x: int;
    y: int;
}

func fact_iter836(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec836(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec836(n-1);
    }
}

const n836 = 1 + sizeof(p836);

var p836: T836*;

struct T836 {
    a: int[n836];
}


func example_test837(): int {
    return fact_rec837(10) == fact_iter837(10);
}

union IntOrPtr837 {
    i: int;
    p: int*;
}

// func f837() {
//    u1 := IntOrPtr837{i = 42};
//    u2 := IntOrPtr837{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i837: int;

struct Vector837 {
    x: int;
    y: int;
}

func fact_iter837(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec837(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec837(n-1);
    }
}

const n837 = 1 + sizeof(p837);

var p837: T837*;

struct T837 {
    a: int[n837];
}


func example_test838(): int {
    return fact_rec838(10) == fact_iter838(10);
}

union IntOrPtr838 {
    i: int;
    p: int*;
}

// func f838() {
//    u1 := IntOrPtr838{i = 42};
//    u2 := IntOrPtr838{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i838: int;

struct Vector838 {
    x: int;
    y: int;
}

func fact_iter838(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec838(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec838(n-1);
    }
}

const n838 = 1 + sizeof(p838);

var p838: T838*;

struct T838 {
    a: int[n838];
}


func example_test839(): int {
    return fact_rec839(10) == fact_iter839(10);
}

union IntOrPtr839 {
    i: int;
    p: int*;
}

// func f839() {
//    u1 := IntOrPtr839{i = 42};
//    u2 := IntOrPtr839{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i839: int;

struct Vector839 {
    x: int;
    y: int;
}

func fact_iter839(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec839(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec839(n-1);
    }
}

const n839 = 1 + sizeof(p839);

var p839: T839*;

struct T839 {
    a: int[n839];
}


func example_test840(): int {
    return fact_rec840(10) == fact_iter840(10);
}

union IntOrPtr840 {
    i: int;
    p: int*;
}

// func f840() {
//    u1 := IntOrPtr840{i = 42};
//    u2 := IntOrPtr840{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i840: int;

struct Vector840 {
    x: int;
    y: int;
}

func fact_iter840(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec840(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec840(n-1);
    }
}

const n840 = 1 + sizeof(p840);

var p840: T840*;

struct T840 {
    a: int[n840];
}


func example_test841(): int {
    return fact_rec841(10) == fact_iter841(10);
}

union IntOrPtr841 {
    i: int;
    p: int*;
}

// func f841() {
//    u1 := IntOrPtr841{i = 42};
//    u2 := IntOrPtr841{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i841: int;

struct Vector841 {
    x: int;
    y: int;
}

func fact_iter841(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec841(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec841(n-1);
    }
}

const n841 = 1 + sizeof(p841);

var p841: T841*;

struct T841 {
    a: int[n841];
}


func example_test842(): int {
    return fact_rec842(10) == fact_iter842(10);
}

union IntOrPtr842 {
    i: int;
    p: int*;
}

// func f842() {
//    u1 := IntOrPtr842{i = 42};
//    u2 := IntOrPtr842{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i842: int;

struct Vector842 {
    x: int;
    y: int;
}

func fact_iter842(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec842(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec842(n-1);
    }
}

const n842 = 1 + sizeof(p842);

var p842: T842*;

struct T842 {
    a: int[n842];
}


func example_test843(): int {
    return fact_rec843(10) == fact_iter843(10);
}

union IntOrPtr843 {
    i: int;
    p: int*;
}

// func f843() {
//    u1 := IntOrPtr843{i = 42};
//    u2 := IntOrPtr843{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i843: int;

struct Vector843 {
    x: int;
    y: int;
}

func fact_iter843(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec843(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec843(n-1);
    }
}

const n843 = 1 + sizeof(p843);

var p843: T843*;

struct T843 {
    a: int[n843];
}


func example_test844(): int {
    return fact_rec844(10) == fact_iter844(10);
}

union IntOrPtr844 {
    i: int;
    p: int*;
}

// func f844() {
//    u1 := IntOrPtr844{i = 42};
//    u2 := IntOrPtr844{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i844: int;

struct Vector844 {
    x: int;
    y: int;
}

func fact_iter844(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec844(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec844(n-1);
    }
}

const n844 = 1 + sizeof(p844);

var p844: T844*;

struct T844 {
    a: int[n844];
}


func example_test845(): int {
    return fact_rec845(10) == fact_iter845(10);
}

union IntOrPtr845 {
    i: int;
    p: int*;
}

// func f845() {
//    u1 := IntOrPtr845{i = 42};
//    u2 := IntOrPtr845{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i845: int;

struct Vector845 {
    x: int;
    y: int;
}

func fact_iter845(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec845(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec845(n-1);
    }
}

const n845 = 1 + sizeof(p845);

var p845: T845*;

struct T845 {
    a: int[n845];
}


func example_test846(): int {
    return fact_rec846(10) == fact_iter846(10);
}

union IntOrPtr846 {
    i: int;
    p: int*;
}

// func f846() {
//    u1 := IntOrPtr846{i = 42};
//    u2 := IntOrPtr846{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i846: int;

struct Vector846 {
    x: int;
    y: int;
}

func fact_iter846(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec846(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec846(n-1);
    }
}

const n846 = 1 + sizeof(p846);

var p846: T846*;

struct T846 {
    a: int[n846];
}


func example_test847(): int {
    return fact_rec847(10) == fact_iter847(10);
}

union IntOrPtr847 {
    i: int;
    p: int*;
}

// func f847() {
//    u1 := IntOrPtr847{i = 42};
//    u2 := IntOrPtr847{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i847: int;

struct Vector847 {
    x: int;
    y: int;
}

func fact_iter847(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec847(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec847(n-1);
    }
}

const n847 = 1 + sizeof(p847);

var p847: T847*;

struct T847 {
    a: int[n847];
}


func example_test848(): int {
    return fact_rec848(10) == fact_iter848(10);
}

union IntOrPtr848 {
    i: int;
    p: int*;
}

// func f848() {
//    u1 := IntOrPtr848{i = 42};
//    u2 := IntOrPtr848{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i848: int;

struct Vector848 {
    x: int;
    y: int;
}

func fact_iter848(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec848(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec848(n-1);
    }
}

const n848 = 1 + sizeof(p848);

var p848: T848*;

struct T848 {
    a: int[n848];
}


func example_test849(): int {
    return fact_rec849(10) == fact_iter849(10);
}

union IntOrPtr849 {
    i: int;
    p: int*;
}

// func f849() {
//    u1 := IntOrPtr849{i = 42};
//    u2 := IntOrPtr849{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i849: int;

struct Vector849 {
    x: int;
    y: int;
}

func fact_iter849(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec849(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec849(n-1);
    }
}

const n849 = 1 + sizeof(p849);

var p849: T849*;

struct T849 {
    a: int[n849];
}


func example_test850(): int {
    return fact_rec850(10) == fact_iter850(10);
}

union IntOrPtr850 {
    i: int;
    p: int*;
}

// func f850() {
//    u1 := IntOrPtr850{i = 42};
//    u2 := IntOrPtr850{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i850: int;

struct Vector850 {
    x: int;
    y: int;
}

func fact_iter850(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec850(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec850(n-1);
    }
}

const n850 = 1 + sizeof(p850);

var p850: T850*;

struct T850 {
    a: int[n850];
}


func example_test851(): int {
    return fact_rec851(10) == fact_iter851(10);
}

union IntOrPtr851 {
    i: int;
    p: int*;
}

// func f851() {
//    u1 := IntOrPtr851{i = 42};
//    u2 := IntOrPtr851{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i851: int;

struct Vector851 {
    x: int;
    y: int;
}

func fact_iter851(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec851(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec851(n-1);
    }
}

const n851 = 1 + sizeof(p851);

var p851: T851*;

struct T851 {
    a: int[n851];
}


func example_test852(): int {
    return fact_rec852(10) == fact_iter852(10);
}

union IntOrPtr852 {
    i: int;
    p: int*;
}

// func f852() {
//    u1 := IntOrPtr852{i = 42};
//    u2 := IntOrPtr852{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i852: int;

struct Vector852 {
    x: int;
    y: int;
}

func fact_iter852(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec852(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec852(n-1);
    }
}

const n852 = 1 + sizeof(p852);

var p852: T852*;

struct T852 {
    a: int[n852];
}


func example_test853(): int {
    return fact_rec853(10) == fact_iter853(10);
}

union IntOrPtr853 {
    i: int;
    p: int*;
}

// func f853() {
//    u1 := IntOrPtr853{i = 42};
//    u2 := IntOrPtr853{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i853: int;

struct Vector853 {
    x: int;
    y: int;
}

func fact_iter853(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec853(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec853(n-1);
    }
}

const n853 = 1 + sizeof(p853);

var p853: T853*;

struct T853 {
    a: int[n853];
}


func example_test854(): int {
    return fact_rec854(10) == fact_iter854(10);
}

union IntOrPtr854 {
    i: int;
    p: int*;
}

// func f854() {
//    u1 := IntOrPtr854{i = 42};
//    u2 := IntOrPtr854{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i854: int;

struct Vector854 {
    x: int;
    y: int;
}

func fact_iter854(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec854(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec854(n-1);
    }
}

const n854 = 1 + sizeof(p854);

var p854: T854*;

struct T854 {
    a: int[n854];
}


func example_test855(): int {
    return fact_rec855(10) == fact_iter855(10);
}

union IntOrPtr855 {
    i: int;
    p: int*;
}

// func f855() {
//    u1 := IntOrPtr855{i = 42};
//    u2 := IntOrPtr855{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i855: int;

struct Vector855 {
    x: int;
    y: int;
}

func fact_iter855(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec855(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec855(n-1);
    }
}

const n855 = 1 + sizeof(p855);

var p855: T855*;

struct T855 {
    a: int[n855];
}


func example_test856(): int {
    return fact_rec856(10) == fact_iter856(10);
}

union IntOrPtr856 {
    i: int;
    p: int*;
}

// func f856() {
//    u1 := IntOrPtr856{i = 42};
//    u2 := IntOrPtr856{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i856: int;

struct Vector856 {
    x: int;
    y: int;
}

func fact_iter856(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec856(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec856(n-1);
    }
}

const n856 = 1 + sizeof(p856);

var p856: T856*;

struct T856 {
    a: int[n856];
}


func example_test857(): int {
    return fact_rec857(10) == fact_iter857(10);
}

union IntOrPtr857 {
    i: int;
    p: int*;
}

// func f857() {
//    u1 := IntOrPtr857{i = 42};
//    u2 := IntOrPtr857{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i857: int;

struct Vector857 {
    x: int;
    y: int;
}

func fact_iter857(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec857(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec857(n-1);
    }
}

const n857 = 1 + sizeof(p857);

var p857: T857*;

struct T857 {
    a: int[n857];
}


func example_test858(): int {
    return fact_rec858(10) == fact_iter858(10);
}

union IntOrPtr858 {
    i: int;
    p: int*;
}

// func f858() {
//    u1 := IntOrPtr858{i = 42};
//    u2 := IntOrPtr858{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i858: int;

struct Vector858 {
    x: int;
    y: int;
}

func fact_iter858(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec858(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec858(n-1);
    }
}

const n858 = 1 + sizeof(p858);

var p858: T858*;

struct T858 {
    a: int[n858];
}


func example_test859(): int {
    return fact_rec859(10) == fact_iter859(10);
}

union IntOrPtr859 {
    i: int;
    p: int*;
}

// func f859() {
//    u1 := IntOrPtr859{i = 42};
//    u2 := IntOrPtr859{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i859: int;

struct Vector859 {
    x: int;
    y: int;
}

func fact_iter859(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec859(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec859(n-1);
    }
}

const n859 = 1 + sizeof(p859);

var p859: T859*;

struct T859 {
    a: int[n859];
}


func example_test860(): int {
    return fact_rec860(10) == fact_iter860(10);
}

union IntOrPtr860 {
    i: int;
    p: int*;
}

// func f860() {
//    u1 := IntOrPtr860{i = 42};
//    u2 := IntOrPtr860{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i860: int;

struct Vector860 {
    x: int;
    y: int;
}

func fact_iter860(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec860(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec860(n-1);
    }
}

const n860 = 1 + sizeof(p860);

var p860: T860*;

struct T860 {
    a: int[n860];
}


func example_test861(): int {
    return fact_rec861(10) == fact_iter861(10);
}

union IntOrPtr861 {
    i: int;
    p: int*;
}

// func f861() {
//    u1 := IntOrPtr861{i = 42};
//    u2 := IntOrPtr861{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i861: int;

struct Vector861 {
    x: int;
    y: int;
}

func fact_iter861(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec861(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec861(n-1);
    }
}

const n861 = 1 + sizeof(p861);

var p861: T861*;

struct T861 {
    a: int[n861];
}


func example_test862(): int {
    return fact_rec862(10) == fact_iter862(10);
}

union IntOrPtr862 {
    i: int;
    p: int*;
}

// func f862() {
//    u1 := IntOrPtr862{i = 42};
//    u2 := IntOrPtr862{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i862: int;

struct Vector862 {
    x: int;
    y: int;
}

func fact_iter862(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec862(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec862(n-1);
    }
}

const n862 = 1 + sizeof(p862);

var p862: T862*;

struct T862 {
    a: int[n862];
}


func example_test863(): int {
    return fact_rec863(10) == fact_iter863(10);
}

union IntOrPtr863 {
    i: int;
    p: int*;
}

// func f863() {
//    u1 := IntOrPtr863{i = 42};
//    u2 := IntOrPtr863{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i863: int;

struct Vector863 {
    x: int;
    y: int;
}

func fact_iter863(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec863(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec863(n-1);
    }
}

const n863 = 1 + sizeof(p863);

var p863: T863*;

struct T863 {
    a: int[n863];
}


func example_test864(): int {
    return fact_rec864(10) == fact_iter864(10);
}

union IntOrPtr864 {
    i: int;
    p: int*;
}

// func f864() {
//    u1 := IntOrPtr864{i = 42};
//    u2 := IntOrPtr864{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i864: int;

struct Vector864 {
    x: int;
    y: int;
}

func fact_iter864(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec864(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec864(n-1);
    }
}

const n864 = 1 + sizeof(p864);

var p864: T864*;

struct T864 {
    a: int[n864];
}


func example_test865(): int {
    return fact_rec865(10) == fact_iter865(10);
}

union IntOrPtr865 {
    i: int;
    p: int*;
}

// func f865() {
//    u1 := IntOrPtr865{i = 42};
//    u2 := IntOrPtr865{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i865: int;

struct Vector865 {
    x: int;
    y: int;
}

func fact_iter865(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec865(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec865(n-1);
    }
}

const n865 = 1 + sizeof(p865);

var p865: T865*;

struct T865 {
    a: int[n865];
}


func example_test866(): int {
    return fact_rec866(10) == fact_iter866(10);
}

union IntOrPtr866 {
    i: int;
    p: int*;
}

// func f866() {
//    u1 := IntOrPtr866{i = 42};
//    u2 := IntOrPtr866{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i866: int;

struct Vector866 {
    x: int;
    y: int;
}

func fact_iter866(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec866(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec866(n-1);
    }
}

const n866 = 1 + sizeof(p866);

var p866: T866*;

struct T866 {
    a: int[n866];
}


func example_test867(): int {
    return fact_rec867(10) == fact_iter867(10);
}

union IntOrPtr867 {
    i: int;
    p: int*;
}

// func f867() {
//    u1 := IntOrPtr867{i = 42};
//    u2 := IntOrPtr867{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i867: int;

struct Vector867 {
    x: int;
    y: int;
}

func fact_iter867(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec867(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec867(n-1);
    }
}

const n867 = 1 + sizeof(p867);

var p867: T867*;

struct T867 {
    a: int[n867];
}


func example_test868(): int {
    return fact_rec868(10) == fact_iter868(10);
}

union IntOrPtr868 {
    i: int;
    p: int*;
}

// func f868() {
//    u1 := IntOrPtr868{i = 42};
//    u2 := IntOrPtr868{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i868: int;

struct Vector868 {
    x: int;
    y: int;
}

func fact_iter868(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec868(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec868(n-1);
    }
}

const n868 = 1 + sizeof(p868);

var p868: T868*;

struct T868 {
    a: int[n868];
}


func example_test869(): int {
    return fact_rec869(10) == fact_iter869(10);
}

union IntOrPtr869 {
    i: int;
    p: int*;
}

// func f869() {
//    u1 := IntOrPtr869{i = 42};
//    u2 := IntOrPtr869{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i869: int;

struct Vector869 {
    x: int;
    y: int;
}

func fact_iter869(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec869(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec869(n-1);
    }
}

const n869 = 1 + sizeof(p869);

var p869: T869*;

struct T869 {
    a: int[n869];
}


func example_test870(): int {
    return fact_rec870(10) == fact_iter870(10);
}

union IntOrPtr870 {
    i: int;
    p: int*;
}

// func f870() {
//    u1 := IntOrPtr870{i = 42};
//    u2 := IntOrPtr870{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i870: int;

struct Vector870 {
    x: int;
    y: int;
}

func fact_iter870(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec870(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec870(n-1);
    }
}

const n870 = 1 + sizeof(p870);

var p870: T870*;

struct T870 {
    a: int[n870];
}


func example_test871(): int {
    return fact_rec871(10) == fact_iter871(10);
}

union IntOrPtr871 {
    i: int;
    p: int*;
}

// func f871() {
//    u1 := IntOrPtr871{i = 42};
//    u2 := IntOrPtr871{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i871: int;

struct Vector871 {
    x: int;
    y: int;
}

func fact_iter871(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec871(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec871(n-1);
    }
}

const n871 = 1 + sizeof(p871);

var p871: T871*;

struct T871 {
    a: int[n871];
}


func example_test872(): int {
    return fact_rec872(10) == fact_iter872(10);
}

union IntOrPtr872 {
    i: int;
    p: int*;
}

// func f872() {
//    u1 := IntOrPtr872{i = 42};
//    u2 := IntOrPtr872{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i872: int;

struct Vector872 {
    x: int;
    y: int;
}

func fact_iter872(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec872(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec872(n-1);
    }
}

const n872 = 1 + sizeof(p872);

var p872: T872*;

struct T872 {
    a: int[n872];
}


func example_test873(): int {
    return fact_rec873(10) == fact_iter873(10);
}

union IntOrPtr873 {
    i: int;
    p: int*;
}

// func f873() {
//    u1 := IntOrPtr873{i = 42};
//    u2 := IntOrPtr873{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i873: int;

struct Vector873 {
    x: int;
    y: int;
}

func fact_iter873(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec873(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec873(n-1);
    }
}

const n873 = 1 + sizeof(p873);

var p873: T873*;

struct T873 {
    a: int[n873];
}


func example_test874(): int {
    return fact_rec874(10) == fact_iter874(10);
}

union IntOrPtr874 {
    i: int;
    p: int*;
}

// func f874() {
//    u1 := IntOrPtr874{i = 42};
//    u2 := IntOrPtr874{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i874: int;

struct Vector874 {
    x: int;
    y: int;
}

func fact_iter874(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec874(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec874(n-1);
    }
}

const n874 = 1 + sizeof(p874);

var p874: T874*;

struct T874 {
    a: int[n874];
}


func example_test875(): int {
    return fact_rec875(10) == fact_iter875(10);
}

union IntOrPtr875 {
    i: int;
    p: int*;
}

// func f875() {
//    u1 := IntOrPtr875{i = 42};
//    u2 := IntOrPtr875{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i875: int;

struct Vector875 {
    x: int;
    y: int;
}

func fact_iter875(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec875(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec875(n-1);
    }
}

const n875 = 1 + sizeof(p875);

var p875: T875*;

struct T875 {
    a: int[n875];
}


func example_test876(): int {
    return fact_rec876(10) == fact_iter876(10);
}

union IntOrPtr876 {
    i: int;
    p: int*;
}

// func f876() {
//    u1 := IntOrPtr876{i = 42};
//    u2 := IntOrPtr876{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i876: int;

struct Vector876 {
    x: int;
    y: int;
}

func fact_iter876(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec876(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec876(n-1);
    }
}

const n876 = 1 + sizeof(p876);

var p876: T876*;

struct T876 {
    a: int[n876];
}


func example_test877(): int {
    return fact_rec877(10) == fact_iter877(10);
}

union IntOrPtr877 {
    i: int;
    p: int*;
}

// func f877() {
//    u1 := IntOrPtr877{i = 42};
//    u2 := IntOrPtr877{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i877: int;

struct Vector877 {
    x: int;
    y: int;
}

func fact_iter877(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec877(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec877(n-1);
    }
}

const n877 = 1 + sizeof(p877);

var p877: T877*;

struct T877 {
    a: int[n877];
}


func example_test878(): int {
    return fact_rec878(10) == fact_iter878(10);
}

union IntOrPtr878 {
    i: int;
    p: int*;
}

// func f878() {
//    u1 := IntOrPtr878{i = 42};
//    u2 := IntOrPtr878{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i878: int;

struct Vector878 {
    x: int;
    y: int;
}

func fact_iter878(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec878(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec878(n-1);
    }
}

const n878 = 1 + sizeof(p878);

var p878: T878*;

struct T878 {
    a: int[n878];
}


func example_test879(): int {
    return fact_rec879(10) == fact_iter879(10);
}

union IntOrPtr879 {
    i: int;
    p: int*;
}

// func f879() {
//    u1 := IntOrPtr879{i = 42};
//    u2 := IntOrPtr879{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i879: int;

struct Vector879 {
    x: int;
    y: int;
}

func fact_iter879(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec879(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec879(n-1);
    }
}

const n879 = 1 + sizeof(p879);

var p879: T879*;

struct T879 {
    a: int[n879];
}


func example_test880(): int {
    return fact_rec880(10) == fact_iter880(10);
}

union IntOrPtr880 {
    i: int;
    p: int*;
}

// func f880() {
//    u1 := IntOrPtr880{i = 42};
//    u2 := IntOrPtr880{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i880: int;

struct Vector880 {
    x: int;
    y: int;
}

func fact_iter880(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec880(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec880(n-1);
    }
}

const n880 = 1 + sizeof(p880);

var p880: T880*;

struct T880 {
    a: int[n880];
}


func example_test881(): int {
    return fact_rec881(10) == fact_iter881(10);
}

union IntOrPtr881 {
    i: int;
    p: int*;
}

// func f881() {
//    u1 := IntOrPtr881{i = 42};
//    u2 := IntOrPtr881{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i881: int;

struct Vector881 {
    x: int;
    y: int;
}

func fact_iter881(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec881(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec881(n-1);
    }
}

const n881 = 1 + sizeof(p881);

var p881: T881*;

struct T881 {
    a: int[n881];
}


func example_test882(): int {
    return fact_rec882(10) == fact_iter882(10);
}

union IntOrPtr882 {
    i: int;
    p: int*;
}

// func f882() {
//    u1 := IntOrPtr882{i = 42};
//    u2 := IntOrPtr882{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i882: int;

struct Vector882 {
    x: int;
    y: int;
}

func fact_iter882(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec882(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec882(n-1);
    }
}

const n882 = 1 + sizeof(p882);

var p882: T882*;

struct T882 {
    a: int[n882];
}


func example_test883(): int {
    return fact_rec883(10) == fact_iter883(10);
}

union IntOrPtr883 {
    i: int;
    p: int*;
}

// func f883() {
//    u1 := IntOrPtr883{i = 42};
//    u2 := IntOrPtr883{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i883: int;

struct Vector883 {
    x: int;
    y: int;
}

func fact_iter883(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec883(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec883(n-1);
    }
}

const n883 = 1 + sizeof(p883);

var p883: T883*;

struct T883 {
    a: int[n883];
}


func example_test884(): int {
    return fact_rec884(10) == fact_iter884(10);
}

union IntOrPtr884 {
    i: int;
    p: int*;
}

// func f884() {
//    u1 := IntOrPtr884{i = 42};
//    u2 := IntOrPtr884{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i884: int;

struct Vector884 {
    x: int;
    y: int;
}

func fact_iter884(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec884(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec884(n-1);
    }
}

const n884 = 1 + sizeof(p884);

var p884: T884*;

struct T884 {
    a: int[n884];
}


func example_test885(): int {
    return fact_rec885(10) == fact_iter885(10);
}

union IntOrPtr885 {
    i: int;
    p: int*;
}

// func f885() {
//    u1 := IntOrPtr885{i = 42};
//    u2 := IntOrPtr885{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i885: int;

struct Vector885 {
    x: int;
    y: int;
}

func fact_iter885(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec885(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec885(n-1);
    }
}

const n885 = 1 + sizeof(p885);

var p885: T885*;

struct T885 {
    a: int[n885];
}


func example_test886(): int {
    return fact_rec886(10) == fact_iter886(10);
}

union IntOrPtr886 {
    i: int;
    p: int*;
}

// func f886() {
//    u1 := IntOrPtr886{i = 42};
//    u2 := IntOrPtr886{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i886: int;

struct Vector886 {
    x: int;
    y: int;
}

func fact_iter886(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec886(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec886(n-1);
    }
}

const n886 = 1 + sizeof(p886);

var p886: T886*;

struct T886 {
    a: int[n886];
}


func example_test887(): int {
    return fact_rec887(10) == fact_iter887(10);
}

union IntOrPtr887 {
    i: int;
    p: int*;
}

// func f887() {
//    u1 := IntOrPtr887{i = 42};
//    u2 := IntOrPtr887{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i887: int;

struct Vector887 {
    x: int;
    y: int;
}

func fact_iter887(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec887(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec887(n-1);
    }
}

const n887 = 1 + sizeof(p887);

var p887: T887*;

struct T887 {
    a: int[n887];
}


func example_test888(): int {
    return fact_rec888(10) == fact_iter888(10);
}

union IntOrPtr888 {
    i: int;
    p: int*;
}

// func f888() {
//    u1 := IntOrPtr888{i = 42};
//    u2 := IntOrPtr888{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i888: int;

struct Vector888 {
    x: int;
    y: int;
}

func fact_iter888(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec888(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec888(n-1);
    }
}

const n888 = 1 + sizeof(p888);

var p888: T888*;

struct T888 {
    a: int[n888];
}


func example_test889(): int {
    return fact_rec889(10) == fact_iter889(10);
}

union IntOrPtr889 {
    i: int;
    p: int*;
}

// func f889() {
//    u1 := IntOrPtr889{i = 42};
//    u2 := IntOrPtr889{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i889: int;

struct Vector889 {
    x: int;
    y: int;
}

func fact_iter889(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec889(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec889(n-1);
    }
}

const n889 = 1 + sizeof(p889);

var p889: T889*;

struct T889 {
    a: int[n889];
}


func example_test890(): int {
    return fact_rec890(10) == fact_iter890(10);
}

union IntOrPtr890 {
    i: int;
    p: int*;
}

// func f890() {
//    u1 := IntOrPtr890{i = 42};
//    u2 := IntOrPtr890{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i890: int;

struct Vector890 {
    x: int;
    y: int;
}

func fact_iter890(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec890(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec890(n-1);
    }
}

const n890 = 1 + sizeof(p890);

var p890: T890*;

struct T890 {
    a: int[n890];
}


func example_test891(): int {
    return fact_rec891(10) == fact_iter891(10);
}

union IntOrPtr891 {
    i: int;
    p: int*;
}

// func f891() {
//    u1 := IntOrPtr891{i = 42};
//    u2 := IntOrPtr891{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i891: int;

struct Vector891 {
    x: int;
    y: int;
}

func fact_iter891(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec891(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec891(n-1);
    }
}

const n891 = 1 + sizeof(p891);

var p891: T891*;

struct T891 {
    a: int[n891];
}


func example_test892(): int {
    return fact_rec892(10) == fact_iter892(10);
}

union IntOrPtr892 {
    i: int;
    p: int*;
}

// func f892() {
//    u1 := IntOrPtr892{i = 42};
//    u2 := IntOrPtr892{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i892: int;

struct Vector892 {
    x: int;
    y: int;
}

func fact_iter892(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec892(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec892(n-1);
    }
}

const n892 = 1 + sizeof(p892);

var p892: T892*;

struct T892 {
    a: int[n892];
}


func example_test893(): int {
    return fact_rec893(10) == fact_iter893(10);
}

union IntOrPtr893 {
    i: int;
    p: int*;
}

// func f893() {
//    u1 := IntOrPtr893{i = 42};
//    u2 := IntOrPtr893{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i893: int;

struct Vector893 {
    x: int;
    y: int;
}

func fact_iter893(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec893(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec893(n-1);
    }
}

const n893 = 1 + sizeof(p893);

var p893: T893*;

struct T893 {
    a: int[n893];
}


func example_test894(): int {
    return fact_rec894(10) == fact_iter894(10);
}

union IntOrPtr894 {
    i: int;
    p: int*;
}

// func f894() {
//    u1 := IntOrPtr894{i = 42};
//    u2 := IntOrPtr894{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i894: int;

struct Vector894 {
    x: int;
    y: int;
}

func fact_iter894(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec894(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec894(n-1);
    }
}

const n894 = 1 + sizeof(p894);

var p894: T894*;

struct T894 {
    a: int[n894];
}


func example_test895(): int {
    return fact_rec895(10) == fact_iter895(10);
}

union IntOrPtr895 {
    i: int;
    p: int*;
}

// func f895() {
//    u1 := IntOrPtr895{i = 42};
//    u2 := IntOrPtr895{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i895: int;

struct Vector895 {
    x: int;
    y: int;
}

func fact_iter895(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec895(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec895(n-1);
    }
}

const n895 = 1 + sizeof(p895);

var p895: T895*;

struct T895 {
    a: int[n895];
}


func example_test896(): int {
    return fact_rec896(10) == fact_iter896(10);
}

union IntOrPtr896 {
    i: int;
    p: int*;
}

// func f896() {
//    u1 := IntOrPtr896{i = 42};
//    u2 := IntOrPtr896{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i896: int;

struct Vector896 {
    x: int;
    y: int;
}

func fact_iter896(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec896(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec896(n-1);
    }
}

const n896 = 1 + sizeof(p896);

var p896: T896*;

struct T896 {
    a: int[n896];
}


func example_test897(): int {
    return fact_rec897(10) == fact_iter897(10);
}

union IntOrPtr897 {
    i: int;
    p: int*;
}

// func f897() {
//    u1 := IntOrPtr897{i = 42};
//    u2 := IntOrPtr897{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i897: int;

struct Vector897 {
    x: int;
    y: int;
}

func fact_iter897(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec897(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec897(n-1);
    }
}

const n897 = 1 + sizeof(p897);

var p897: T897*;

struct T897 {
    a: int[n897];
}


func example_test898(): int {
    return fact_rec898(10) == fact_iter898(10);
}

union IntOrPtr898 {
    i: int;
    p: int*;
}

// func f898() {
//    u1 := IntOrPtr898{i = 42};
//    u2 := IntOrPtr898{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i898: int;

struct Vector898 {
    x: int;
    y: int;
}

func fact_iter898(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec898(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec898(n-1);
    }
}

const n898 = 1 + sizeof(p898);

var p898: T898*;

struct T898 {
    a: int[n898];
}


func example_test899(): int {
    return fact_rec899(10) == fact_iter899(10);
}

union IntOrPtr899 {
    i: int;
    p: int*;
}

// func f899() {
//    u1 := IntOrPtr899{i = 42};
//    u2 := IntOrPtr899{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i899: int;

struct Vector899 {
    x: int;
    y: int;
}

func fact_iter899(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec899(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec899(n-1);
    }
}

const n899 = 1 + sizeof(p899);

var p899: T899*;

struct T899 {
    a: int[n899];
}


func example_test900(): int {
    return fact_rec900(10) == fact_iter900(10);
}

union IntOrPtr900 {
    i: int;
    p: int*;
}

// func f900() {
//    u1 := IntOrPtr900{i = 42};
//    u2 := IntOrPtr900{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i900: int;

struct Vector900 {
    x: int;
    y: int;
}

func fact_iter900(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec900(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec900(n-1);
    }
}

const n900 = 1 + sizeof(p900);

var p900: T900*;

struct T900 {
    a: int[n900];
}


func example_test901(): int {
    return fact_rec901(10) == fact_iter901(10);
}

union IntOrPtr901 {
    i: int;
    p: int*;
}

// func f901() {
//    u1 := IntOrPtr901{i = 42};
//    u2 := IntOrPtr901{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i901: int;

struct Vector901 {
    x: int;
    y: int;
}

func fact_iter901(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec901(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec901(n-1);
    }
}

const n901 = 1 + sizeof(p901);

var p901: T901*;

struct T901 {
    a: int[n901];
}


func example_test902(): int {
    return fact_rec902(10) == fact_iter902(10);
}

union IntOrPtr902 {
    i: int;
    p: int*;
}

// func f902() {
//    u1 := IntOrPtr902{i = 42};
//    u2 := IntOrPtr902{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i902: int;

struct Vector902 {
    x: int;
    y: int;
}

func fact_iter902(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec902(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec902(n-1);
    }
}

const n902 = 1 + sizeof(p902);

var p902: T902*;

struct T902 {
    a: int[n902];
}


func example_test903(): int {
    return fact_rec903(10) == fact_iter903(10);
}

union IntOrPtr903 {
    i: int;
    p: int*;
}

// func f903() {
//    u1 := IntOrPtr903{i = 42};
//    u2 := IntOrPtr903{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i903: int;

struct Vector903 {
    x: int;
    y: int;
}

func fact_iter903(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec903(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec903(n-1);
    }
}

const n903 = 1 + sizeof(p903);

var p903: T903*;

struct T903 {
    a: int[n903];
}


func example_test904(): int {
    return fact_rec904(10) == fact_iter904(10);
}

union IntOrPtr904 {
    i: int;
    p: int*;
}

// func f904() {
//    u1 := IntOrPtr904{i = 42};
//    u2 := IntOrPtr904{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i904: int;

struct Vector904 {
    x: int;
    y: int;
}

func fact_iter904(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec904(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec904(n-1);
    }
}

const n904 = 1 + sizeof(p904);

var p904: T904*;

struct T904 {
    a: int[n904];
}


func example_test905(): int {
    return fact_rec905(10) == fact_iter905(10);
}

union IntOrPtr905 {
    i: int;
    p: int*;
}

// func f905() {
//    u1 := IntOrPtr905{i = 42};
//    u2 := IntOrPtr905{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i905: int;

struct Vector905 {
    x: int;
    y: int;
}

func fact_iter905(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec905(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec905(n-1);
    }
}

const n905 = 1 + sizeof(p905);

var p905: T905*;

struct T905 {
    a: int[n905];
}


func example_test906(): int {
    return fact_rec906(10) == fact_iter906(10);
}

union IntOrPtr906 {
    i: int;
    p: int*;
}

// func f906() {
//    u1 := IntOrPtr906{i = 42};
//    u2 := IntOrPtr906{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i906: int;

struct Vector906 {
    x: int;
    y: int;
}

func fact_iter906(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec906(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec906(n-1);
    }
}

const n906 = 1 + sizeof(p906);

var p906: T906*;

struct T906 {
    a: int[n906];
}


func example_test907(): int {
    return fact_rec907(10) == fact_iter907(10);
}

union IntOrPtr907 {
    i: int;
    p: int*;
}

// func f907() {
//    u1 := IntOrPtr907{i = 42};
//    u2 := IntOrPtr907{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i907: int;

struct Vector907 {
    x: int;
    y: int;
}

func fact_iter907(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec907(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec907(n-1);
    }
}

const n907 = 1 + sizeof(p907);

var p907: T907*;

struct T907 {
    a: int[n907];
}


func example_test908(): int {
    return fact_rec908(10) == fact_iter908(10);
}

union IntOrPtr908 {
    i: int;
    p: int*;
}

// func f908() {
//    u1 := IntOrPtr908{i = 42};
//    u2 := IntOrPtr908{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i908: int;

struct Vector908 {
    x: int;
    y: int;
}

func fact_iter908(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec908(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec908(n-1);
    }
}

const n908 = 1 + sizeof(p908);

var p908: T908*;

struct T908 {
    a: int[n908];
}


func example_test909(): int {
    return fact_rec909(10) == fact_iter909(10);
}

union IntOrPtr909 {
    i: int;
    p: int*;
}

// func f909() {
//    u1 := IntOrPtr909{i = 42};
//    u2 := IntOrPtr909{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i909: int;

struct Vector909 {
    x: int;
    y: int;
}

func fact_iter909(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec909(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec909(n-1);
    }
}

const n909 = 1 + sizeof(p909);

var p909: T909*;

struct T909 {
    a: int[n909];
}


func example_test910(): int {
    return fact_rec910(10) == fact_iter910(10);
}

union IntOrPtr910 {
    i: int;
    p: int*;
}

// func f910() {
//    u1 := IntOrPtr910{i = 42};
//    u2 := IntOrPtr910{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i910: int;

struct Vector910 {
    x: int;
    y: int;
}

func fact_iter910(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec910(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec910(n-1);
    }
}

const n910 = 1 + sizeof(p910);

var p910: T910*;

struct T910 {
    a: int[n910];
}


func example_test911(): int {
    return fact_rec911(10) == fact_iter911(10);
}

union IntOrPtr911 {
    i: int;
    p: int*;
}

// func f911() {
//    u1 := IntOrPtr911{i = 42};
//    u2 := IntOrPtr911{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i911: int;

struct Vector911 {
    x: int;
    y: int;
}

func fact_iter911(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec911(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec911(n-1);
    }
}

const n911 = 1 + sizeof(p911);

var p911: T911*;

struct T911 {
    a: int[n911];
}


func example_test912(): int {
    return fact_rec912(10) == fact_iter912(10);
}

union IntOrPtr912 {
    i: int;
    p: int*;
}

// func f912() {
//    u1 := IntOrPtr912{i = 42};
//    u2 := IntOrPtr912{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i912: int;

struct Vector912 {
    x: int;
    y: int;
}

func fact_iter912(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec912(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec912(n-1);
    }
}

const n912 = 1 + sizeof(p912);

var p912: T912*;

struct T912 {
    a: int[n912];
}


func example_test913(): int {
    return fact_rec913(10) == fact_iter913(10);
}

union IntOrPtr913 {
    i: int;
    p: int*;
}

// func f913() {
//    u1 := IntOrPtr913{i = 42};
//    u2 := IntOrPtr913{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i913: int;

struct Vector913 {
    x: int;
    y: int;
}

func fact_iter913(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec913(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec913(n-1);
    }
}

const n913 = 1 + sizeof(p913);

var p913: T913*;

struct T913 {
    a: int[n913];
}


func example_test914(): int {
    return fact_rec914(10) == fact_iter914(10);
}

union IntOrPtr914 {
    i: int;
    p: int*;
}

// func f914() {
//    u1 := IntOrPtr914{i = 42};
//    u2 := IntOrPtr914{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i914: int;

struct Vector914 {
    x: int;
    y: int;
}

func fact_iter914(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec914(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec914(n-1);
    }
}

const n914 = 1 + sizeof(p914);

var p914: T914*;

struct T914 {
    a: int[n914];
}


func example_test915(): int {
    return fact_rec915(10) == fact_iter915(10);
}

union IntOrPtr915 {
    i: int;
    p: int*;
}

// func f915() {
//    u1 := IntOrPtr915{i = 42};
//    u2 := IntOrPtr915{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i915: int;

struct Vector915 {
    x: int;
    y: int;
}

func fact_iter915(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec915(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec915(n-1);
    }
}

const n915 = 1 + sizeof(p915);

var p915: T915*;

struct T915 {
    a: int[n915];
}


func example_test916(): int {
    return fact_rec916(10) == fact_iter916(10);
}

union IntOrPtr916 {
    i: int;
    p: int*;
}

// func f916() {
//    u1 := IntOrPtr916{i = 42};
//    u2 := IntOrPtr916{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i916: int;

struct Vector916 {
    x: int;
    y: int;
}

func fact_iter916(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec916(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec916(n-1);
    }
}

const n916 = 1 + sizeof(p916);

var p916: T916*;

struct T916 {
    a: int[n916];
}


func example_test917(): int {
    return fact_rec917(10) == fact_iter917(10);
}

union IntOrPtr917 {
    i: int;
    p: int*;
}

// func f917() {
//    u1 := IntOrPtr917{i = 42};
//    u2 := IntOrPtr917{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i917: int;

struct Vector917 {
    x: int;
    y: int;
}

func fact_iter917(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec917(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec917(n-1);
    }
}

const n917 = 1 + sizeof(p917);

var p917: T917*;

struct T917 {
    a: int[n917];
}


func example_test918(): int {
    return fact_rec918(10) == fact_iter918(10);
}

union IntOrPtr918 {
    i: int;
    p: int*;
}

// func f918() {
//    u1 := IntOrPtr918{i = 42};
//    u2 := IntOrPtr918{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i918: int;

struct Vector918 {
    x: int;
    y: int;
}

func fact_iter918(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec918(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec918(n-1);
    }
}

const n918 = 1 + sizeof(p918);

var p918: T918*;

struct T918 {
    a: int[n918];
}


func example_test919(): int {
    return fact_rec919(10) == fact_iter919(10);
}

union IntOrPtr919 {
    i: int;
    p: int*;
}

// func f919() {
//    u1 := IntOrPtr919{i = 42};
//    u2 := IntOrPtr919{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i919: int;

struct Vector919 {
    x: int;
    y: int;
}

func fact_iter919(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec919(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec919(n-1);
    }
}

const n919 = 1 + sizeof(p919);

var p919: T919*;

struct T919 {
    a: int[n919];
}


func example_test920(): int {
    return fact_rec920(10) == fact_iter920(10);
}

union IntOrPtr920 {
    i: int;
    p: int*;
}

// func f920() {
//    u1 := IntOrPtr920{i = 42};
//    u2 := IntOrPtr920{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i920: int;

struct Vector920 {
    x: int;
    y: int;
}

func fact_iter920(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec920(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec920(n-1);
    }
}

const n920 = 1 + sizeof(p920);

var p920: T920*;

struct T920 {
    a: int[n920];
}


func example_test921(): int {
    return fact_rec921(10) == fact_iter921(10);
}

union IntOrPtr921 {
    i: int;
    p: int*;
}

// func f921() {
//    u1 := IntOrPtr921{i = 42};
//    u2 := IntOrPtr921{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i921: int;

struct Vector921 {
    x: int;
    y: int;
}

func fact_iter921(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec921(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec921(n-1);
    }
}

const n921 = 1 + sizeof(p921);

var p921: T921*;

struct T921 {
    a: int[n921];
}


func example_test922(): int {
    return fact_rec922(10) == fact_iter922(10);
}

union IntOrPtr922 {
    i: int;
    p: int*;
}

// func f922() {
//    u1 := IntOrPtr922{i = 42};
//    u2 := IntOrPtr922{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i922: int;

struct Vector922 {
    x: int;
    y: int;
}

func fact_iter922(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec922(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec922(n-1);
    }
}

const n922 = 1 + sizeof(p922);

var p922: T922*;

struct T922 {
    a: int[n922];
}


func example_test923(): int {
    return fact_rec923(10) == fact_iter923(10);
}

union IntOrPtr923 {
    i: int;
    p: int*;
}

// func f923() {
//    u1 := IntOrPtr923{i = 42};
//    u2 := IntOrPtr923{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i923: int;

struct Vector923 {
    x: int;
    y: int;
}

func fact_iter923(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec923(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec923(n-1);
    }
}

const n923 = 1 + sizeof(p923);

var p923: T923*;

struct T923 {
    a: int[n923];
}


func example_test924(): int {
    return fact_rec924(10) == fact_iter924(10);
}

union IntOrPtr924 {
    i: int;
    p: int*;
}

// func f924() {
//    u1 := IntOrPtr924{i = 42};
//    u2 := IntOrPtr924{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i924: int;

struct Vector924 {
    x: int;
    y: int;
}

func fact_iter924(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec924(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec924(n-1);
    }
}

const n924 = 1 + sizeof(p924);

var p924: T924*;

struct T924 {
    a: int[n924];
}


func example_test925(): int {
    return fact_rec925(10) == fact_iter925(10);
}

union IntOrPtr925 {
    i: int;
    p: int*;
}

// func f925() {
//    u1 := IntOrPtr925{i = 42};
//    u2 := IntOrPtr925{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i925: int;

struct Vector925 {
    x: int;
    y: int;
}

func fact_iter925(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec925(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec925(n-1);
    }
}

const n925 = 1 + sizeof(p925);

var p925: T925*;

struct T925 {
    a: int[n925];
}


func example_test926(): int {
    return fact_rec926(10) == fact_iter926(10);
}

union IntOrPtr926 {
    i: int;
    p: int*;
}

// func f926() {
//    u1 := IntOrPtr926{i = 42};
//    u2 := IntOrPtr926{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i926: int;

struct Vector926 {
    x: int;
    y: int;
}

func fact_iter926(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec926(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec926(n-1);
    }
}

const n926 = 1 + sizeof(p926);

var p926: T926*;

struct T926 {
    a: int[n926];
}


func example_test927(): int {
    return fact_rec927(10) == fact_iter927(10);
}

union IntOrPtr927 {
    i: int;
    p: int*;
}

// func f927() {
//    u1 := IntOrPtr927{i = 42};
//    u2 := IntOrPtr927{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i927: int;

struct Vector927 {
    x: int;
    y: int;
}

func fact_iter927(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec927(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec927(n-1);
    }
}

const n927 = 1 + sizeof(p927);

var p927: T927*;

struct T927 {
    a: int[n927];
}


func example_test928(): int {
    return fact_rec928(10) == fact_iter928(10);
}

union IntOrPtr928 {
    i: int;
    p: int*;
}

// func f928() {
//    u1 := IntOrPtr928{i = 42};
//    u2 := IntOrPtr928{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i928: int;

struct Vector928 {
    x: int;
    y: int;
}

func fact_iter928(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec928(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec928(n-1);
    }
}

const n928 = 1 + sizeof(p928);

var p928: T928*;

struct T928 {
    a: int[n928];
}


func example_test929(): int {
    return fact_rec929(10) == fact_iter929(10);
}

union IntOrPtr929 {
    i: int;
    p: int*;
}

// func f929() {
//    u1 := IntOrPtr929{i = 42};
//    u2 := IntOrPtr929{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i929: int;

struct Vector929 {
    x: int;
    y: int;
}

func fact_iter929(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec929(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec929(n-1);
    }
}

const n929 = 1 + sizeof(p929);

var p929: T929*;

struct T929 {
    a: int[n929];
}


func example_test930(): int {
    return fact_rec930(10) == fact_iter930(10);
}

union IntOrPtr930 {
    i: int;
    p: int*;
}

// func f930() {
//    u1 := IntOrPtr930{i = 42};
//    u2 := IntOrPtr930{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i930: int;

struct Vector930 {
    x: int;
    y: int;
}

func fact_iter930(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec930(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec930(n-1);
    }
}

const n930 = 1 + sizeof(p930);

var p930: T930*;

struct T930 {
    a: int[n930];
}


func example_test931(): int {
    return fact_rec931(10) == fact_iter931(10);
}

union IntOrPtr931 {
    i: int;
    p: int*;
}

// func f931() {
//    u1 := IntOrPtr931{i = 42};
//    u2 := IntOrPtr931{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i931: int;

struct Vector931 {
    x: int;
    y: int;
}

func fact_iter931(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec931(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec931(n-1);
    }
}

const n931 = 1 + sizeof(p931);

var p931: T931*;

struct T931 {
    a: int[n931];
}


func example_test932(): int {
    return fact_rec932(10) == fact_iter932(10);
}

union IntOrPtr932 {
    i: int;
    p: int*;
}

// func f932() {
//    u1 := IntOrPtr932{i = 42};
//    u2 := IntOrPtr932{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i932: int;

struct Vector932 {
    x: int;
    y: int;
}

func fact_iter932(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec932(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec932(n-1);
    }
}

const n932 = 1 + sizeof(p932);

var p932: T932*;

struct T932 {
    a: int[n932];
}


func example_test933(): int {
    return fact_rec933(10) == fact_iter933(10);
}

union IntOrPtr933 {
    i: int;
    p: int*;
}

// func f933() {
//    u1 := IntOrPtr933{i = 42};
//    u2 := IntOrPtr933{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i933: int;

struct Vector933 {
    x: int;
    y: int;
}

func fact_iter933(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec933(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec933(n-1);
    }
}

const n933 = 1 + sizeof(p933);

var p933: T933*;

struct T933 {
    a: int[n933];
}


func example_test934(): int {
    return fact_rec934(10) == fact_iter934(10);
}

union IntOrPtr934 {
    i: int;
    p: int*;
}

// func f934() {
//    u1 := IntOrPtr934{i = 42};
//    u2 := IntOrPtr934{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i934: int;

struct Vector934 {
    x: int;
    y: int;
}

func fact_iter934(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec934(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec934(n-1);
    }
}

const n934 = 1 + sizeof(p934);

var p934: T934*;

struct T934 {
    a: int[n934];
}


func example_test935(): int {
    return fact_rec935(10) == fact_iter935(10);
}

union IntOrPtr935 {
    i: int;
    p: int*;
}

// func f935() {
//    u1 := IntOrPtr935{i = 42};
//    u2 := IntOrPtr935{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i935: int;

struct Vector935 {
    x: int;
    y: int;
}

func fact_iter935(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec935(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec935(n-1);
    }
}

const n935 = 1 + sizeof(p935);

var p935: T935*;

struct T935 {
    a: int[n935];
}


func example_test936(): int {
    return fact_rec936(10) == fact_iter936(10);
}

union IntOrPtr936 {
    i: int;
    p: int*;
}

// func f936() {
//    u1 := IntOrPtr936{i = 42};
//    u2 := IntOrPtr936{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i936: int;

struct Vector936 {
    x: int;
    y: int;
}

func fact_iter936(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec936(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec936(n-1);
    }
}

const n936 = 1 + sizeof(p936);

var p936: T936*;

struct T936 {
    a: int[n936];
}


func example_test937(): int {
    return fact_rec937(10) == fact_iter937(10);
}

union IntOrPtr937 {
    i: int;
    p: int*;
}

// func f937() {
//    u1 := IntOrPtr937{i = 42};
//    u2 := IntOrPtr937{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i937: int;

struct Vector937 {
    x: int;
    y: int;
}

func fact_iter937(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec937(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec937(n-1);
    }
}

const n937 = 1 + sizeof(p937);

var p937: T937*;

struct T937 {
    a: int[n937];
}


func example_test938(): int {
    return fact_rec938(10) == fact_iter938(10);
}

union IntOrPtr938 {
    i: int;
    p: int*;
}

// func f938() {
//    u1 := IntOrPtr938{i = 42};
//    u2 := IntOrPtr938{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i938: int;

struct Vector938 {
    x: int;
    y: int;
}

func fact_iter938(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec938(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec938(n-1);
    }
}

const n938 = 1 + sizeof(p938);

var p938: T938*;

struct T938 {
    a: int[n938];
}


func example_test939(): int {
    return fact_rec939(10) == fact_iter939(10);
}

union IntOrPtr939 {
    i: int;
    p: int*;
}

// func f939() {
//    u1 := IntOrPtr939{i = 42};
//    u2 := IntOrPtr939{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i939: int;

struct Vector939 {
    x: int;
    y: int;
}

func fact_iter939(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec939(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec939(n-1);
    }
}

const n939 = 1 + sizeof(p939);

var p939: T939*;

struct T939 {
    a: int[n939];
}


func example_test940(): int {
    return fact_rec940(10) == fact_iter940(10);
}

union IntOrPtr940 {
    i: int;
    p: int*;
}

// func f940() {
//    u1 := IntOrPtr940{i = 42};
//    u2 := IntOrPtr940{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i940: int;

struct Vector940 {
    x: int;
    y: int;
}

func fact_iter940(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec940(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec940(n-1);
    }
}

const n940 = 1 + sizeof(p940);

var p940: T940*;

struct T940 {
    a: int[n940];
}


func example_test941(): int {
    return fact_rec941(10) == fact_iter941(10);
}

union IntOrPtr941 {
    i: int;
    p: int*;
}

// func f941() {
//    u1 := IntOrPtr941{i = 42};
//    u2 := IntOrPtr941{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i941: int;

struct Vector941 {
    x: int;
    y: int;
}

func fact_iter941(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec941(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec941(n-1);
    }
}

const n941 = 1 + sizeof(p941);

var p941: T941*;

struct T941 {
    a: int[n941];
}


func example_test942(): int {
    return fact_rec942(10) == fact_iter942(10);
}

union IntOrPtr942 {
    i: int;
    p: int*;
}

// func f942() {
//    u1 := IntOrPtr942{i = 42};
//    u2 := IntOrPtr942{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i942: int;

struct Vector942 {
    x: int;
    y: int;
}

func fact_iter942(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec942(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec942(n-1);
    }
}

const n942 = 1 + sizeof(p942);

var p942: T942*;

struct T942 {
    a: int[n942];
}


func example_test943(): int {
    return fact_rec943(10) == fact_iter943(10);
}

union IntOrPtr943 {
    i: int;
    p: int*;
}

// func f943() {
//    u1 := IntOrPtr943{i = 42};
//    u2 := IntOrPtr943{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i943: int;

struct Vector943 {
    x: int;
    y: int;
}

func fact_iter943(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec943(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec943(n-1);
    }
}

const n943 = 1 + sizeof(p943);

var p943: T943*;

struct T943 {
    a: int[n943];
}


func example_test944(): int {
    return fact_rec944(10) == fact_iter944(10);
}

union IntOrPtr944 {
    i: int;
    p: int*;
}

// func f944() {
//    u1 := IntOrPtr944{i = 42};
//    u2 := IntOrPtr944{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i944: int;

struct Vector944 {
    x: int;
    y: int;
}

func fact_iter944(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec944(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec944(n-1);
    }
}

const n944 = 1 + sizeof(p944);

var p944: T944*;

struct T944 {
    a: int[n944];
}


func example_test945(): int {
    return fact_rec945(10) == fact_iter945(10);
}

union IntOrPtr945 {
    i: int;
    p: int*;
}

// func f945() {
//    u1 := IntOrPtr945{i = 42};
//    u2 := IntOrPtr945{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i945: int;

struct Vector945 {
    x: int;
    y: int;
}

func fact_iter945(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec945(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec945(n-1);
    }
}

const n945 = 1 + sizeof(p945);

var p945: T945*;

struct T945 {
    a: int[n945];
}


func example_test946(): int {
    return fact_rec946(10) == fact_iter946(10);
}

union IntOrPtr946 {
    i: int;
    p: int*;
}

// func f946() {
//    u1 := IntOrPtr946{i = 42};
//    u2 := IntOrPtr946{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i946: int;

struct Vector946 {
    x: int;
    y: int;
}

func fact_iter946(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec946(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec946(n-1);
    }
}

const n946 = 1 + sizeof(p946);

var p946: T946*;

struct T946 {
    a: int[n946];
}


func example_test947(): int {
    return fact_rec947(10) == fact_iter947(10);
}

union IntOrPtr947 {
    i: int;
    p: int*;
}

// func f947() {
//    u1 := IntOrPtr947{i = 42};
//    u2 := IntOrPtr947{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i947: int;

struct Vector947 {
    x: int;
    y: int;
}

func fact_iter947(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec947(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec947(n-1);
    }
}

const n947 = 1 + sizeof(p947);

var p947: T947*;

struct T947 {
    a: int[n947];
}


func example_test948(): int {
    return fact_rec948(10) == fact_iter948(10);
}

union IntOrPtr948 {
    i: int;
    p: int*;
}

// func f948() {
//    u1 := IntOrPtr948{i = 42};
//    u2 := IntOrPtr948{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i948: int;

struct Vector948 {
    x: int;
    y: int;
}

func fact_iter948(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec948(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec948(n-1);
    }
}

const n948 = 1 + sizeof(p948);

var p948: T948*;

struct T948 {
    a: int[n948];
}


func example_test949(): int {
    return fact_rec949(10) == fact_iter949(10);
}

union IntOrPtr949 {
    i: int;
    p: int*;
}

// func f949() {
//    u1 := IntOrPtr949{i = 42};
//    u2 := IntOrPtr949{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i949: int;

struct Vector949 {
    x: int;
    y: int;
}

func fact_iter949(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec949(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec949(n-1);
    }
}

const n949 = 1 + sizeof(p949);

var p949: T949*;

struct T949 {
    a: int[n949];
}


func example_test950(): int {
    return fact_rec950(10) == fact_iter950(10);
}

union IntOrPtr950 {
    i: int;
    p: int*;
}

// func f950() {
//    u1 := IntOrPtr950{i = 42};
//    u2 := IntOrPtr950{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i950: int;

struct Vector950 {
    x: int;
    y: int;
}

func fact_iter950(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec950(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec950(n-1);
    }
}

const n950 = 1 + sizeof(p950);

var p950: T950*;

struct T950 {
    a: int[n950];
}


func example_test951(): int {
    return fact_rec951(10) == fact_iter951(10);
}

union IntOrPtr951 {
    i: int;
    p: int*;
}

// func f951() {
//    u1 := IntOrPtr951{i = 42};
//    u2 := IntOrPtr951{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i951: int;

struct Vector951 {
    x: int;
    y: int;
}

func fact_iter951(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec951(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec951(n-1);
    }
}

const n951 = 1 + sizeof(p951);

var p951: T951*;

struct T951 {
    a: int[n951];
}


func example_test952(): int {
    return fact_rec952(10) == fact_iter952(10);
}

union IntOrPtr952 {
    i: int;
    p: int*;
}

// func f952() {
//    u1 := IntOrPtr952{i = 42};
//    u2 := IntOrPtr952{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i952: int;

struct Vector952 {
    x: int;
    y: int;
}

func fact_iter952(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec952(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec952(n-1);
    }
}

const n952 = 1 + sizeof(p952);

var p952: T952*;

struct T952 {
    a: int[n952];
}


func example_test953(): int {
    return fact_rec953(10) == fact_iter953(10);
}

union IntOrPtr953 {
    i: int;
    p: int*;
}

// func f953() {
//    u1 := IntOrPtr953{i = 42};
//    u2 := IntOrPtr953{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i953: int;

struct Vector953 {
    x: int;
    y: int;
}

func fact_iter953(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec953(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec953(n-1);
    }
}

const n953 = 1 + sizeof(p953);

var p953: T953*;

struct T953 {
    a: int[n953];
}


func example_test954(): int {
    return fact_rec954(10) == fact_iter954(10);
}

union IntOrPtr954 {
    i: int;
    p: int*;
}

// func f954() {
//    u1 := IntOrPtr954{i = 42};
//    u2 := IntOrPtr954{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i954: int;

struct Vector954 {
    x: int;
    y: int;
}

func fact_iter954(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec954(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec954(n-1);
    }
}

const n954 = 1 + sizeof(p954);

var p954: T954*;

struct T954 {
    a: int[n954];
}


func example_test955(): int {
    return fact_rec955(10) == fact_iter955(10);
}

union IntOrPtr955 {
    i: int;
    p: int*;
}

// func f955() {
//    u1 := IntOrPtr955{i = 42};
//    u2 := IntOrPtr955{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i955: int;

struct Vector955 {
    x: int;
    y: int;
}

func fact_iter955(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec955(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec955(n-1);
    }
}

const n955 = 1 + sizeof(p955);

var p955: T955*;

struct T955 {
    a: int[n955];
}


func example_test956(): int {
    return fact_rec956(10) == fact_iter956(10);
}

union IntOrPtr956 {
    i: int;
    p: int*;
}

// func f956() {
//    u1 := IntOrPtr956{i = 42};
//    u2 := IntOrPtr956{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i956: int;

struct Vector956 {
    x: int;
    y: int;
}

func fact_iter956(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec956(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec956(n-1);
    }
}

const n956 = 1 + sizeof(p956);

var p956: T956*;

struct T956 {
    a: int[n956];
}


func example_test957(): int {
    return fact_rec957(10) == fact_iter957(10);
}

union IntOrPtr957 {
    i: int;
    p: int*;
}

// func f957() {
//    u1 := IntOrPtr957{i = 42};
//    u2 := IntOrPtr957{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i957: int;

struct Vector957 {
    x: int;
    y: int;
}

func fact_iter957(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec957(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec957(n-1);
    }
}

const n957 = 1 + sizeof(p957);

var p957: T957*;

struct T957 {
    a: int[n957];
}


func example_test958(): int {
    return fact_rec958(10) == fact_iter958(10);
}

union IntOrPtr958 {
    i: int;
    p: int*;
}

// func f958() {
//    u1 := IntOrPtr958{i = 42};
//    u2 := IntOrPtr958{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i958: int;

struct Vector958 {
    x: int;
    y: int;
}

func fact_iter958(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec958(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec958(n-1);
    }
}

const n958 = 1 + sizeof(p958);

var p958: T958*;

struct T958 {
    a: int[n958];
}


func example_test959(): int {
    return fact_rec959(10) == fact_iter959(10);
}

union IntOrPtr959 {
    i: int;
    p: int*;
}

// func f959() {
//    u1 := IntOrPtr959{i = 42};
//    u2 := IntOrPtr959{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i959: int;

struct Vector959 {
    x: int;
    y: int;
}

func fact_iter959(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec959(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec959(n-1);
    }
}

const n959 = 1 + sizeof(p959);

var p959: T959*;

struct T959 {
    a: int[n959];
}


func example_test960(): int {
    return fact_rec960(10) == fact_iter960(10);
}

union IntOrPtr960 {
    i: int;
    p: int*;
}

// func f960() {
//    u1 := IntOrPtr960{i = 42};
//    u2 := IntOrPtr960{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i960: int;

struct Vector960 {
    x: int;
    y: int;
}

func fact_iter960(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec960(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec960(n-1);
    }
}

const n960 = 1 + sizeof(p960);

var p960: T960*;

struct T960 {
    a: int[n960];
}


func example_test961(): int {
    return fact_rec961(10) == fact_iter961(10);
}

union IntOrPtr961 {
    i: int;
    p: int*;
}

// func f961() {
//    u1 := IntOrPtr961{i = 42};
//    u2 := IntOrPtr961{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i961: int;

struct Vector961 {
    x: int;
    y: int;
}

func fact_iter961(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec961(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec961(n-1);
    }
}

const n961 = 1 + sizeof(p961);

var p961: T961*;

struct T961 {
    a: int[n961];
}


func example_test962(): int {
    return fact_rec962(10) == fact_iter962(10);
}

union IntOrPtr962 {
    i: int;
    p: int*;
}

// func f962() {
//    u1 := IntOrPtr962{i = 42};
//    u2 := IntOrPtr962{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i962: int;

struct Vector962 {
    x: int;
    y: int;
}

func fact_iter962(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec962(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec962(n-1);
    }
}

const n962 = 1 + sizeof(p962);

var p962: T962*;

struct T962 {
    a: int[n962];
}


func example_test963(): int {
    return fact_rec963(10) == fact_iter963(10);
}

union IntOrPtr963 {
    i: int;
    p: int*;
}

// func f963() {
//    u1 := IntOrPtr963{i = 42};
//    u2 := IntOrPtr963{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i963: int;

struct Vector963 {
    x: int;
    y: int;
}

func fact_iter963(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec963(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec963(n-1);
    }
}

const n963 = 1 + sizeof(p963);

var p963: T963*;

struct T963 {
    a: int[n963];
}


func example_test964(): int {
    return fact_rec964(10) == fact_iter964(10);
}

union IntOrPtr964 {
    i: int;
    p: int*;
}

// func f964() {
//    u1 := IntOrPtr964{i = 42};
//    u2 := IntOrPtr964{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i964: int;

struct Vector964 {
    x: int;
    y: int;
}

func fact_iter964(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec964(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec964(n-1);
    }
}

const n964 = 1 + sizeof(p964);

var p964: T964*;

struct T964 {
    a: int[n964];
}


func example_test965(): int {
    return fact_rec965(10) == fact_iter965(10);
}

union IntOrPtr965 {
    i: int;
    p: int*;
}

// func f965() {
//    u1 := IntOrPtr965{i = 42};
//    u2 := IntOrPtr965{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i965: int;

struct Vector965 {
    x: int;
    y: int;
}

func fact_iter965(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec965(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec965(n-1);
    }
}

const n965 = 1 + sizeof(p965);

var p965: T965*;

struct T965 {
    a: int[n965];
}


func example_test966(): int {
    return fact_rec966(10) == fact_iter966(10);
}

union IntOrPtr966 {
    i: int;
    p: int*;
}

// func f966() {
//    u1 := IntOrPtr966{i = 42};
//    u2 := IntOrPtr966{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i966: int;

struct Vector966 {
    x: int;
    y: int;
}

func fact_iter966(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec966(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec966(n-1);
    }
}

const n966 = 1 + sizeof(p966);

var p966: T966*;

struct T966 {
    a: int[n966];
}


func example_test967(): int {
    return fact_rec967(10) == fact_iter967(10);
}

union IntOrPtr967 {
    i: int;
    p: int*;
}

// func f967() {
//    u1 := IntOrPtr967{i = 42};
//    u2 := IntOrPtr967{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i967: int;

struct Vector967 {
    x: int;
    y: int;
}

func fact_iter967(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec967(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec967(n-1);
    }
}

const n967 = 1 + sizeof(p967);

var p967: T967*;

struct T967 {
    a: int[n967];
}


func example_test968(): int {
    return fact_rec968(10) == fact_iter968(10);
}

union IntOrPtr968 {
    i: int;
    p: int*;
}

// func f968() {
//    u1 := IntOrPtr968{i = 42};
//    u2 := IntOrPtr968{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i968: int;

struct Vector968 {
    x: int;
    y: int;
}

func fact_iter968(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec968(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec968(n-1);
    }
}

const n968 = 1 + sizeof(p968);

var p968: T968*;

struct T968 {
    a: int[n968];
}


func example_test969(): int {
    return fact_rec969(10) == fact_iter969(10);
}

union IntOrPtr969 {
    i: int;
    p: int*;
}

// func f969() {
//    u1 := IntOrPtr969{i = 42};
//    u2 := IntOrPtr969{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i969: int;

struct Vector969 {
    x: int;
    y: int;
}

func fact_iter969(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec969(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec969(n-1);
    }
}

const n969 = 1 + sizeof(p969);

var p969: T969*;

struct T969 {
    a: int[n969];
}


func example_test970(): int {
    return fact_rec970(10) == fact_iter970(10);
}

union IntOrPtr970 {
    i: int;
    p: int*;
}

// func f970() {
//    u1 := IntOrPtr970{i = 42};
//    u2 := IntOrPtr970{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i970: int;

struct Vector970 {
    x: int;
    y: int;
}

func fact_iter970(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec970(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec970(n-1);
    }
}

const n970 = 1 + sizeof(p970);

var p970: T970*;

struct T970 {
    a: int[n970];
}


func example_test971(): int {
    return fact_rec971(10) == fact_iter971(10);
}

union IntOrPtr971 {
    i: int;
    p: int*;
}

// func f971() {
//    u1 := IntOrPtr971{i = 42};
//    u2 := IntOrPtr971{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i971: int;

struct Vector971 {
    x: int;
    y: int;
}

func fact_iter971(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec971(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec971(n-1);
    }
}

const n971 = 1 + sizeof(p971);

var p971: T971*;

struct T971 {
    a: int[n971];
}


func example_test972(): int {
    return fact_rec972(10) == fact_iter972(10);
}

union IntOrPtr972 {
    i: int;
    p: int*;
}

// func f972() {
//    u1 := IntOrPtr972{i = 42};
//    u2 := IntOrPtr972{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i972: int;

struct Vector972 {
    x: int;
    y: int;
}

func fact_iter972(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec972(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec972(n-1);
    }
}

const n972 = 1 + sizeof(p972);

var p972: T972*;

struct T972 {
    a: int[n972];
}


func example_test973(): int {
    return fact_rec973(10) == fact_iter973(10);
}

union IntOrPtr973 {
    i: int;
    p: int*;
}

// func f973() {
//    u1 := IntOrPtr973{i = 42};
//    u2 := IntOrPtr973{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i973: int;

struct Vector973 {
    x: int;
    y: int;
}

func fact_iter973(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec973(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec973(n-1);
    }
}

const n973 = 1 + sizeof(p973);

var p973: T973*;

struct T973 {
    a: int[n973];
}


func example_test974(): int {
    return fact_rec974(10) == fact_iter974(10);
}

union IntOrPtr974 {
    i: int;
    p: int*;
}

// func f974() {
//    u1 := IntOrPtr974{i = 42};
//    u2 := IntOrPtr974{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i974: int;

struct Vector974 {
    x: int;
    y: int;
}

func fact_iter974(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec974(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec974(n-1);
    }
}

const n974 = 1 + sizeof(p974);

var p974: T974*;

struct T974 {
    a: int[n974];
}


func example_test975(): int {
    return fact_rec975(10) == fact_iter975(10);
}

union IntOrPtr975 {
    i: int;
    p: int*;
}

// func f975() {
//    u1 := IntOrPtr975{i = 42};
//    u2 := IntOrPtr975{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i975: int;

struct Vector975 {
    x: int;
    y: int;
}

func fact_iter975(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec975(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec975(n-1);
    }
}

const n975 = 1 + sizeof(p975);

var p975: T975*;

struct T975 {
    a: int[n975];
}


func example_test976(): int {
    return fact_rec976(10) == fact_iter976(10);
}

union IntOrPtr976 {
    i: int;
    p: int*;
}

// func f976() {
//    u1 := IntOrPtr976{i = 42};
//    u2 := IntOrPtr976{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i976: int;

struct Vector976 {
    x: int;
    y: int;
}

func fact_iter976(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec976(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec976(n-1);
    }
}

const n976 = 1 + sizeof(p976);

var p976: T976*;

struct T976 {
    a: int[n976];
}


func example_test977(): int {
    return fact_rec977(10) == fact_iter977(10);
}

union IntOrPtr977 {
    i: int;
    p: int*;
}

// func f977() {
//    u1 := IntOrPtr977{i = 42};
//    u2 := IntOrPtr977{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i977: int;

struct Vector977 {
    x: int;
    y: int;
}

func fact_iter977(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec977(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec977(n-1);
    }
}

const n977 = 1 + sizeof(p977);

var p977: T977*;

struct T977 {
    a: int[n977];
}


func example_test978(): int {
    return fact_rec978(10) == fact_iter978(10);
}

union IntOrPtr978 {
    i: int;
    p: int*;
}

// func f978() {
//    u1 := IntOrPtr978{i = 42};
//    u2 := IntOrPtr978{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i978: int;

struct Vector978 {
    x: int;
    y: int;
}

func fact_iter978(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec978(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec978(n-1);
    }
}

const n978 = 1 + sizeof(p978);

var p978: T978*;

struct T978 {
    a: int[n978];
}


func example_test979(): int {
    return fact_rec979(10) == fact_iter979(10);
}

union IntOrPtr979 {
    i: int;
    p: int*;
}

// func f979() {
//    u1 := IntOrPtr979{i = 42};
//    u2 := IntOrPtr979{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i979: int;

struct Vector979 {
    x: int;
    y: int;
}

func fact_iter979(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec979(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec979(n-1);
    }
}

const n979 = 1 + sizeof(p979);

var p979: T979*;

struct T979 {
    a: int[n979];
}


func example_test980(): int {
    return fact_rec980(10) == fact_iter980(10);
}

union IntOrPtr980 {
    i: int;
    p: int*;
}

// func f980() {
//    u1 := IntOrPtr980{i = 42};
//    u2 := IntOrPtr980{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i980: int;

struct Vector980 {
    x: int;
    y: int;
}

func fact_iter980(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec980(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec980(n-1);
    }
}

const n980 = 1 + sizeof(p980);

var p980: T980*;

struct T980 {
    a: int[n980];
}


func example_test981(): int {
    return fact_rec981(10) == fact_iter981(10);
}

union IntOrPtr981 {
    i: int;
    p: int*;
}

// func f981() {
//    u1 := IntOrPtr981{i = 42};
//    u2 := IntOrPtr981{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i981: int;

struct Vector981 {
    x: int;
    y: int;
}

func fact_iter981(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec981(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec981(n-1);
    }
}

const n981 = 1 + sizeof(p981);

var p981: T981*;

struct T981 {
    a: int[n981];
}


func example_test982(): int {
    return fact_rec982(10) == fact_iter982(10);
}

union IntOrPtr982 {
    i: int;
    p: int*;
}

// func f982() {
//    u1 := IntOrPtr982{i = 42};
//    u2 := IntOrPtr982{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i982: int;

struct Vector982 {
    x: int;
    y: int;
}

func fact_iter982(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec982(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec982(n-1);
    }
}

const n982 = 1 + sizeof(p982);

var p982: T982*;

struct T982 {
    a: int[n982];
}


func example_test983(): int {
    return fact_rec983(10) == fact_iter983(10);
}

union IntOrPtr983 {
    i: int;
    p: int*;
}

// func f983() {
//    u1 := IntOrPtr983{i = 42};
//    u2 := IntOrPtr983{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i983: int;

struct Vector983 {
    x: int;
    y: int;
}

func fact_iter983(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec983(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec983(n-1);
    }
}

const n983 = 1 + sizeof(p983);

var p983: T983*;

struct T983 {
    a: int[n983];
}


func example_test984(): int {
    return fact_rec984(10) == fact_iter984(10);
}

union IntOrPtr984 {
    i: int;
    p: int*;
}

// func f984() {
//    u1 := IntOrPtr984{i = 42};
//    u2 := IntOrPtr984{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i984: int;

struct Vector984 {
    x: int;
    y: int;
}

func fact_iter984(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec984(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec984(n-1);
    }
}

const n984 = 1 + sizeof(p984);

var p984: T984*;

struct T984 {
    a: int[n984];
}


func example_test985(): int {
    return fact_rec985(10) == fact_iter985(10);
}

union IntOrPtr985 {
    i: int;
    p: int*;
}

// func f985() {
//    u1 := IntOrPtr985{i = 42};
//    u2 := IntOrPtr985{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i985: int;

struct Vector985 {
    x: int;
    y: int;
}

func fact_iter985(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec985(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec985(n-1);
    }
}

const n985 = 1 + sizeof(p985);

var p985: T985*;

struct T985 {
    a: int[n985];
}


func example_test986(): int {
    return fact_rec986(10) == fact_iter986(10);
}

union IntOrPtr986 {
    i: int;
    p: int*;
}

// func f986() {
//    u1 := IntOrPtr986{i = 42};
//    u2 := IntOrPtr986{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i986: int;

struct Vector986 {
    x: int;
    y: int;
}

func fact_iter986(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec986(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec986(n-1);
    }
}

const n986 = 1 + sizeof(p986);

var p986: T986*;

struct T986 {
    a: int[n986];
}


func example_test987(): int {
    return fact_rec987(10) == fact_iter987(10);
}

union IntOrPtr987 {
    i: int;
    p: int*;
}

// func f987() {
//    u1 := IntOrPtr987{i = 42};
//    u2 := IntOrPtr987{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i987: int;

struct Vector987 {
    x: int;
    y: int;
}

func fact_iter987(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec987(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec987(n-1);
    }
}

const n987 = 1 + sizeof(p987);

var p987: T987*;

struct T987 {
    a: int[n987];
}


func example_test988(): int {
    return fact_rec988(10) == fact_iter988(10);
}

union IntOrPtr988 {
    i: int;
    p: int*;
}

// func f988() {
//    u1 := IntOrPtr988{i = 42};
//    u2 := IntOrPtr988{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i988: int;

struct Vector988 {
    x: int;
    y: int;
}

func fact_iter988(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec988(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec988(n-1);
    }
}

const n988 = 1 + sizeof(p988);

var p988: T988*;

struct T988 {
    a: int[n988];
}


func example_test989(): int {
    return fact_rec989(10) == fact_iter989(10);
}

union IntOrPtr989 {
    i: int;
    p: int*;
}

// func f989() {
//    u1 := IntOrPtr989{i = 42};
//    u2 := IntOrPtr989{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i989: int;

struct Vector989 {
    x: int;
    y: int;
}

func fact_iter989(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec989(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec989(n-1);
    }
}

const n989 = 1 + sizeof(p989);

var p989: T989*;

struct T989 {
    a: int[n989];
}


func example_test990(): int {
    return fact_rec990(10) == fact_iter990(10);
}

union IntOrPtr990 {
    i: int;
    p: int*;
}

// func f990() {
//    u1 := IntOrPtr990{i = 42};
//    u2 := IntOrPtr990{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i990: int;

struct Vector990 {
    x: int;
    y: int;
}

func fact_iter990(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec990(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec990(n-1);
    }
}

const n990 = 1 + sizeof(p990);

var p990: T990*;

struct T990 {
    a: int[n990];
}


func example_test991(): int {
    return fact_rec991(10) == fact_iter991(10);
}

union IntOrPtr991 {
    i: int;
    p: int*;
}

// func f991() {
//    u1 := IntOrPtr991{i = 42};
//    u2 := IntOrPtr991{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i991: int;

struct Vector991 {
    x: int;
    y: int;
}

func fact_iter991(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec991(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec991(n-1);
    }
}

const n991 = 1 + sizeof(p991);

var p991: T991*;

struct T991 {
    a: int[n991];
}


func example_test992(): int {
    return fact_rec992(10) == fact_iter992(10);
}

union IntOrPtr992 {
    i: int;
    p: int*;
}

// func f992() {
//    u1 := IntOrPtr992{i = 42};
//    u2 := IntOrPtr992{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i992: int;

struct Vector992 {
    x: int;
    y: int;
}

func fact_iter992(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec992(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec992(n-1);
    }
}

const n992 = 1 + sizeof(p992);

var p992: T992*;

struct T992 {
    a: int[n992];
}


func example_test993(): int {
    return fact_rec993(10) == fact_iter993(10);
}

union IntOrPtr993 {
    i: int;
    p: int*;
}

// func f993() {
//    u1 := IntOrPtr993{i = 42};
//    u2 := IntOrPtr993{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i993: int;

struct Vector993 {
    x: int;
    y: int;
}

func fact_iter993(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec993(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec993(n-1);
    }
}

const n993 = 1 + sizeof(p993);

var p993: T993*;

struct T993 {
    a: int[n993];
}


func example_test994(): int {
    return fact_rec994(10) == fact_iter994(10);
}

union IntOrPtr994 {
    i: int;
    p: int*;
}

// func f994() {
//    u1 := IntOrPtr994{i = 42};
//    u2 := IntOrPtr994{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i994: int;

struct Vector994 {
    x: int;
    y: int;
}

func fact_iter994(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec994(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec994(n-1);
    }
}

const n994 = 1 + sizeof(p994);

var p994: T994*;

struct T994 {
    a: int[n994];
}


func example_test995(): int {
    return fact_rec995(10) == fact_iter995(10);
}

union IntOrPtr995 {
    i: int;
    p: int*;
}

// func f995() {
//    u1 := IntOrPtr995{i = 42};
//    u2 := IntOrPtr995{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i995: int;

struct Vector995 {
    x: int;
    y: int;
}

func fact_iter995(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec995(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec995(n-1);
    }
}

const n995 = 1 + sizeof(p995);

var p995: T995*;

struct T995 {
    a: int[n995];
}


func example_test996(): int {
    return fact_rec996(10) == fact_iter996(10);
}

union IntOrPtr996 {
    i: int;
    p: int*;
}

// func f996() {
//    u1 := IntOrPtr996{i = 42};
//    u2 := IntOrPtr996{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i996: int;

struct Vector996 {
    x: int;
    y: int;
}

func fact_iter996(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec996(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec996(n-1);
    }
}

const n996 = 1 + sizeof(p996);

var p996: T996*;

struct T996 {
    a: int[n996];
}


func example_test997(): int {
    return fact_rec997(10) == fact_iter997(10);
}

union IntOrPtr997 {
    i: int;
    p: int*;
}

// func f997() {
//    u1 := IntOrPtr997{i = 42};
//    u2 := IntOrPtr997{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i997: int;

struct Vector997 {
    x: int;
    y: int;
}

func fact_iter997(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec997(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec997(n-1);
    }
}

const n997 = 1 + sizeof(p997);

var p997: T997*;

struct T997 {
    a: int[n997];
}


func example_test998(): int {
    return fact_rec998(10) == fact_iter998(10);
}

union IntOrPtr998 {
    i: int;
    p: int*;
}

// func f998() {
//    u1 := IntOrPtr998{i = 42};
//    u2 := IntOrPtr998{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i998: int;

struct Vector998 {
    x: int;
    y: int;
}

func fact_iter998(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec998(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec998(n-1);
    }
}

const n998 = 1 + sizeof(p998);

var p998: T998*;

struct T998 {
    a: int[n998];
}


func example_test999(): int {
    return fact_rec999(10) == fact_iter999(10);
}

union IntOrPtr999 {
    i: int;
    p: int*;
}

// func f999() {
//    u1 := IntOrPtr999{i = 42};
//    u2 := IntOrPtr999{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i999: int;

struct Vector999 {
    x: int;
    y: int;
}

func fact_iter999(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec999(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec999(n-1);
    }
}

const n999 = 1 + sizeof(p999);

var p999: T999*;

struct T999 {
    a: int[n999];
}


func example_test1000(): int {
    return fact_rec1000(10) == fact_iter1000(10);
}

union IntOrPtr1000 {
    i: int;
    p: int*;
}

// func f1000() {
//    u1 := IntOrPtr1000{i = 42};
//    u2 := IntOrPtr1000{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1000: int;

struct Vector1000 {
    x: int;
    y: int;
}

func fact_iter1000(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1000(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1000(n-1);
    }
}

const n1000 = 1 + sizeof(p1000);

var p1000: T1000*;

struct T1000 {
    a: int[n1000];
}


func example_test1001(): int {
    return fact_rec1001(10) == fact_iter1001(10);
}

union IntOrPtr1001 {
    i: int;
    p: int*;
}

// func f1001() {
//    u1 := IntOrPtr1001{i = 42};
//    u2 := IntOrPtr1001{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1001: int;

struct Vector1001 {
    x: int;
    y: int;
}

func fact_iter1001(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1001(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1001(n-1);
    }
}

const n1001 = 1 + sizeof(p1001);

var p1001: T1001*;

struct T1001 {
    a: int[n1001];
}


func example_test1002(): int {
    return fact_rec1002(10) == fact_iter1002(10);
}

union IntOrPtr1002 {
    i: int;
    p: int*;
}

// func f1002() {
//    u1 := IntOrPtr1002{i = 42};
//    u2 := IntOrPtr1002{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1002: int;

struct Vector1002 {
    x: int;
    y: int;
}

func fact_iter1002(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1002(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1002(n-1);
    }
}

const n1002 = 1 + sizeof(p1002);

var p1002: T1002*;

struct T1002 {
    a: int[n1002];
}


func example_test1003(): int {
    return fact_rec1003(10) == fact_iter1003(10);
}

union IntOrPtr1003 {
    i: int;
    p: int*;
}

// func f1003() {
//    u1 := IntOrPtr1003{i = 42};
//    u2 := IntOrPtr1003{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1003: int;

struct Vector1003 {
    x: int;
    y: int;
}

func fact_iter1003(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1003(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1003(n-1);
    }
}

const n1003 = 1 + sizeof(p1003);

var p1003: T1003*;

struct T1003 {
    a: int[n1003];
}


func example_test1004(): int {
    return fact_rec1004(10) == fact_iter1004(10);
}

union IntOrPtr1004 {
    i: int;
    p: int*;
}

// func f1004() {
//    u1 := IntOrPtr1004{i = 42};
//    u2 := IntOrPtr1004{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1004: int;

struct Vector1004 {
    x: int;
    y: int;
}

func fact_iter1004(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1004(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1004(n-1);
    }
}

const n1004 = 1 + sizeof(p1004);

var p1004: T1004*;

struct T1004 {
    a: int[n1004];
}


func example_test1005(): int {
    return fact_rec1005(10) == fact_iter1005(10);
}

union IntOrPtr1005 {
    i: int;
    p: int*;
}

// func f1005() {
//    u1 := IntOrPtr1005{i = 42};
//    u2 := IntOrPtr1005{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1005: int;

struct Vector1005 {
    x: int;
    y: int;
}

func fact_iter1005(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1005(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1005(n-1);
    }
}

const n1005 = 1 + sizeof(p1005);

var p1005: T1005*;

struct T1005 {
    a: int[n1005];
}


func example_test1006(): int {
    return fact_rec1006(10) == fact_iter1006(10);
}

union IntOrPtr1006 {
    i: int;
    p: int*;
}

// func f1006() {
//    u1 := IntOrPtr1006{i = 42};
//    u2 := IntOrPtr1006{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1006: int;

struct Vector1006 {
    x: int;
    y: int;
}

func fact_iter1006(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1006(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1006(n-1);
    }
}

const n1006 = 1 + sizeof(p1006);

var p1006: T1006*;

struct T1006 {
    a: int[n1006];
}


func example_test1007(): int {
    return fact_rec1007(10) == fact_iter1007(10);
}

union IntOrPtr1007 {
    i: int;
    p: int*;
}

// func f1007() {
//    u1 := IntOrPtr1007{i = 42};
//    u2 := IntOrPtr1007{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1007: int;

struct Vector1007 {
    x: int;
    y: int;
}

func fact_iter1007(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1007(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1007(n-1);
    }
}

const n1007 = 1 + sizeof(p1007);

var p1007: T1007*;

struct T1007 {
    a: int[n1007];
}


func example_test1008(): int {
    return fact_rec1008(10) == fact_iter1008(10);
}

union IntOrPtr1008 {
    i: int;
    p: int*;
}

// func f1008() {
//    u1 := IntOrPtr1008{i = 42};
//    u2 := IntOrPtr1008{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1008: int;

struct Vector1008 {
    x: int;
    y: int;
}

func fact_iter1008(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1008(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1008(n-1);
    }
}

const n1008 = 1 + sizeof(p1008);

var p1008: T1008*;

struct T1008 {
    a: int[n1008];
}


func example_test1009(): int {
    return fact_rec1009(10) == fact_iter1009(10);
}

union IntOrPtr1009 {
    i: int;
    p: int*;
}

// func f1009() {
//    u1 := IntOrPtr1009{i = 42};
//    u2 := IntOrPtr1009{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1009: int;

struct Vector1009 {
    x: int;
    y: int;
}

func fact_iter1009(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1009(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1009(n-1);
    }
}

const n1009 = 1 + sizeof(p1009);

var p1009: T1009*;

struct T1009 {
    a: int[n1009];
}


func example_test1010(): int {
    return fact_rec1010(10) == fact_iter1010(10);
}

union IntOrPtr1010 {
    i: int;
    p: int*;
}

// func f1010() {
//    u1 := IntOrPtr1010{i = 42};
//    u2 := IntOrPtr1010{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1010: int;

struct Vector1010 {
    x: int;
    y: int;
}

func fact_iter1010(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1010(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1010(n-1);
    }
}

const n1010 = 1 + sizeof(p1010);

var p1010: T1010*;

struct T1010 {
    a: int[n1010];
}


func example_test1011(): int {
    return fact_rec1011(10) == fact_iter1011(10);
}

union IntOrPtr1011 {
    i: int;
    p: int*;
}

// func f1011() {
//    u1 := IntOrPtr1011{i = 42};
//    u2 := IntOrPtr1011{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1011: int;

struct Vector1011 {
    x: int;
    y: int;
}

func fact_iter1011(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1011(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1011(n-1);
    }
}

const n1011 = 1 + sizeof(p1011);

var p1011: T1011*;

struct T1011 {
    a: int[n1011];
}


func example_test1012(): int {
    return fact_rec1012(10) == fact_iter1012(10);
}

union IntOrPtr1012 {
    i: int;
    p: int*;
}

// func f1012() {
//    u1 := IntOrPtr1012{i = 42};
//    u2 := IntOrPtr1012{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1012: int;

struct Vector1012 {
    x: int;
    y: int;
}

func fact_iter1012(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1012(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1012(n-1);
    }
}

const n1012 = 1 + sizeof(p1012);

var p1012: T1012*;

struct T1012 {
    a: int[n1012];
}


func example_test1013(): int {
    return fact_rec1013(10) == fact_iter1013(10);
}

union IntOrPtr1013 {
    i: int;
    p: int*;
}

// func f1013() {
//    u1 := IntOrPtr1013{i = 42};
//    u2 := IntOrPtr1013{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1013: int;

struct Vector1013 {
    x: int;
    y: int;
}

func fact_iter1013(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1013(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1013(n-1);
    }
}

const n1013 = 1 + sizeof(p1013);

var p1013: T1013*;

struct T1013 {
    a: int[n1013];
}


func example_test1014(): int {
    return fact_rec1014(10) == fact_iter1014(10);
}

union IntOrPtr1014 {
    i: int;
    p: int*;
}

// func f1014() {
//    u1 := IntOrPtr1014{i = 42};
//    u2 := IntOrPtr1014{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1014: int;

struct Vector1014 {
    x: int;
    y: int;
}

func fact_iter1014(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1014(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1014(n-1);
    }
}

const n1014 = 1 + sizeof(p1014);

var p1014: T1014*;

struct T1014 {
    a: int[n1014];
}


func example_test1015(): int {
    return fact_rec1015(10) == fact_iter1015(10);
}

union IntOrPtr1015 {
    i: int;
    p: int*;
}

// func f1015() {
//    u1 := IntOrPtr1015{i = 42};
//    u2 := IntOrPtr1015{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1015: int;

struct Vector1015 {
    x: int;
    y: int;
}

func fact_iter1015(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1015(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1015(n-1);
    }
}

const n1015 = 1 + sizeof(p1015);

var p1015: T1015*;

struct T1015 {
    a: int[n1015];
}


func example_test1016(): int {
    return fact_rec1016(10) == fact_iter1016(10);
}

union IntOrPtr1016 {
    i: int;
    p: int*;
}

// func f1016() {
//    u1 := IntOrPtr1016{i = 42};
//    u2 := IntOrPtr1016{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1016: int;

struct Vector1016 {
    x: int;
    y: int;
}

func fact_iter1016(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1016(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1016(n-1);
    }
}

const n1016 = 1 + sizeof(p1016);

var p1016: T1016*;

struct T1016 {
    a: int[n1016];
}


func example_test1017(): int {
    return fact_rec1017(10) == fact_iter1017(10);
}

union IntOrPtr1017 {
    i: int;
    p: int*;
}

// func f1017() {
//    u1 := IntOrPtr1017{i = 42};
//    u2 := IntOrPtr1017{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1017: int;

struct Vector1017 {
    x: int;
    y: int;
}

func fact_iter1017(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1017(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1017(n-1);
    }
}

const n1017 = 1 + sizeof(p1017);

var p1017: T1017*;

struct T1017 {
    a: int[n1017];
}


func example_test1018(): int {
    return fact_rec1018(10) == fact_iter1018(10);
}

union IntOrPtr1018 {
    i: int;
    p: int*;
}

// func f1018() {
//    u1 := IntOrPtr1018{i = 42};
//    u2 := IntOrPtr1018{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1018: int;

struct Vector1018 {
    x: int;
    y: int;
}

func fact_iter1018(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1018(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1018(n-1);
    }
}

const n1018 = 1 + sizeof(p1018);

var p1018: T1018*;

struct T1018 {
    a: int[n1018];
}


func example_test1019(): int {
    return fact_rec1019(10) == fact_iter1019(10);
}

union IntOrPtr1019 {
    i: int;
    p: int*;
}

// func f1019() {
//    u1 := IntOrPtr1019{i = 42};
//    u2 := IntOrPtr1019{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1019: int;

struct Vector1019 {
    x: int;
    y: int;
}

func fact_iter1019(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1019(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1019(n-1);
    }
}

const n1019 = 1 + sizeof(p1019);

var p1019: T1019*;

struct T1019 {
    a: int[n1019];
}


func example_test1020(): int {
    return fact_rec1020(10) == fact_iter1020(10);
}

union IntOrPtr1020 {
    i: int;
    p: int*;
}

// func f1020() {
//    u1 := IntOrPtr1020{i = 42};
//    u2 := IntOrPtr1020{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1020: int;

struct Vector1020 {
    x: int;
    y: int;
}

func fact_iter1020(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1020(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1020(n-1);
    }
}

const n1020 = 1 + sizeof(p1020);

var p1020: T1020*;

struct T1020 {
    a: int[n1020];
}


func example_test1021(): int {
    return fact_rec1021(10) == fact_iter1021(10);
}

union IntOrPtr1021 {
    i: int;
    p: int*;
}

// func f1021() {
//    u1 := IntOrPtr1021{i = 42};
//    u2 := IntOrPtr1021{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1021: int;

struct Vector1021 {
    x: int;
    y: int;
}

func fact_iter1021(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1021(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1021(n-1);
    }
}

const n1021 = 1 + sizeof(p1021);

var p1021: T1021*;

struct T1021 {
    a: int[n1021];
}


func example_test1022(): int {
    return fact_rec1022(10) == fact_iter1022(10);
}

union IntOrPtr1022 {
    i: int;
    p: int*;
}

// func f1022() {
//    u1 := IntOrPtr1022{i = 42};
//    u2 := IntOrPtr1022{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1022: int;

struct Vector1022 {
    x: int;
    y: int;
}

func fact_iter1022(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1022(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1022(n-1);
    }
}

const n1022 = 1 + sizeof(p1022);

var p1022: T1022*;

struct T1022 {
    a: int[n1022];
}


func example_test1023(): int {
    return fact_rec1023(10) == fact_iter1023(10);
}

union IntOrPtr1023 {
    i: int;
    p: int*;
}

// func f1023() {
//    u1 := IntOrPtr1023{i = 42};
//    u2 := IntOrPtr1023{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1023: int;

struct Vector1023 {
    x: int;
    y: int;
}

func fact_iter1023(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1023(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1023(n-1);
    }
}

const n1023 = 1 + sizeof(p1023);

var p1023: T1023*;

struct T1023 {
    a: int[n1023];
}


func example_test1024(): int {
    return fact_rec1024(10) == fact_iter1024(10);
}

union IntOrPtr1024 {
    i: int;
    p: int*;
}

// func f1024() {
//    u1 := IntOrPtr1024{i = 42};
//    u2 := IntOrPtr1024{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1024: int;

struct Vector1024 {
    x: int;
    y: int;
}

func fact_iter1024(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1024(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1024(n-1);
    }
}

const n1024 = 1 + sizeof(p1024);

var p1024: T1024*;

struct T1024 {
    a: int[n1024];
}


func example_test1025(): int {
    return fact_rec1025(10) == fact_iter1025(10);
}

union IntOrPtr1025 {
    i: int;
    p: int*;
}

// func f1025() {
//    u1 := IntOrPtr1025{i = 42};
//    u2 := IntOrPtr1025{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1025: int;

struct Vector1025 {
    x: int;
    y: int;
}

func fact_iter1025(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1025(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1025(n-1);
    }
}

const n1025 = 1 + sizeof(p1025);

var p1025: T1025*;

struct T1025 {
    a: int[n1025];
}


func example_test1026(): int {
    return fact_rec1026(10) == fact_iter1026(10);
}

union IntOrPtr1026 {
    i: int;
    p: int*;
}

// func f1026() {
//    u1 := IntOrPtr1026{i = 42};
//    u2 := IntOrPtr1026{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1026: int;

struct Vector1026 {
    x: int;
    y: int;
}

func fact_iter1026(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1026(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1026(n-1);
    }
}

const n1026 = 1 + sizeof(p1026);

var p1026: T1026*;

struct T1026 {
    a: int[n1026];
}


func example_test1027(): int {
    return fact_rec1027(10) == fact_iter1027(10);
}

union IntOrPtr1027 {
    i: int;
    p: int*;
}

// func f1027() {
//    u1 := IntOrPtr1027{i = 42};
//    u2 := IntOrPtr1027{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1027: int;

struct Vector1027 {
    x: int;
    y: int;
}

func fact_iter1027(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1027(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1027(n-1);
    }
}

const n1027 = 1 + sizeof(p1027);

var p1027: T1027*;

struct T1027 {
    a: int[n1027];
}


func example_test1028(): int {
    return fact_rec1028(10) == fact_iter1028(10);
}

union IntOrPtr1028 {
    i: int;
    p: int*;
}

// func f1028() {
//    u1 := IntOrPtr1028{i = 42};
//    u2 := IntOrPtr1028{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1028: int;

struct Vector1028 {
    x: int;
    y: int;
}

func fact_iter1028(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1028(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1028(n-1);
    }
}

const n1028 = 1 + sizeof(p1028);

var p1028: T1028*;

struct T1028 {
    a: int[n1028];
}


func example_test1029(): int {
    return fact_rec1029(10) == fact_iter1029(10);
}

union IntOrPtr1029 {
    i: int;
    p: int*;
}

// func f1029() {
//    u1 := IntOrPtr1029{i = 42};
//    u2 := IntOrPtr1029{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1029: int;

struct Vector1029 {
    x: int;
    y: int;
}

func fact_iter1029(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1029(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1029(n-1);
    }
}

const n1029 = 1 + sizeof(p1029);

var p1029: T1029*;

struct T1029 {
    a: int[n1029];
}


func example_test1030(): int {
    return fact_rec1030(10) == fact_iter1030(10);
}

union IntOrPtr1030 {
    i: int;
    p: int*;
}

// func f1030() {
//    u1 := IntOrPtr1030{i = 42};
//    u2 := IntOrPtr1030{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1030: int;

struct Vector1030 {
    x: int;
    y: int;
}

func fact_iter1030(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1030(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1030(n-1);
    }
}

const n1030 = 1 + sizeof(p1030);

var p1030: T1030*;

struct T1030 {
    a: int[n1030];
}


func example_test1031(): int {
    return fact_rec1031(10) == fact_iter1031(10);
}

union IntOrPtr1031 {
    i: int;
    p: int*;
}

// func f1031() {
//    u1 := IntOrPtr1031{i = 42};
//    u2 := IntOrPtr1031{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1031: int;

struct Vector1031 {
    x: int;
    y: int;
}

func fact_iter1031(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1031(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1031(n-1);
    }
}

const n1031 = 1 + sizeof(p1031);

var p1031: T1031*;

struct T1031 {
    a: int[n1031];
}


func example_test1032(): int {
    return fact_rec1032(10) == fact_iter1032(10);
}

union IntOrPtr1032 {
    i: int;
    p: int*;
}

// func f1032() {
//    u1 := IntOrPtr1032{i = 42};
//    u2 := IntOrPtr1032{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1032: int;

struct Vector1032 {
    x: int;
    y: int;
}

func fact_iter1032(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1032(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1032(n-1);
    }
}

const n1032 = 1 + sizeof(p1032);

var p1032: T1032*;

struct T1032 {
    a: int[n1032];
}


func example_test1033(): int {
    return fact_rec1033(10) == fact_iter1033(10);
}

union IntOrPtr1033 {
    i: int;
    p: int*;
}

// func f1033() {
//    u1 := IntOrPtr1033{i = 42};
//    u2 := IntOrPtr1033{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1033: int;

struct Vector1033 {
    x: int;
    y: int;
}

func fact_iter1033(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1033(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1033(n-1);
    }
}

const n1033 = 1 + sizeof(p1033);

var p1033: T1033*;

struct T1033 {
    a: int[n1033];
}


func example_test1034(): int {
    return fact_rec1034(10) == fact_iter1034(10);
}

union IntOrPtr1034 {
    i: int;
    p: int*;
}

// func f1034() {
//    u1 := IntOrPtr1034{i = 42};
//    u2 := IntOrPtr1034{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1034: int;

struct Vector1034 {
    x: int;
    y: int;
}

func fact_iter1034(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1034(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1034(n-1);
    }
}

const n1034 = 1 + sizeof(p1034);

var p1034: T1034*;

struct T1034 {
    a: int[n1034];
}


func example_test1035(): int {
    return fact_rec1035(10) == fact_iter1035(10);
}

union IntOrPtr1035 {
    i: int;
    p: int*;
}

// func f1035() {
//    u1 := IntOrPtr1035{i = 42};
//    u2 := IntOrPtr1035{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1035: int;

struct Vector1035 {
    x: int;
    y: int;
}

func fact_iter1035(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1035(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1035(n-1);
    }
}

const n1035 = 1 + sizeof(p1035);

var p1035: T1035*;

struct T1035 {
    a: int[n1035];
}


func example_test1036(): int {
    return fact_rec1036(10) == fact_iter1036(10);
}

union IntOrPtr1036 {
    i: int;
    p: int*;
}

// func f1036() {
//    u1 := IntOrPtr1036{i = 42};
//    u2 := IntOrPtr1036{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1036: int;

struct Vector1036 {
    x: int;
    y: int;
}

func fact_iter1036(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1036(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1036(n-1);
    }
}

const n1036 = 1 + sizeof(p1036);

var p1036: T1036*;

struct T1036 {
    a: int[n1036];
}


func example_test1037(): int {
    return fact_rec1037(10) == fact_iter1037(10);
}

union IntOrPtr1037 {
    i: int;
    p: int*;
}

// func f1037() {
//    u1 := IntOrPtr1037{i = 42};
//    u2 := IntOrPtr1037{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1037: int;

struct Vector1037 {
    x: int;
    y: int;
}

func fact_iter1037(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1037(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1037(n-1);
    }
}

const n1037 = 1 + sizeof(p1037);

var p1037: T1037*;

struct T1037 {
    a: int[n1037];
}


func example_test1038(): int {
    return fact_rec1038(10) == fact_iter1038(10);
}

union IntOrPtr1038 {
    i: int;
    p: int*;
}

// func f1038() {
//    u1 := IntOrPtr1038{i = 42};
//    u2 := IntOrPtr1038{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1038: int;

struct Vector1038 {
    x: int;
    y: int;
}

func fact_iter1038(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1038(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1038(n-1);
    }
}

const n1038 = 1 + sizeof(p1038);

var p1038: T1038*;

struct T1038 {
    a: int[n1038];
}


func example_test1039(): int {
    return fact_rec1039(10) == fact_iter1039(10);
}

union IntOrPtr1039 {
    i: int;
    p: int*;
}

// func f1039() {
//    u1 := IntOrPtr1039{i = 42};
//    u2 := IntOrPtr1039{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1039: int;

struct Vector1039 {
    x: int;
    y: int;
}

func fact_iter1039(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1039(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1039(n-1);
    }
}

const n1039 = 1 + sizeof(p1039);

var p1039: T1039*;

struct T1039 {
    a: int[n1039];
}


func example_test1040(): int {
    return fact_rec1040(10) == fact_iter1040(10);
}

union IntOrPtr1040 {
    i: int;
    p: int*;
}

// func f1040() {
//    u1 := IntOrPtr1040{i = 42};
//    u2 := IntOrPtr1040{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1040: int;

struct Vector1040 {
    x: int;
    y: int;
}

func fact_iter1040(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1040(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1040(n-1);
    }
}

const n1040 = 1 + sizeof(p1040);

var p1040: T1040*;

struct T1040 {
    a: int[n1040];
}


func example_test1041(): int {
    return fact_rec1041(10) == fact_iter1041(10);
}

union IntOrPtr1041 {
    i: int;
    p: int*;
}

// func f1041() {
//    u1 := IntOrPtr1041{i = 42};
//    u2 := IntOrPtr1041{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1041: int;

struct Vector1041 {
    x: int;
    y: int;
}

func fact_iter1041(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1041(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1041(n-1);
    }
}

const n1041 = 1 + sizeof(p1041);

var p1041: T1041*;

struct T1041 {
    a: int[n1041];
}


func example_test1042(): int {
    return fact_rec1042(10) == fact_iter1042(10);
}

union IntOrPtr1042 {
    i: int;
    p: int*;
}

// func f1042() {
//    u1 := IntOrPtr1042{i = 42};
//    u2 := IntOrPtr1042{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1042: int;

struct Vector1042 {
    x: int;
    y: int;
}

func fact_iter1042(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1042(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1042(n-1);
    }
}

const n1042 = 1 + sizeof(p1042);

var p1042: T1042*;

struct T1042 {
    a: int[n1042];
}


func example_test1043(): int {
    return fact_rec1043(10) == fact_iter1043(10);
}

union IntOrPtr1043 {
    i: int;
    p: int*;
}

// func f1043() {
//    u1 := IntOrPtr1043{i = 42};
//    u2 := IntOrPtr1043{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1043: int;

struct Vector1043 {
    x: int;
    y: int;
}

func fact_iter1043(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1043(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1043(n-1);
    }
}

const n1043 = 1 + sizeof(p1043);

var p1043: T1043*;

struct T1043 {
    a: int[n1043];
}


func example_test1044(): int {
    return fact_rec1044(10) == fact_iter1044(10);
}

union IntOrPtr1044 {
    i: int;
    p: int*;
}

// func f1044() {
//    u1 := IntOrPtr1044{i = 42};
//    u2 := IntOrPtr1044{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1044: int;

struct Vector1044 {
    x: int;
    y: int;
}

func fact_iter1044(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1044(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1044(n-1);
    }
}

const n1044 = 1 + sizeof(p1044);

var p1044: T1044*;

struct T1044 {
    a: int[n1044];
}


func example_test1045(): int {
    return fact_rec1045(10) == fact_iter1045(10);
}

union IntOrPtr1045 {
    i: int;
    p: int*;
}

// func f1045() {
//    u1 := IntOrPtr1045{i = 42};
//    u2 := IntOrPtr1045{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1045: int;

struct Vector1045 {
    x: int;
    y: int;
}

func fact_iter1045(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1045(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1045(n-1);
    }
}

const n1045 = 1 + sizeof(p1045);

var p1045: T1045*;

struct T1045 {
    a: int[n1045];
}


func example_test1046(): int {
    return fact_rec1046(10) == fact_iter1046(10);
}

union IntOrPtr1046 {
    i: int;
    p: int*;
}

// func f1046() {
//    u1 := IntOrPtr1046{i = 42};
//    u2 := IntOrPtr1046{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1046: int;

struct Vector1046 {
    x: int;
    y: int;
}

func fact_iter1046(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1046(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1046(n-1);
    }
}

const n1046 = 1 + sizeof(p1046);

var p1046: T1046*;

struct T1046 {
    a: int[n1046];
}


func example_test1047(): int {
    return fact_rec1047(10) == fact_iter1047(10);
}

union IntOrPtr1047 {
    i: int;
    p: int*;
}

// func f1047() {
//    u1 := IntOrPtr1047{i = 42};
//    u2 := IntOrPtr1047{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1047: int;

struct Vector1047 {
    x: int;
    y: int;
}

func fact_iter1047(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1047(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1047(n-1);
    }
}

const n1047 = 1 + sizeof(p1047);

var p1047: T1047*;

struct T1047 {
    a: int[n1047];
}


func example_test1048(): int {
    return fact_rec1048(10) == fact_iter1048(10);
}

union IntOrPtr1048 {
    i: int;
    p: int*;
}

// func f1048() {
//    u1 := IntOrPtr1048{i = 42};
//    u2 := IntOrPtr1048{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1048: int;

struct Vector1048 {
    x: int;
    y: int;
}

func fact_iter1048(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1048(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1048(n-1);
    }
}

const n1048 = 1 + sizeof(p1048);

var p1048: T1048*;

struct T1048 {
    a: int[n1048];
}


func example_test1049(): int {
    return fact_rec1049(10) == fact_iter1049(10);
}

union IntOrPtr1049 {
    i: int;
    p: int*;
}

// func f1049() {
//    u1 := IntOrPtr1049{i = 42};
//    u2 := IntOrPtr1049{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1049: int;

struct Vector1049 {
    x: int;
    y: int;
}

func fact_iter1049(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1049(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1049(n-1);
    }
}

const n1049 = 1 + sizeof(p1049);

var p1049: T1049*;

struct T1049 {
    a: int[n1049];
}


func example_test1050(): int {
    return fact_rec1050(10) == fact_iter1050(10);
}

union IntOrPtr1050 {
    i: int;
    p: int*;
}

// func f1050() {
//    u1 := IntOrPtr1050{i = 42};
//    u2 := IntOrPtr1050{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1050: int;

struct Vector1050 {
    x: int;
    y: int;
}

func fact_iter1050(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1050(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1050(n-1);
    }
}

const n1050 = 1 + sizeof(p1050);

var p1050: T1050*;

struct T1050 {
    a: int[n1050];
}


func example_test1051(): int {
    return fact_rec1051(10) == fact_iter1051(10);
}

union IntOrPtr1051 {
    i: int;
    p: int*;
}

// func f1051() {
//    u1 := IntOrPtr1051{i = 42};
//    u2 := IntOrPtr1051{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1051: int;

struct Vector1051 {
    x: int;
    y: int;
}

func fact_iter1051(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1051(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1051(n-1);
    }
}

const n1051 = 1 + sizeof(p1051);

var p1051: T1051*;

struct T1051 {
    a: int[n1051];
}


func example_test1052(): int {
    return fact_rec1052(10) == fact_iter1052(10);
}

union IntOrPtr1052 {
    i: int;
    p: int*;
}

// func f1052() {
//    u1 := IntOrPtr1052{i = 42};
//    u2 := IntOrPtr1052{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1052: int;

struct Vector1052 {
    x: int;
    y: int;
}

func fact_iter1052(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1052(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1052(n-1);
    }
}

const n1052 = 1 + sizeof(p1052);

var p1052: T1052*;

struct T1052 {
    a: int[n1052];
}


func example_test1053(): int {
    return fact_rec1053(10) == fact_iter1053(10);
}

union IntOrPtr1053 {
    i: int;
    p: int*;
}

// func f1053() {
//    u1 := IntOrPtr1053{i = 42};
//    u2 := IntOrPtr1053{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1053: int;

struct Vector1053 {
    x: int;
    y: int;
}

func fact_iter1053(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1053(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1053(n-1);
    }
}

const n1053 = 1 + sizeof(p1053);

var p1053: T1053*;

struct T1053 {
    a: int[n1053];
}


func example_test1054(): int {
    return fact_rec1054(10) == fact_iter1054(10);
}

union IntOrPtr1054 {
    i: int;
    p: int*;
}

// func f1054() {
//    u1 := IntOrPtr1054{i = 42};
//    u2 := IntOrPtr1054{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1054: int;

struct Vector1054 {
    x: int;
    y: int;
}

func fact_iter1054(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1054(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1054(n-1);
    }
}

const n1054 = 1 + sizeof(p1054);

var p1054: T1054*;

struct T1054 {
    a: int[n1054];
}


func example_test1055(): int {
    return fact_rec1055(10) == fact_iter1055(10);
}

union IntOrPtr1055 {
    i: int;
    p: int*;
}

// func f1055() {
//    u1 := IntOrPtr1055{i = 42};
//    u2 := IntOrPtr1055{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1055: int;

struct Vector1055 {
    x: int;
    y: int;
}

func fact_iter1055(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1055(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1055(n-1);
    }
}

const n1055 = 1 + sizeof(p1055);

var p1055: T1055*;

struct T1055 {
    a: int[n1055];
}


func example_test1056(): int {
    return fact_rec1056(10) == fact_iter1056(10);
}

union IntOrPtr1056 {
    i: int;
    p: int*;
}

// func f1056() {
//    u1 := IntOrPtr1056{i = 42};
//    u2 := IntOrPtr1056{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1056: int;

struct Vector1056 {
    x: int;
    y: int;
}

func fact_iter1056(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1056(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1056(n-1);
    }
}

const n1056 = 1 + sizeof(p1056);

var p1056: T1056*;

struct T1056 {
    a: int[n1056];
}


func example_test1057(): int {
    return fact_rec1057(10) == fact_iter1057(10);
}

union IntOrPtr1057 {
    i: int;
    p: int*;
}

// func f1057() {
//    u1 := IntOrPtr1057{i = 42};
//    u2 := IntOrPtr1057{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1057: int;

struct Vector1057 {
    x: int;
    y: int;
}

func fact_iter1057(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1057(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1057(n-1);
    }
}

const n1057 = 1 + sizeof(p1057);

var p1057: T1057*;

struct T1057 {
    a: int[n1057];
}


func example_test1058(): int {
    return fact_rec1058(10) == fact_iter1058(10);
}

union IntOrPtr1058 {
    i: int;
    p: int*;
}

// func f1058() {
//    u1 := IntOrPtr1058{i = 42};
//    u2 := IntOrPtr1058{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1058: int;

struct Vector1058 {
    x: int;
    y: int;
}

func fact_iter1058(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1058(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1058(n-1);
    }
}

const n1058 = 1 + sizeof(p1058);

var p1058: T1058*;

struct T1058 {
    a: int[n1058];
}


func example_test1059(): int {
    return fact_rec1059(10) == fact_iter1059(10);
}

union IntOrPtr1059 {
    i: int;
    p: int*;
}

// func f1059() {
//    u1 := IntOrPtr1059{i = 42};
//    u2 := IntOrPtr1059{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1059: int;

struct Vector1059 {
    x: int;
    y: int;
}

func fact_iter1059(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1059(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1059(n-1);
    }
}

const n1059 = 1 + sizeof(p1059);

var p1059: T1059*;

struct T1059 {
    a: int[n1059];
}


func example_test1060(): int {
    return fact_rec1060(10) == fact_iter1060(10);
}

union IntOrPtr1060 {
    i: int;
    p: int*;
}

// func f1060() {
//    u1 := IntOrPtr1060{i = 42};
//    u2 := IntOrPtr1060{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1060: int;

struct Vector1060 {
    x: int;
    y: int;
}

func fact_iter1060(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1060(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1060(n-1);
    }
}

const n1060 = 1 + sizeof(p1060);

var p1060: T1060*;

struct T1060 {
    a: int[n1060];
}


func example_test1061(): int {
    return fact_rec1061(10) == fact_iter1061(10);
}

union IntOrPtr1061 {
    i: int;
    p: int*;
}

// func f1061() {
//    u1 := IntOrPtr1061{i = 42};
//    u2 := IntOrPtr1061{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1061: int;

struct Vector1061 {
    x: int;
    y: int;
}

func fact_iter1061(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1061(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1061(n-1);
    }
}

const n1061 = 1 + sizeof(p1061);

var p1061: T1061*;

struct T1061 {
    a: int[n1061];
}


func example_test1062(): int {
    return fact_rec1062(10) == fact_iter1062(10);
}

union IntOrPtr1062 {
    i: int;
    p: int*;
}

// func f1062() {
//    u1 := IntOrPtr1062{i = 42};
//    u2 := IntOrPtr1062{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1062: int;

struct Vector1062 {
    x: int;
    y: int;
}

func fact_iter1062(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1062(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1062(n-1);
    }
}

const n1062 = 1 + sizeof(p1062);

var p1062: T1062*;

struct T1062 {
    a: int[n1062];
}


func example_test1063(): int {
    return fact_rec1063(10) == fact_iter1063(10);
}

union IntOrPtr1063 {
    i: int;
    p: int*;
}

// func f1063() {
//    u1 := IntOrPtr1063{i = 42};
//    u2 := IntOrPtr1063{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1063: int;

struct Vector1063 {
    x: int;
    y: int;
}

func fact_iter1063(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1063(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1063(n-1);
    }
}

const n1063 = 1 + sizeof(p1063);

var p1063: T1063*;

struct T1063 {
    a: int[n1063];
}


func example_test1064(): int {
    return fact_rec1064(10) == fact_iter1064(10);
}

union IntOrPtr1064 {
    i: int;
    p: int*;
}

// func f1064() {
//    u1 := IntOrPtr1064{i = 42};
//    u2 := IntOrPtr1064{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1064: int;

struct Vector1064 {
    x: int;
    y: int;
}

func fact_iter1064(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1064(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1064(n-1);
    }
}

const n1064 = 1 + sizeof(p1064);

var p1064: T1064*;

struct T1064 {
    a: int[n1064];
}


func example_test1065(): int {
    return fact_rec1065(10) == fact_iter1065(10);
}

union IntOrPtr1065 {
    i: int;
    p: int*;
}

// func f1065() {
//    u1 := IntOrPtr1065{i = 42};
//    u2 := IntOrPtr1065{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1065: int;

struct Vector1065 {
    x: int;
    y: int;
}

func fact_iter1065(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1065(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1065(n-1);
    }
}

const n1065 = 1 + sizeof(p1065);

var p1065: T1065*;

struct T1065 {
    a: int[n1065];
}


func example_test1066(): int {
    return fact_rec1066(10) == fact_iter1066(10);
}

union IntOrPtr1066 {
    i: int;
    p: int*;
}

// func f1066() {
//    u1 := IntOrPtr1066{i = 42};
//    u2 := IntOrPtr1066{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1066: int;

struct Vector1066 {
    x: int;
    y: int;
}

func fact_iter1066(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1066(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1066(n-1);
    }
}

const n1066 = 1 + sizeof(p1066);

var p1066: T1066*;

struct T1066 {
    a: int[n1066];
}


func example_test1067(): int {
    return fact_rec1067(10) == fact_iter1067(10);
}

union IntOrPtr1067 {
    i: int;
    p: int*;
}

// func f1067() {
//    u1 := IntOrPtr1067{i = 42};
//    u2 := IntOrPtr1067{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1067: int;

struct Vector1067 {
    x: int;
    y: int;
}

func fact_iter1067(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1067(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1067(n-1);
    }
}

const n1067 = 1 + sizeof(p1067);

var p1067: T1067*;

struct T1067 {
    a: int[n1067];
}


func example_test1068(): int {
    return fact_rec1068(10) == fact_iter1068(10);
}

union IntOrPtr1068 {
    i: int;
    p: int*;
}

// func f1068() {
//    u1 := IntOrPtr1068{i = 42};
//    u2 := IntOrPtr1068{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1068: int;

struct Vector1068 {
    x: int;
    y: int;
}

func fact_iter1068(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1068(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1068(n-1);
    }
}

const n1068 = 1 + sizeof(p1068);

var p1068: T1068*;

struct T1068 {
    a: int[n1068];
}


func example_test1069(): int {
    return fact_rec1069(10) == fact_iter1069(10);
}

union IntOrPtr1069 {
    i: int;
    p: int*;
}

// func f1069() {
//    u1 := IntOrPtr1069{i = 42};
//    u2 := IntOrPtr1069{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1069: int;

struct Vector1069 {
    x: int;
    y: int;
}

func fact_iter1069(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1069(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1069(n-1);
    }
}

const n1069 = 1 + sizeof(p1069);

var p1069: T1069*;

struct T1069 {
    a: int[n1069];
}


func example_test1070(): int {
    return fact_rec1070(10) == fact_iter1070(10);
}

union IntOrPtr1070 {
    i: int;
    p: int*;
}

// func f1070() {
//    u1 := IntOrPtr1070{i = 42};
//    u2 := IntOrPtr1070{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1070: int;

struct Vector1070 {
    x: int;
    y: int;
}

func fact_iter1070(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1070(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1070(n-1);
    }
}

const n1070 = 1 + sizeof(p1070);

var p1070: T1070*;

struct T1070 {
    a: int[n1070];
}


func example_test1071(): int {
    return fact_rec1071(10) == fact_iter1071(10);
}

union IntOrPtr1071 {
    i: int;
    p: int*;
}

// func f1071() {
//    u1 := IntOrPtr1071{i = 42};
//    u2 := IntOrPtr1071{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1071: int;

struct Vector1071 {
    x: int;
    y: int;
}

func fact_iter1071(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1071(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1071(n-1);
    }
}

const n1071 = 1 + sizeof(p1071);

var p1071: T1071*;

struct T1071 {
    a: int[n1071];
}


func example_test1072(): int {
    return fact_rec1072(10) == fact_iter1072(10);
}

union IntOrPtr1072 {
    i: int;
    p: int*;
}

// func f1072() {
//    u1 := IntOrPtr1072{i = 42};
//    u2 := IntOrPtr1072{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1072: int;

struct Vector1072 {
    x: int;
    y: int;
}

func fact_iter1072(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1072(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1072(n-1);
    }
}

const n1072 = 1 + sizeof(p1072);

var p1072: T1072*;

struct T1072 {
    a: int[n1072];
}


func example_test1073(): int {
    return fact_rec1073(10) == fact_iter1073(10);
}

union IntOrPtr1073 {
    i: int;
    p: int*;
}

// func f1073() {
//    u1 := IntOrPtr1073{i = 42};
//    u2 := IntOrPtr1073{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1073: int;

struct Vector1073 {
    x: int;
    y: int;
}

func fact_iter1073(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1073(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1073(n-1);
    }
}

const n1073 = 1 + sizeof(p1073);

var p1073: T1073*;

struct T1073 {
    a: int[n1073];
}


func example_test1074(): int {
    return fact_rec1074(10) == fact_iter1074(10);
}

union IntOrPtr1074 {
    i: int;
    p: int*;
}

// func f1074() {
//    u1 := IntOrPtr1074{i = 42};
//    u2 := IntOrPtr1074{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1074: int;

struct Vector1074 {
    x: int;
    y: int;
}

func fact_iter1074(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1074(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1074(n-1);
    }
}

const n1074 = 1 + sizeof(p1074);

var p1074: T1074*;

struct T1074 {
    a: int[n1074];
}


func example_test1075(): int {
    return fact_rec1075(10) == fact_iter1075(10);
}

union IntOrPtr1075 {
    i: int;
    p: int*;
}

// func f1075() {
//    u1 := IntOrPtr1075{i = 42};
//    u2 := IntOrPtr1075{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1075: int;

struct Vector1075 {
    x: int;
    y: int;
}

func fact_iter1075(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1075(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1075(n-1);
    }
}

const n1075 = 1 + sizeof(p1075);

var p1075: T1075*;

struct T1075 {
    a: int[n1075];
}


func example_test1076(): int {
    return fact_rec1076(10) == fact_iter1076(10);
}

union IntOrPtr1076 {
    i: int;
    p: int*;
}

// func f1076() {
//    u1 := IntOrPtr1076{i = 42};
//    u2 := IntOrPtr1076{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1076: int;

struct Vector1076 {
    x: int;
    y: int;
}

func fact_iter1076(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1076(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1076(n-1);
    }
}

const n1076 = 1 + sizeof(p1076);

var p1076: T1076*;

struct T1076 {
    a: int[n1076];
}


func example_test1077(): int {
    return fact_rec1077(10) == fact_iter1077(10);
}

union IntOrPtr1077 {
    i: int;
    p: int*;
}

// func f1077() {
//    u1 := IntOrPtr1077{i = 42};
//    u2 := IntOrPtr1077{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1077: int;

struct Vector1077 {
    x: int;
    y: int;
}

func fact_iter1077(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1077(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1077(n-1);
    }
}

const n1077 = 1 + sizeof(p1077);

var p1077: T1077*;

struct T1077 {
    a: int[n1077];
}


func example_test1078(): int {
    return fact_rec1078(10) == fact_iter1078(10);
}

union IntOrPtr1078 {
    i: int;
    p: int*;
}

// func f1078() {
//    u1 := IntOrPtr1078{i = 42};
//    u2 := IntOrPtr1078{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1078: int;

struct Vector1078 {
    x: int;
    y: int;
}

func fact_iter1078(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1078(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1078(n-1);
    }
}

const n1078 = 1 + sizeof(p1078);

var p1078: T1078*;

struct T1078 {
    a: int[n1078];
}


func example_test1079(): int {
    return fact_rec1079(10) == fact_iter1079(10);
}

union IntOrPtr1079 {
    i: int;
    p: int*;
}

// func f1079() {
//    u1 := IntOrPtr1079{i = 42};
//    u2 := IntOrPtr1079{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1079: int;

struct Vector1079 {
    x: int;
    y: int;
}

func fact_iter1079(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1079(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1079(n-1);
    }
}

const n1079 = 1 + sizeof(p1079);

var p1079: T1079*;

struct T1079 {
    a: int[n1079];
}


func example_test1080(): int {
    return fact_rec1080(10) == fact_iter1080(10);
}

union IntOrPtr1080 {
    i: int;
    p: int*;
}

// func f1080() {
//    u1 := IntOrPtr1080{i = 42};
//    u2 := IntOrPtr1080{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1080: int;

struct Vector1080 {
    x: int;
    y: int;
}

func fact_iter1080(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1080(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1080(n-1);
    }
}

const n1080 = 1 + sizeof(p1080);

var p1080: T1080*;

struct T1080 {
    a: int[n1080];
}


func example_test1081(): int {
    return fact_rec1081(10) == fact_iter1081(10);
}

union IntOrPtr1081 {
    i: int;
    p: int*;
}

// func f1081() {
//    u1 := IntOrPtr1081{i = 42};
//    u2 := IntOrPtr1081{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1081: int;

struct Vector1081 {
    x: int;
    y: int;
}

func fact_iter1081(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1081(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1081(n-1);
    }
}

const n1081 = 1 + sizeof(p1081);

var p1081: T1081*;

struct T1081 {
    a: int[n1081];
}


func example_test1082(): int {
    return fact_rec1082(10) == fact_iter1082(10);
}

union IntOrPtr1082 {
    i: int;
    p: int*;
}

// func f1082() {
//    u1 := IntOrPtr1082{i = 42};
//    u2 := IntOrPtr1082{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1082: int;

struct Vector1082 {
    x: int;
    y: int;
}

func fact_iter1082(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1082(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1082(n-1);
    }
}

const n1082 = 1 + sizeof(p1082);

var p1082: T1082*;

struct T1082 {
    a: int[n1082];
}


func example_test1083(): int {
    return fact_rec1083(10) == fact_iter1083(10);
}

union IntOrPtr1083 {
    i: int;
    p: int*;
}

// func f1083() {
//    u1 := IntOrPtr1083{i = 42};
//    u2 := IntOrPtr1083{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1083: int;

struct Vector1083 {
    x: int;
    y: int;
}

func fact_iter1083(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1083(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1083(n-1);
    }
}

const n1083 = 1 + sizeof(p1083);

var p1083: T1083*;

struct T1083 {
    a: int[n1083];
}


func example_test1084(): int {
    return fact_rec1084(10) == fact_iter1084(10);
}

union IntOrPtr1084 {
    i: int;
    p: int*;
}

// func f1084() {
//    u1 := IntOrPtr1084{i = 42};
//    u2 := IntOrPtr1084{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1084: int;

struct Vector1084 {
    x: int;
    y: int;
}

func fact_iter1084(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1084(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1084(n-1);
    }
}

const n1084 = 1 + sizeof(p1084);

var p1084: T1084*;

struct T1084 {
    a: int[n1084];
}


func example_test1085(): int {
    return fact_rec1085(10) == fact_iter1085(10);
}

union IntOrPtr1085 {
    i: int;
    p: int*;
}

// func f1085() {
//    u1 := IntOrPtr1085{i = 42};
//    u2 := IntOrPtr1085{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1085: int;

struct Vector1085 {
    x: int;
    y: int;
}

func fact_iter1085(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1085(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1085(n-1);
    }
}

const n1085 = 1 + sizeof(p1085);

var p1085: T1085*;

struct T1085 {
    a: int[n1085];
}


func example_test1086(): int {
    return fact_rec1086(10) == fact_iter1086(10);
}

union IntOrPtr1086 {
    i: int;
    p: int*;
}

// func f1086() {
//    u1 := IntOrPtr1086{i = 42};
//    u2 := IntOrPtr1086{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1086: int;

struct Vector1086 {
    x: int;
    y: int;
}

func fact_iter1086(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1086(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1086(n-1);
    }
}

const n1086 = 1 + sizeof(p1086);

var p1086: T1086*;

struct T1086 {
    a: int[n1086];
}


func example_test1087(): int {
    return fact_rec1087(10) == fact_iter1087(10);
}

union IntOrPtr1087 {
    i: int;
    p: int*;
}

// func f1087() {
//    u1 := IntOrPtr1087{i = 42};
//    u2 := IntOrPtr1087{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1087: int;

struct Vector1087 {
    x: int;
    y: int;
}

func fact_iter1087(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1087(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1087(n-1);
    }
}

const n1087 = 1 + sizeof(p1087);

var p1087: T1087*;

struct T1087 {
    a: int[n1087];
}


func example_test1088(): int {
    return fact_rec1088(10) == fact_iter1088(10);
}

union IntOrPtr1088 {
    i: int;
    p: int*;
}

// func f1088() {
//    u1 := IntOrPtr1088{i = 42};
//    u2 := IntOrPtr1088{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1088: int;

struct Vector1088 {
    x: int;
    y: int;
}

func fact_iter1088(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1088(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1088(n-1);
    }
}

const n1088 = 1 + sizeof(p1088);

var p1088: T1088*;

struct T1088 {
    a: int[n1088];
}


func example_test1089(): int {
    return fact_rec1089(10) == fact_iter1089(10);
}

union IntOrPtr1089 {
    i: int;
    p: int*;
}

// func f1089() {
//    u1 := IntOrPtr1089{i = 42};
//    u2 := IntOrPtr1089{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1089: int;

struct Vector1089 {
    x: int;
    y: int;
}

func fact_iter1089(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1089(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1089(n-1);
    }
}

const n1089 = 1 + sizeof(p1089);

var p1089: T1089*;

struct T1089 {
    a: int[n1089];
}


func example_test1090(): int {
    return fact_rec1090(10) == fact_iter1090(10);
}

union IntOrPtr1090 {
    i: int;
    p: int*;
}

// func f1090() {
//    u1 := IntOrPtr1090{i = 42};
//    u2 := IntOrPtr1090{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1090: int;

struct Vector1090 {
    x: int;
    y: int;
}

func fact_iter1090(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1090(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1090(n-1);
    }
}

const n1090 = 1 + sizeof(p1090);

var p1090: T1090*;

struct T1090 {
    a: int[n1090];
}


func example_test1091(): int {
    return fact_rec1091(10) == fact_iter1091(10);
}

union IntOrPtr1091 {
    i: int;
    p: int*;
}

// func f1091() {
//    u1 := IntOrPtr1091{i = 42};
//    u2 := IntOrPtr1091{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1091: int;

struct Vector1091 {
    x: int;
    y: int;
}

func fact_iter1091(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1091(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1091(n-1);
    }
}

const n1091 = 1 + sizeof(p1091);

var p1091: T1091*;

struct T1091 {
    a: int[n1091];
}


func example_test1092(): int {
    return fact_rec1092(10) == fact_iter1092(10);
}

union IntOrPtr1092 {
    i: int;
    p: int*;
}

// func f1092() {
//    u1 := IntOrPtr1092{i = 42};
//    u2 := IntOrPtr1092{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1092: int;

struct Vector1092 {
    x: int;
    y: int;
}

func fact_iter1092(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1092(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1092(n-1);
    }
}

const n1092 = 1 + sizeof(p1092);

var p1092: T1092*;

struct T1092 {
    a: int[n1092];
}


func example_test1093(): int {
    return fact_rec1093(10) == fact_iter1093(10);
}

union IntOrPtr1093 {
    i: int;
    p: int*;
}

// func f1093() {
//    u1 := IntOrPtr1093{i = 42};
//    u2 := IntOrPtr1093{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1093: int;

struct Vector1093 {
    x: int;
    y: int;
}

func fact_iter1093(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1093(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1093(n-1);
    }
}

const n1093 = 1 + sizeof(p1093);

var p1093: T1093*;

struct T1093 {
    a: int[n1093];
}


func example_test1094(): int {
    return fact_rec1094(10) == fact_iter1094(10);
}

union IntOrPtr1094 {
    i: int;
    p: int*;
}

// func f1094() {
//    u1 := IntOrPtr1094{i = 42};
//    u2 := IntOrPtr1094{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1094: int;

struct Vector1094 {
    x: int;
    y: int;
}

func fact_iter1094(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1094(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1094(n-1);
    }
}

const n1094 = 1 + sizeof(p1094);

var p1094: T1094*;

struct T1094 {
    a: int[n1094];
}


func example_test1095(): int {
    return fact_rec1095(10) == fact_iter1095(10);
}

union IntOrPtr1095 {
    i: int;
    p: int*;
}

// func f1095() {
//    u1 := IntOrPtr1095{i = 42};
//    u2 := IntOrPtr1095{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1095: int;

struct Vector1095 {
    x: int;
    y: int;
}

func fact_iter1095(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1095(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1095(n-1);
    }
}

const n1095 = 1 + sizeof(p1095);

var p1095: T1095*;

struct T1095 {
    a: int[n1095];
}


func example_test1096(): int {
    return fact_rec1096(10) == fact_iter1096(10);
}

union IntOrPtr1096 {
    i: int;
    p: int*;
}

// func f1096() {
//    u1 := IntOrPtr1096{i = 42};
//    u2 := IntOrPtr1096{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1096: int;

struct Vector1096 {
    x: int;
    y: int;
}

func fact_iter1096(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1096(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1096(n-1);
    }
}

const n1096 = 1 + sizeof(p1096);

var p1096: T1096*;

struct T1096 {
    a: int[n1096];
}


func example_test1097(): int {
    return fact_rec1097(10) == fact_iter1097(10);
}

union IntOrPtr1097 {
    i: int;
    p: int*;
}

// func f1097() {
//    u1 := IntOrPtr1097{i = 42};
//    u2 := IntOrPtr1097{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1097: int;

struct Vector1097 {
    x: int;
    y: int;
}

func fact_iter1097(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1097(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1097(n-1);
    }
}

const n1097 = 1 + sizeof(p1097);

var p1097: T1097*;

struct T1097 {
    a: int[n1097];
}


func example_test1098(): int {
    return fact_rec1098(10) == fact_iter1098(10);
}

union IntOrPtr1098 {
    i: int;
    p: int*;
}

// func f1098() {
//    u1 := IntOrPtr1098{i = 42};
//    u2 := IntOrPtr1098{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1098: int;

struct Vector1098 {
    x: int;
    y: int;
}

func fact_iter1098(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1098(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1098(n-1);
    }
}

const n1098 = 1 + sizeof(p1098);

var p1098: T1098*;

struct T1098 {
    a: int[n1098];
}


func example_test1099(): int {
    return fact_rec1099(10) == fact_iter1099(10);
}

union IntOrPtr1099 {
    i: int;
    p: int*;
}

// func f1099() {
//    u1 := IntOrPtr1099{i = 42};
//    u2 := IntOrPtr1099{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1099: int;

struct Vector1099 {
    x: int;
    y: int;
}

func fact_iter1099(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1099(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1099(n-1);
    }
}

const n1099 = 1 + sizeof(p1099);

var p1099: T1099*;

struct T1099 {
    a: int[n1099];
}


func example_test1100(): int {
    return fact_rec1100(10) == fact_iter1100(10);
}

union IntOrPtr1100 {
    i: int;
    p: int*;
}

// func f1100() {
//    u1 := IntOrPtr1100{i = 42};
//    u2 := IntOrPtr1100{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1100: int;

struct Vector1100 {
    x: int;
    y: int;
}

func fact_iter1100(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1100(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1100(n-1);
    }
}

const n1100 = 1 + sizeof(p1100);

var p1100: T1100*;

struct T1100 {
    a: int[n1100];
}


func example_test1101(): int {
    return fact_rec1101(10) == fact_iter1101(10);
}

union IntOrPtr1101 {
    i: int;
    p: int*;
}

// func f1101() {
//    u1 := IntOrPtr1101{i = 42};
//    u2 := IntOrPtr1101{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1101: int;

struct Vector1101 {
    x: int;
    y: int;
}

func fact_iter1101(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1101(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1101(n-1);
    }
}

const n1101 = 1 + sizeof(p1101);

var p1101: T1101*;

struct T1101 {
    a: int[n1101];
}


func example_test1102(): int {
    return fact_rec1102(10) == fact_iter1102(10);
}

union IntOrPtr1102 {
    i: int;
    p: int*;
}

// func f1102() {
//    u1 := IntOrPtr1102{i = 42};
//    u2 := IntOrPtr1102{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1102: int;

struct Vector1102 {
    x: int;
    y: int;
}

func fact_iter1102(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1102(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1102(n-1);
    }
}

const n1102 = 1 + sizeof(p1102);

var p1102: T1102*;

struct T1102 {
    a: int[n1102];
}


func example_test1103(): int {
    return fact_rec1103(10) == fact_iter1103(10);
}

union IntOrPtr1103 {
    i: int;
    p: int*;
}

// func f1103() {
//    u1 := IntOrPtr1103{i = 42};
//    u2 := IntOrPtr1103{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1103: int;

struct Vector1103 {
    x: int;
    y: int;
}

func fact_iter1103(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1103(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1103(n-1);
    }
}

const n1103 = 1 + sizeof(p1103);

var p1103: T1103*;

struct T1103 {
    a: int[n1103];
}


func example_test1104(): int {
    return fact_rec1104(10) == fact_iter1104(10);
}

union IntOrPtr1104 {
    i: int;
    p: int*;
}

// func f1104() {
//    u1 := IntOrPtr1104{i = 42};
//    u2 := IntOrPtr1104{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1104: int;

struct Vector1104 {
    x: int;
    y: int;
}

func fact_iter1104(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1104(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1104(n-1);
    }
}

const n1104 = 1 + sizeof(p1104);

var p1104: T1104*;

struct T1104 {
    a: int[n1104];
}


func example_test1105(): int {
    return fact_rec1105(10) == fact_iter1105(10);
}

union IntOrPtr1105 {
    i: int;
    p: int*;
}

// func f1105() {
//    u1 := IntOrPtr1105{i = 42};
//    u2 := IntOrPtr1105{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1105: int;

struct Vector1105 {
    x: int;
    y: int;
}

func fact_iter1105(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1105(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1105(n-1);
    }
}

const n1105 = 1 + sizeof(p1105);

var p1105: T1105*;

struct T1105 {
    a: int[n1105];
}


func example_test1106(): int {
    return fact_rec1106(10) == fact_iter1106(10);
}

union IntOrPtr1106 {
    i: int;
    p: int*;
}

// func f1106() {
//    u1 := IntOrPtr1106{i = 42};
//    u2 := IntOrPtr1106{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1106: int;

struct Vector1106 {
    x: int;
    y: int;
}

func fact_iter1106(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1106(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1106(n-1);
    }
}

const n1106 = 1 + sizeof(p1106);

var p1106: T1106*;

struct T1106 {
    a: int[n1106];
}


func example_test1107(): int {
    return fact_rec1107(10) == fact_iter1107(10);
}

union IntOrPtr1107 {
    i: int;
    p: int*;
}

// func f1107() {
//    u1 := IntOrPtr1107{i = 42};
//    u2 := IntOrPtr1107{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1107: int;

struct Vector1107 {
    x: int;
    y: int;
}

func fact_iter1107(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1107(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1107(n-1);
    }
}

const n1107 = 1 + sizeof(p1107);

var p1107: T1107*;

struct T1107 {
    a: int[n1107];
}


func example_test1108(): int {
    return fact_rec1108(10) == fact_iter1108(10);
}

union IntOrPtr1108 {
    i: int;
    p: int*;
}

// func f1108() {
//    u1 := IntOrPtr1108{i = 42};
//    u2 := IntOrPtr1108{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1108: int;

struct Vector1108 {
    x: int;
    y: int;
}

func fact_iter1108(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1108(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1108(n-1);
    }
}

const n1108 = 1 + sizeof(p1108);

var p1108: T1108*;

struct T1108 {
    a: int[n1108];
}


func example_test1109(): int {
    return fact_rec1109(10) == fact_iter1109(10);
}

union IntOrPtr1109 {
    i: int;
    p: int*;
}

// func f1109() {
//    u1 := IntOrPtr1109{i = 42};
//    u2 := IntOrPtr1109{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1109: int;

struct Vector1109 {
    x: int;
    y: int;
}

func fact_iter1109(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1109(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1109(n-1);
    }
}

const n1109 = 1 + sizeof(p1109);

var p1109: T1109*;

struct T1109 {
    a: int[n1109];
}


func example_test1110(): int {
    return fact_rec1110(10) == fact_iter1110(10);
}

union IntOrPtr1110 {
    i: int;
    p: int*;
}

// func f1110() {
//    u1 := IntOrPtr1110{i = 42};
//    u2 := IntOrPtr1110{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1110: int;

struct Vector1110 {
    x: int;
    y: int;
}

func fact_iter1110(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1110(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1110(n-1);
    }
}

const n1110 = 1 + sizeof(p1110);

var p1110: T1110*;

struct T1110 {
    a: int[n1110];
}


func example_test1111(): int {
    return fact_rec1111(10) == fact_iter1111(10);
}

union IntOrPtr1111 {
    i: int;
    p: int*;
}

// func f1111() {
//    u1 := IntOrPtr1111{i = 42};
//    u2 := IntOrPtr1111{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1111: int;

struct Vector1111 {
    x: int;
    y: int;
}

func fact_iter1111(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1111(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1111(n-1);
    }
}

const n1111 = 1 + sizeof(p1111);

var p1111: T1111*;

struct T1111 {
    a: int[n1111];
}


func example_test1112(): int {
    return fact_rec1112(10) == fact_iter1112(10);
}

union IntOrPtr1112 {
    i: int;
    p: int*;
}

// func f1112() {
//    u1 := IntOrPtr1112{i = 42};
//    u2 := IntOrPtr1112{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1112: int;

struct Vector1112 {
    x: int;
    y: int;
}

func fact_iter1112(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1112(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1112(n-1);
    }
}

const n1112 = 1 + sizeof(p1112);

var p1112: T1112*;

struct T1112 {
    a: int[n1112];
}


func example_test1113(): int {
    return fact_rec1113(10) == fact_iter1113(10);
}

union IntOrPtr1113 {
    i: int;
    p: int*;
}

// func f1113() {
//    u1 := IntOrPtr1113{i = 42};
//    u2 := IntOrPtr1113{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1113: int;

struct Vector1113 {
    x: int;
    y: int;
}

func fact_iter1113(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1113(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1113(n-1);
    }
}

const n1113 = 1 + sizeof(p1113);

var p1113: T1113*;

struct T1113 {
    a: int[n1113];
}


func example_test1114(): int {
    return fact_rec1114(10) == fact_iter1114(10);
}

union IntOrPtr1114 {
    i: int;
    p: int*;
}

// func f1114() {
//    u1 := IntOrPtr1114{i = 42};
//    u2 := IntOrPtr1114{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1114: int;

struct Vector1114 {
    x: int;
    y: int;
}

func fact_iter1114(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1114(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1114(n-1);
    }
}

const n1114 = 1 + sizeof(p1114);

var p1114: T1114*;

struct T1114 {
    a: int[n1114];
}


func example_test1115(): int {
    return fact_rec1115(10) == fact_iter1115(10);
}

union IntOrPtr1115 {
    i: int;
    p: int*;
}

// func f1115() {
//    u1 := IntOrPtr1115{i = 42};
//    u2 := IntOrPtr1115{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1115: int;

struct Vector1115 {
    x: int;
    y: int;
}

func fact_iter1115(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1115(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1115(n-1);
    }
}

const n1115 = 1 + sizeof(p1115);

var p1115: T1115*;

struct T1115 {
    a: int[n1115];
}


func example_test1116(): int {
    return fact_rec1116(10) == fact_iter1116(10);
}

union IntOrPtr1116 {
    i: int;
    p: int*;
}

// func f1116() {
//    u1 := IntOrPtr1116{i = 42};
//    u2 := IntOrPtr1116{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1116: int;

struct Vector1116 {
    x: int;
    y: int;
}

func fact_iter1116(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1116(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1116(n-1);
    }
}

const n1116 = 1 + sizeof(p1116);

var p1116: T1116*;

struct T1116 {
    a: int[n1116];
}


func example_test1117(): int {
    return fact_rec1117(10) == fact_iter1117(10);
}

union IntOrPtr1117 {
    i: int;
    p: int*;
}

// func f1117() {
//    u1 := IntOrPtr1117{i = 42};
//    u2 := IntOrPtr1117{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1117: int;

struct Vector1117 {
    x: int;
    y: int;
}

func fact_iter1117(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1117(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1117(n-1);
    }
}

const n1117 = 1 + sizeof(p1117);

var p1117: T1117*;

struct T1117 {
    a: int[n1117];
}


func example_test1118(): int {
    return fact_rec1118(10) == fact_iter1118(10);
}

union IntOrPtr1118 {
    i: int;
    p: int*;
}

// func f1118() {
//    u1 := IntOrPtr1118{i = 42};
//    u2 := IntOrPtr1118{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1118: int;

struct Vector1118 {
    x: int;
    y: int;
}

func fact_iter1118(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1118(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1118(n-1);
    }
}

const n1118 = 1 + sizeof(p1118);

var p1118: T1118*;

struct T1118 {
    a: int[n1118];
}


func example_test1119(): int {
    return fact_rec1119(10) == fact_iter1119(10);
}

union IntOrPtr1119 {
    i: int;
    p: int*;
}

// func f1119() {
//    u1 := IntOrPtr1119{i = 42};
//    u2 := IntOrPtr1119{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1119: int;

struct Vector1119 {
    x: int;
    y: int;
}

func fact_iter1119(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1119(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1119(n-1);
    }
}

const n1119 = 1 + sizeof(p1119);

var p1119: T1119*;

struct T1119 {
    a: int[n1119];
}


func example_test1120(): int {
    return fact_rec1120(10) == fact_iter1120(10);
}

union IntOrPtr1120 {
    i: int;
    p: int*;
}

// func f1120() {
//    u1 := IntOrPtr1120{i = 42};
//    u2 := IntOrPtr1120{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1120: int;

struct Vector1120 {
    x: int;
    y: int;
}

func fact_iter1120(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1120(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1120(n-1);
    }
}

const n1120 = 1 + sizeof(p1120);

var p1120: T1120*;

struct T1120 {
    a: int[n1120];
}


func example_test1121(): int {
    return fact_rec1121(10) == fact_iter1121(10);
}

union IntOrPtr1121 {
    i: int;
    p: int*;
}

// func f1121() {
//    u1 := IntOrPtr1121{i = 42};
//    u2 := IntOrPtr1121{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1121: int;

struct Vector1121 {
    x: int;
    y: int;
}

func fact_iter1121(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1121(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1121(n-1);
    }
}

const n1121 = 1 + sizeof(p1121);

var p1121: T1121*;

struct T1121 {
    a: int[n1121];
}


func example_test1122(): int {
    return fact_rec1122(10) == fact_iter1122(10);
}

union IntOrPtr1122 {
    i: int;
    p: int*;
}

// func f1122() {
//    u1 := IntOrPtr1122{i = 42};
//    u2 := IntOrPtr1122{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1122: int;

struct Vector1122 {
    x: int;
    y: int;
}

func fact_iter1122(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1122(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1122(n-1);
    }
}

const n1122 = 1 + sizeof(p1122);

var p1122: T1122*;

struct T1122 {
    a: int[n1122];
}


func example_test1123(): int {
    return fact_rec1123(10) == fact_iter1123(10);
}

union IntOrPtr1123 {
    i: int;
    p: int*;
}

// func f1123() {
//    u1 := IntOrPtr1123{i = 42};
//    u2 := IntOrPtr1123{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1123: int;

struct Vector1123 {
    x: int;
    y: int;
}

func fact_iter1123(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1123(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1123(n-1);
    }
}

const n1123 = 1 + sizeof(p1123);

var p1123: T1123*;

struct T1123 {
    a: int[n1123];
}


func example_test1124(): int {
    return fact_rec1124(10) == fact_iter1124(10);
}

union IntOrPtr1124 {
    i: int;
    p: int*;
}

// func f1124() {
//    u1 := IntOrPtr1124{i = 42};
//    u2 := IntOrPtr1124{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1124: int;

struct Vector1124 {
    x: int;
    y: int;
}

func fact_iter1124(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1124(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1124(n-1);
    }
}

const n1124 = 1 + sizeof(p1124);

var p1124: T1124*;

struct T1124 {
    a: int[n1124];
}


func example_test1125(): int {
    return fact_rec1125(10) == fact_iter1125(10);
}

union IntOrPtr1125 {
    i: int;
    p: int*;
}

// func f1125() {
//    u1 := IntOrPtr1125{i = 42};
//    u2 := IntOrPtr1125{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1125: int;

struct Vector1125 {
    x: int;
    y: int;
}

func fact_iter1125(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1125(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1125(n-1);
    }
}

const n1125 = 1 + sizeof(p1125);

var p1125: T1125*;

struct T1125 {
    a: int[n1125];
}


func example_test1126(): int {
    return fact_rec1126(10) == fact_iter1126(10);
}

union IntOrPtr1126 {
    i: int;
    p: int*;
}

// func f1126() {
//    u1 := IntOrPtr1126{i = 42};
//    u2 := IntOrPtr1126{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1126: int;

struct Vector1126 {
    x: int;
    y: int;
}

func fact_iter1126(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1126(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1126(n-1);
    }
}

const n1126 = 1 + sizeof(p1126);

var p1126: T1126*;

struct T1126 {
    a: int[n1126];
}


func example_test1127(): int {
    return fact_rec1127(10) == fact_iter1127(10);
}

union IntOrPtr1127 {
    i: int;
    p: int*;
}

// func f1127() {
//    u1 := IntOrPtr1127{i = 42};
//    u2 := IntOrPtr1127{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1127: int;

struct Vector1127 {
    x: int;
    y: int;
}

func fact_iter1127(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1127(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1127(n-1);
    }
}

const n1127 = 1 + sizeof(p1127);

var p1127: T1127*;

struct T1127 {
    a: int[n1127];
}


func example_test1128(): int {
    return fact_rec1128(10) == fact_iter1128(10);
}

union IntOrPtr1128 {
    i: int;
    p: int*;
}

// func f1128() {
//    u1 := IntOrPtr1128{i = 42};
//    u2 := IntOrPtr1128{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1128: int;

struct Vector1128 {
    x: int;
    y: int;
}

func fact_iter1128(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1128(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1128(n-1);
    }
}

const n1128 = 1 + sizeof(p1128);

var p1128: T1128*;

struct T1128 {
    a: int[n1128];
}


func example_test1129(): int {
    return fact_rec1129(10) == fact_iter1129(10);
}

union IntOrPtr1129 {
    i: int;
    p: int*;
}

// func f1129() {
//    u1 := IntOrPtr1129{i = 42};
//    u2 := IntOrPtr1129{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1129: int;

struct Vector1129 {
    x: int;
    y: int;
}

func fact_iter1129(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1129(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1129(n-1);
    }
}

const n1129 = 1 + sizeof(p1129);

var p1129: T1129*;

struct T1129 {
    a: int[n1129];
}


func example_test1130(): int {
    return fact_rec1130(10) == fact_iter1130(10);
}

union IntOrPtr1130 {
    i: int;
    p: int*;
}

// func f1130() {
//    u1 := IntOrPtr1130{i = 42};
//    u2 := IntOrPtr1130{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1130: int;

struct Vector1130 {
    x: int;
    y: int;
}

func fact_iter1130(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1130(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1130(n-1);
    }
}

const n1130 = 1 + sizeof(p1130);

var p1130: T1130*;

struct T1130 {
    a: int[n1130];
}


func example_test1131(): int {
    return fact_rec1131(10) == fact_iter1131(10);
}

union IntOrPtr1131 {
    i: int;
    p: int*;
}

// func f1131() {
//    u1 := IntOrPtr1131{i = 42};
//    u2 := IntOrPtr1131{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1131: int;

struct Vector1131 {
    x: int;
    y: int;
}

func fact_iter1131(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1131(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1131(n-1);
    }
}

const n1131 = 1 + sizeof(p1131);

var p1131: T1131*;

struct T1131 {
    a: int[n1131];
}


func example_test1132(): int {
    return fact_rec1132(10) == fact_iter1132(10);
}

union IntOrPtr1132 {
    i: int;
    p: int*;
}

// func f1132() {
//    u1 := IntOrPtr1132{i = 42};
//    u2 := IntOrPtr1132{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1132: int;

struct Vector1132 {
    x: int;
    y: int;
}

func fact_iter1132(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1132(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1132(n-1);
    }
}

const n1132 = 1 + sizeof(p1132);

var p1132: T1132*;

struct T1132 {
    a: int[n1132];
}


func example_test1133(): int {
    return fact_rec1133(10) == fact_iter1133(10);
}

union IntOrPtr1133 {
    i: int;
    p: int*;
}

// func f1133() {
//    u1 := IntOrPtr1133{i = 42};
//    u2 := IntOrPtr1133{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1133: int;

struct Vector1133 {
    x: int;
    y: int;
}

func fact_iter1133(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1133(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1133(n-1);
    }
}

const n1133 = 1 + sizeof(p1133);

var p1133: T1133*;

struct T1133 {
    a: int[n1133];
}


func example_test1134(): int {
    return fact_rec1134(10) == fact_iter1134(10);
}

union IntOrPtr1134 {
    i: int;
    p: int*;
}

// func f1134() {
//    u1 := IntOrPtr1134{i = 42};
//    u2 := IntOrPtr1134{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1134: int;

struct Vector1134 {
    x: int;
    y: int;
}

func fact_iter1134(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1134(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1134(n-1);
    }
}

const n1134 = 1 + sizeof(p1134);

var p1134: T1134*;

struct T1134 {
    a: int[n1134];
}


func example_test1135(): int {
    return fact_rec1135(10) == fact_iter1135(10);
}

union IntOrPtr1135 {
    i: int;
    p: int*;
}

// func f1135() {
//    u1 := IntOrPtr1135{i = 42};
//    u2 := IntOrPtr1135{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1135: int;

struct Vector1135 {
    x: int;
    y: int;
}

func fact_iter1135(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1135(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1135(n-1);
    }
}

const n1135 = 1 + sizeof(p1135);

var p1135: T1135*;

struct T1135 {
    a: int[n1135];
}


func example_test1136(): int {
    return fact_rec1136(10) == fact_iter1136(10);
}

union IntOrPtr1136 {
    i: int;
    p: int*;
}

// func f1136() {
//    u1 := IntOrPtr1136{i = 42};
//    u2 := IntOrPtr1136{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1136: int;

struct Vector1136 {
    x: int;
    y: int;
}

func fact_iter1136(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1136(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1136(n-1);
    }
}

const n1136 = 1 + sizeof(p1136);

var p1136: T1136*;

struct T1136 {
    a: int[n1136];
}


func example_test1137(): int {
    return fact_rec1137(10) == fact_iter1137(10);
}

union IntOrPtr1137 {
    i: int;
    p: int*;
}

// func f1137() {
//    u1 := IntOrPtr1137{i = 42};
//    u2 := IntOrPtr1137{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1137: int;

struct Vector1137 {
    x: int;
    y: int;
}

func fact_iter1137(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1137(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1137(n-1);
    }
}

const n1137 = 1 + sizeof(p1137);

var p1137: T1137*;

struct T1137 {
    a: int[n1137];
}


func example_test1138(): int {
    return fact_rec1138(10) == fact_iter1138(10);
}

union IntOrPtr1138 {
    i: int;
    p: int*;
}

// func f1138() {
//    u1 := IntOrPtr1138{i = 42};
//    u2 := IntOrPtr1138{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1138: int;

struct Vector1138 {
    x: int;
    y: int;
}

func fact_iter1138(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1138(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1138(n-1);
    }
}

const n1138 = 1 + sizeof(p1138);

var p1138: T1138*;

struct T1138 {
    a: int[n1138];
}


func example_test1139(): int {
    return fact_rec1139(10) == fact_iter1139(10);
}

union IntOrPtr1139 {
    i: int;
    p: int*;
}

// func f1139() {
//    u1 := IntOrPtr1139{i = 42};
//    u2 := IntOrPtr1139{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1139: int;

struct Vector1139 {
    x: int;
    y: int;
}

func fact_iter1139(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1139(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1139(n-1);
    }
}

const n1139 = 1 + sizeof(p1139);

var p1139: T1139*;

struct T1139 {
    a: int[n1139];
}


func example_test1140(): int {
    return fact_rec1140(10) == fact_iter1140(10);
}

union IntOrPtr1140 {
    i: int;
    p: int*;
}

// func f1140() {
//    u1 := IntOrPtr1140{i = 42};
//    u2 := IntOrPtr1140{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1140: int;

struct Vector1140 {
    x: int;
    y: int;
}

func fact_iter1140(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1140(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1140(n-1);
    }
}

const n1140 = 1 + sizeof(p1140);

var p1140: T1140*;

struct T1140 {
    a: int[n1140];
}


func example_test1141(): int {
    return fact_rec1141(10) == fact_iter1141(10);
}

union IntOrPtr1141 {
    i: int;
    p: int*;
}

// func f1141() {
//    u1 := IntOrPtr1141{i = 42};
//    u2 := IntOrPtr1141{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1141: int;

struct Vector1141 {
    x: int;
    y: int;
}

func fact_iter1141(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1141(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1141(n-1);
    }
}

const n1141 = 1 + sizeof(p1141);

var p1141: T1141*;

struct T1141 {
    a: int[n1141];
}


func example_test1142(): int {
    return fact_rec1142(10) == fact_iter1142(10);
}

union IntOrPtr1142 {
    i: int;
    p: int*;
}

// func f1142() {
//    u1 := IntOrPtr1142{i = 42};
//    u2 := IntOrPtr1142{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1142: int;

struct Vector1142 {
    x: int;
    y: int;
}

func fact_iter1142(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1142(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1142(n-1);
    }
}

const n1142 = 1 + sizeof(p1142);

var p1142: T1142*;

struct T1142 {
    a: int[n1142];
}


func example_test1143(): int {
    return fact_rec1143(10) == fact_iter1143(10);
}

union IntOrPtr1143 {
    i: int;
    p: int*;
}

// func f1143() {
//    u1 := IntOrPtr1143{i = 42};
//    u2 := IntOrPtr1143{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1143: int;

struct Vector1143 {
    x: int;
    y: int;
}

func fact_iter1143(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1143(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1143(n-1);
    }
}

const n1143 = 1 + sizeof(p1143);

var p1143: T1143*;

struct T1143 {
    a: int[n1143];
}


func example_test1144(): int {
    return fact_rec1144(10) == fact_iter1144(10);
}

union IntOrPtr1144 {
    i: int;
    p: int*;
}

// func f1144() {
//    u1 := IntOrPtr1144{i = 42};
//    u2 := IntOrPtr1144{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1144: int;

struct Vector1144 {
    x: int;
    y: int;
}

func fact_iter1144(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1144(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1144(n-1);
    }
}

const n1144 = 1 + sizeof(p1144);

var p1144: T1144*;

struct T1144 {
    a: int[n1144];
}


func example_test1145(): int {
    return fact_rec1145(10) == fact_iter1145(10);
}

union IntOrPtr1145 {
    i: int;
    p: int*;
}

// func f1145() {
//    u1 := IntOrPtr1145{i = 42};
//    u2 := IntOrPtr1145{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1145: int;

struct Vector1145 {
    x: int;
    y: int;
}

func fact_iter1145(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1145(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1145(n-1);
    }
}

const n1145 = 1 + sizeof(p1145);

var p1145: T1145*;

struct T1145 {
    a: int[n1145];
}


func example_test1146(): int {
    return fact_rec1146(10) == fact_iter1146(10);
}

union IntOrPtr1146 {
    i: int;
    p: int*;
}

// func f1146() {
//    u1 := IntOrPtr1146{i = 42};
//    u2 := IntOrPtr1146{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1146: int;

struct Vector1146 {
    x: int;
    y: int;
}

func fact_iter1146(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1146(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1146(n-1);
    }
}

const n1146 = 1 + sizeof(p1146);

var p1146: T1146*;

struct T1146 {
    a: int[n1146];
}


func example_test1147(): int {
    return fact_rec1147(10) == fact_iter1147(10);
}

union IntOrPtr1147 {
    i: int;
    p: int*;
}

// func f1147() {
//    u1 := IntOrPtr1147{i = 42};
//    u2 := IntOrPtr1147{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1147: int;

struct Vector1147 {
    x: int;
    y: int;
}

func fact_iter1147(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1147(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1147(n-1);
    }
}

const n1147 = 1 + sizeof(p1147);

var p1147: T1147*;

struct T1147 {
    a: int[n1147];
}


func example_test1148(): int {
    return fact_rec1148(10) == fact_iter1148(10);
}

union IntOrPtr1148 {
    i: int;
    p: int*;
}

// func f1148() {
//    u1 := IntOrPtr1148{i = 42};
//    u2 := IntOrPtr1148{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1148: int;

struct Vector1148 {
    x: int;
    y: int;
}

func fact_iter1148(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1148(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1148(n-1);
    }
}

const n1148 = 1 + sizeof(p1148);

var p1148: T1148*;

struct T1148 {
    a: int[n1148];
}


func example_test1149(): int {
    return fact_rec1149(10) == fact_iter1149(10);
}

union IntOrPtr1149 {
    i: int;
    p: int*;
}

// func f1149() {
//    u1 := IntOrPtr1149{i = 42};
//    u2 := IntOrPtr1149{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1149: int;

struct Vector1149 {
    x: int;
    y: int;
}

func fact_iter1149(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1149(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1149(n-1);
    }
}

const n1149 = 1 + sizeof(p1149);

var p1149: T1149*;

struct T1149 {
    a: int[n1149];
}


func example_test1150(): int {
    return fact_rec1150(10) == fact_iter1150(10);
}

union IntOrPtr1150 {
    i: int;
    p: int*;
}

// func f1150() {
//    u1 := IntOrPtr1150{i = 42};
//    u2 := IntOrPtr1150{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1150: int;

struct Vector1150 {
    x: int;
    y: int;
}

func fact_iter1150(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1150(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1150(n-1);
    }
}

const n1150 = 1 + sizeof(p1150);

var p1150: T1150*;

struct T1150 {
    a: int[n1150];
}


func example_test1151(): int {
    return fact_rec1151(10) == fact_iter1151(10);
}

union IntOrPtr1151 {
    i: int;
    p: int*;
}

// func f1151() {
//    u1 := IntOrPtr1151{i = 42};
//    u2 := IntOrPtr1151{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1151: int;

struct Vector1151 {
    x: int;
    y: int;
}

func fact_iter1151(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1151(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1151(n-1);
    }
}

const n1151 = 1 + sizeof(p1151);

var p1151: T1151*;

struct T1151 {
    a: int[n1151];
}


func example_test1152(): int {
    return fact_rec1152(10) == fact_iter1152(10);
}

union IntOrPtr1152 {
    i: int;
    p: int*;
}

// func f1152() {
//    u1 := IntOrPtr1152{i = 42};
//    u2 := IntOrPtr1152{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1152: int;

struct Vector1152 {
    x: int;
    y: int;
}

func fact_iter1152(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1152(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1152(n-1);
    }
}

const n1152 = 1 + sizeof(p1152);

var p1152: T1152*;

struct T1152 {
    a: int[n1152];
}


func example_test1153(): int {
    return fact_rec1153(10) == fact_iter1153(10);
}

union IntOrPtr1153 {
    i: int;
    p: int*;
}

// func f1153() {
//    u1 := IntOrPtr1153{i = 42};
//    u2 := IntOrPtr1153{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1153: int;

struct Vector1153 {
    x: int;
    y: int;
}

func fact_iter1153(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1153(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1153(n-1);
    }
}

const n1153 = 1 + sizeof(p1153);

var p1153: T1153*;

struct T1153 {
    a: int[n1153];
}


func example_test1154(): int {
    return fact_rec1154(10) == fact_iter1154(10);
}

union IntOrPtr1154 {
    i: int;
    p: int*;
}

// func f1154() {
//    u1 := IntOrPtr1154{i = 42};
//    u2 := IntOrPtr1154{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1154: int;

struct Vector1154 {
    x: int;
    y: int;
}

func fact_iter1154(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1154(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1154(n-1);
    }
}

const n1154 = 1 + sizeof(p1154);

var p1154: T1154*;

struct T1154 {
    a: int[n1154];
}


func example_test1155(): int {
    return fact_rec1155(10) == fact_iter1155(10);
}

union IntOrPtr1155 {
    i: int;
    p: int*;
}

// func f1155() {
//    u1 := IntOrPtr1155{i = 42};
//    u2 := IntOrPtr1155{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1155: int;

struct Vector1155 {
    x: int;
    y: int;
}

func fact_iter1155(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1155(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1155(n-1);
    }
}

const n1155 = 1 + sizeof(p1155);

var p1155: T1155*;

struct T1155 {
    a: int[n1155];
}


func example_test1156(): int {
    return fact_rec1156(10) == fact_iter1156(10);
}

union IntOrPtr1156 {
    i: int;
    p: int*;
}

// func f1156() {
//    u1 := IntOrPtr1156{i = 42};
//    u2 := IntOrPtr1156{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1156: int;

struct Vector1156 {
    x: int;
    y: int;
}

func fact_iter1156(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1156(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1156(n-1);
    }
}

const n1156 = 1 + sizeof(p1156);

var p1156: T1156*;

struct T1156 {
    a: int[n1156];
}


func example_test1157(): int {
    return fact_rec1157(10) == fact_iter1157(10);
}

union IntOrPtr1157 {
    i: int;
    p: int*;
}

// func f1157() {
//    u1 := IntOrPtr1157{i = 42};
//    u2 := IntOrPtr1157{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1157: int;

struct Vector1157 {
    x: int;
    y: int;
}

func fact_iter1157(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1157(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1157(n-1);
    }
}

const n1157 = 1 + sizeof(p1157);

var p1157: T1157*;

struct T1157 {
    a: int[n1157];
}


func example_test1158(): int {
    return fact_rec1158(10) == fact_iter1158(10);
}

union IntOrPtr1158 {
    i: int;
    p: int*;
}

// func f1158() {
//    u1 := IntOrPtr1158{i = 42};
//    u2 := IntOrPtr1158{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1158: int;

struct Vector1158 {
    x: int;
    y: int;
}

func fact_iter1158(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1158(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1158(n-1);
    }
}

const n1158 = 1 + sizeof(p1158);

var p1158: T1158*;

struct T1158 {
    a: int[n1158];
}


func example_test1159(): int {
    return fact_rec1159(10) == fact_iter1159(10);
}

union IntOrPtr1159 {
    i: int;
    p: int*;
}

// func f1159() {
//    u1 := IntOrPtr1159{i = 42};
//    u2 := IntOrPtr1159{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1159: int;

struct Vector1159 {
    x: int;
    y: int;
}

func fact_iter1159(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1159(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1159(n-1);
    }
}

const n1159 = 1 + sizeof(p1159);

var p1159: T1159*;

struct T1159 {
    a: int[n1159];
}


func example_test1160(): int {
    return fact_rec1160(10) == fact_iter1160(10);
}

union IntOrPtr1160 {
    i: int;
    p: int*;
}

// func f1160() {
//    u1 := IntOrPtr1160{i = 42};
//    u2 := IntOrPtr1160{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1160: int;

struct Vector1160 {
    x: int;
    y: int;
}

func fact_iter1160(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1160(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1160(n-1);
    }
}

const n1160 = 1 + sizeof(p1160);

var p1160: T1160*;

struct T1160 {
    a: int[n1160];
}


func example_test1161(): int {
    return fact_rec1161(10) == fact_iter1161(10);
}

union IntOrPtr1161 {
    i: int;
    p: int*;
}

// func f1161() {
//    u1 := IntOrPtr1161{i = 42};
//    u2 := IntOrPtr1161{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1161: int;

struct Vector1161 {
    x: int;
    y: int;
}

func fact_iter1161(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1161(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1161(n-1);
    }
}

const n1161 = 1 + sizeof(p1161);

var p1161: T1161*;

struct T1161 {
    a: int[n1161];
}


func example_test1162(): int {
    return fact_rec1162(10) == fact_iter1162(10);
}

union IntOrPtr1162 {
    i: int;
    p: int*;
}

// func f1162() {
//    u1 := IntOrPtr1162{i = 42};
//    u2 := IntOrPtr1162{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1162: int;

struct Vector1162 {
    x: int;
    y: int;
}

func fact_iter1162(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1162(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1162(n-1);
    }
}

const n1162 = 1 + sizeof(p1162);

var p1162: T1162*;

struct T1162 {
    a: int[n1162];
}


func example_test1163(): int {
    return fact_rec1163(10) == fact_iter1163(10);
}

union IntOrPtr1163 {
    i: int;
    p: int*;
}

// func f1163() {
//    u1 := IntOrPtr1163{i = 42};
//    u2 := IntOrPtr1163{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1163: int;

struct Vector1163 {
    x: int;
    y: int;
}

func fact_iter1163(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1163(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1163(n-1);
    }
}

const n1163 = 1 + sizeof(p1163);

var p1163: T1163*;

struct T1163 {
    a: int[n1163];
}


func example_test1164(): int {
    return fact_rec1164(10) == fact_iter1164(10);
}

union IntOrPtr1164 {
    i: int;
    p: int*;
}

// func f1164() {
//    u1 := IntOrPtr1164{i = 42};
//    u2 := IntOrPtr1164{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1164: int;

struct Vector1164 {
    x: int;
    y: int;
}

func fact_iter1164(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1164(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1164(n-1);
    }
}

const n1164 = 1 + sizeof(p1164);

var p1164: T1164*;

struct T1164 {
    a: int[n1164];
}


func example_test1165(): int {
    return fact_rec1165(10) == fact_iter1165(10);
}

union IntOrPtr1165 {
    i: int;
    p: int*;
}

// func f1165() {
//    u1 := IntOrPtr1165{i = 42};
//    u2 := IntOrPtr1165{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1165: int;

struct Vector1165 {
    x: int;
    y: int;
}

func fact_iter1165(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1165(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1165(n-1);
    }
}

const n1165 = 1 + sizeof(p1165);

var p1165: T1165*;

struct T1165 {
    a: int[n1165];
}


func example_test1166(): int {
    return fact_rec1166(10) == fact_iter1166(10);
}

union IntOrPtr1166 {
    i: int;
    p: int*;
}

// func f1166() {
//    u1 := IntOrPtr1166{i = 42};
//    u2 := IntOrPtr1166{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1166: int;

struct Vector1166 {
    x: int;
    y: int;
}

func fact_iter1166(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1166(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1166(n-1);
    }
}

const n1166 = 1 + sizeof(p1166);

var p1166: T1166*;

struct T1166 {
    a: int[n1166];
}


func example_test1167(): int {
    return fact_rec1167(10) == fact_iter1167(10);
}

union IntOrPtr1167 {
    i: int;
    p: int*;
}

// func f1167() {
//    u1 := IntOrPtr1167{i = 42};
//    u2 := IntOrPtr1167{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1167: int;

struct Vector1167 {
    x: int;
    y: int;
}

func fact_iter1167(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1167(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1167(n-1);
    }
}

const n1167 = 1 + sizeof(p1167);

var p1167: T1167*;

struct T1167 {
    a: int[n1167];
}


func example_test1168(): int {
    return fact_rec1168(10) == fact_iter1168(10);
}

union IntOrPtr1168 {
    i: int;
    p: int*;
}

// func f1168() {
//    u1 := IntOrPtr1168{i = 42};
//    u2 := IntOrPtr1168{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1168: int;

struct Vector1168 {
    x: int;
    y: int;
}

func fact_iter1168(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1168(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1168(n-1);
    }
}

const n1168 = 1 + sizeof(p1168);

var p1168: T1168*;

struct T1168 {
    a: int[n1168];
}


func example_test1169(): int {
    return fact_rec1169(10) == fact_iter1169(10);
}

union IntOrPtr1169 {
    i: int;
    p: int*;
}

// func f1169() {
//    u1 := IntOrPtr1169{i = 42};
//    u2 := IntOrPtr1169{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1169: int;

struct Vector1169 {
    x: int;
    y: int;
}

func fact_iter1169(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1169(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1169(n-1);
    }
}

const n1169 = 1 + sizeof(p1169);

var p1169: T1169*;

struct T1169 {
    a: int[n1169];
}


func example_test1170(): int {
    return fact_rec1170(10) == fact_iter1170(10);
}

union IntOrPtr1170 {
    i: int;
    p: int*;
}

// func f1170() {
//    u1 := IntOrPtr1170{i = 42};
//    u2 := IntOrPtr1170{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1170: int;

struct Vector1170 {
    x: int;
    y: int;
}

func fact_iter1170(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1170(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1170(n-1);
    }
}

const n1170 = 1 + sizeof(p1170);

var p1170: T1170*;

struct T1170 {
    a: int[n1170];
}


func example_test1171(): int {
    return fact_rec1171(10) == fact_iter1171(10);
}

union IntOrPtr1171 {
    i: int;
    p: int*;
}

// func f1171() {
//    u1 := IntOrPtr1171{i = 42};
//    u2 := IntOrPtr1171{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1171: int;

struct Vector1171 {
    x: int;
    y: int;
}

func fact_iter1171(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1171(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1171(n-1);
    }
}

const n1171 = 1 + sizeof(p1171);

var p1171: T1171*;

struct T1171 {
    a: int[n1171];
}


func example_test1172(): int {
    return fact_rec1172(10) == fact_iter1172(10);
}

union IntOrPtr1172 {
    i: int;
    p: int*;
}

// func f1172() {
//    u1 := IntOrPtr1172{i = 42};
//    u2 := IntOrPtr1172{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1172: int;

struct Vector1172 {
    x: int;
    y: int;
}

func fact_iter1172(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1172(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1172(n-1);
    }
}

const n1172 = 1 + sizeof(p1172);

var p1172: T1172*;

struct T1172 {
    a: int[n1172];
}


func example_test1173(): int {
    return fact_rec1173(10) == fact_iter1173(10);
}

union IntOrPtr1173 {
    i: int;
    p: int*;
}

// func f1173() {
//    u1 := IntOrPtr1173{i = 42};
//    u2 := IntOrPtr1173{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1173: int;

struct Vector1173 {
    x: int;
    y: int;
}

func fact_iter1173(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1173(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1173(n-1);
    }
}

const n1173 = 1 + sizeof(p1173);

var p1173: T1173*;

struct T1173 {
    a: int[n1173];
}


func example_test1174(): int {
    return fact_rec1174(10) == fact_iter1174(10);
}

union IntOrPtr1174 {
    i: int;
    p: int*;
}

// func f1174() {
//    u1 := IntOrPtr1174{i = 42};
//    u2 := IntOrPtr1174{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1174: int;

struct Vector1174 {
    x: int;
    y: int;
}

func fact_iter1174(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1174(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1174(n-1);
    }
}

const n1174 = 1 + sizeof(p1174);

var p1174: T1174*;

struct T1174 {
    a: int[n1174];
}


func example_test1175(): int {
    return fact_rec1175(10) == fact_iter1175(10);
}

union IntOrPtr1175 {
    i: int;
    p: int*;
}

// func f1175() {
//    u1 := IntOrPtr1175{i = 42};
//    u2 := IntOrPtr1175{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1175: int;

struct Vector1175 {
    x: int;
    y: int;
}

func fact_iter1175(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1175(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1175(n-1);
    }
}

const n1175 = 1 + sizeof(p1175);

var p1175: T1175*;

struct T1175 {
    a: int[n1175];
}


func example_test1176(): int {
    return fact_rec1176(10) == fact_iter1176(10);
}

union IntOrPtr1176 {
    i: int;
    p: int*;
}

// func f1176() {
//    u1 := IntOrPtr1176{i = 42};
//    u2 := IntOrPtr1176{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1176: int;

struct Vector1176 {
    x: int;
    y: int;
}

func fact_iter1176(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1176(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1176(n-1);
    }
}

const n1176 = 1 + sizeof(p1176);

var p1176: T1176*;

struct T1176 {
    a: int[n1176];
}


func example_test1177(): int {
    return fact_rec1177(10) == fact_iter1177(10);
}

union IntOrPtr1177 {
    i: int;
    p: int*;
}

// func f1177() {
//    u1 := IntOrPtr1177{i = 42};
//    u2 := IntOrPtr1177{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1177: int;

struct Vector1177 {
    x: int;
    y: int;
}

func fact_iter1177(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1177(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1177(n-1);
    }
}

const n1177 = 1 + sizeof(p1177);

var p1177: T1177*;

struct T1177 {
    a: int[n1177];
}


func example_test1178(): int {
    return fact_rec1178(10) == fact_iter1178(10);
}

union IntOrPtr1178 {
    i: int;
    p: int*;
}

// func f1178() {
//    u1 := IntOrPtr1178{i = 42};
//    u2 := IntOrPtr1178{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1178: int;

struct Vector1178 {
    x: int;
    y: int;
}

func fact_iter1178(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1178(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1178(n-1);
    }
}

const n1178 = 1 + sizeof(p1178);

var p1178: T1178*;

struct T1178 {
    a: int[n1178];
}


func example_test1179(): int {
    return fact_rec1179(10) == fact_iter1179(10);
}

union IntOrPtr1179 {
    i: int;
    p: int*;
}

// func f1179() {
//    u1 := IntOrPtr1179{i = 42};
//    u2 := IntOrPtr1179{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1179: int;

struct Vector1179 {
    x: int;
    y: int;
}

func fact_iter1179(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1179(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1179(n-1);
    }
}

const n1179 = 1 + sizeof(p1179);

var p1179: T1179*;

struct T1179 {
    a: int[n1179];
}


func example_test1180(): int {
    return fact_rec1180(10) == fact_iter1180(10);
}

union IntOrPtr1180 {
    i: int;
    p: int*;
}

// func f1180() {
//    u1 := IntOrPtr1180{i = 42};
//    u2 := IntOrPtr1180{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1180: int;

struct Vector1180 {
    x: int;
    y: int;
}

func fact_iter1180(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1180(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1180(n-1);
    }
}

const n1180 = 1 + sizeof(p1180);

var p1180: T1180*;

struct T1180 {
    a: int[n1180];
}


func example_test1181(): int {
    return fact_rec1181(10) == fact_iter1181(10);
}

union IntOrPtr1181 {
    i: int;
    p: int*;
}

// func f1181() {
//    u1 := IntOrPtr1181{i = 42};
//    u2 := IntOrPtr1181{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1181: int;

struct Vector1181 {
    x: int;
    y: int;
}

func fact_iter1181(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1181(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1181(n-1);
    }
}

const n1181 = 1 + sizeof(p1181);

var p1181: T1181*;

struct T1181 {
    a: int[n1181];
}


func example_test1182(): int {
    return fact_rec1182(10) == fact_iter1182(10);
}

union IntOrPtr1182 {
    i: int;
    p: int*;
}

// func f1182() {
//    u1 := IntOrPtr1182{i = 42};
//    u2 := IntOrPtr1182{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1182: int;

struct Vector1182 {
    x: int;
    y: int;
}

func fact_iter1182(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1182(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1182(n-1);
    }
}

const n1182 = 1 + sizeof(p1182);

var p1182: T1182*;

struct T1182 {
    a: int[n1182];
}


func example_test1183(): int {
    return fact_rec1183(10) == fact_iter1183(10);
}

union IntOrPtr1183 {
    i: int;
    p: int*;
}

// func f1183() {
//    u1 := IntOrPtr1183{i = 42};
//    u2 := IntOrPtr1183{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1183: int;

struct Vector1183 {
    x: int;
    y: int;
}

func fact_iter1183(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1183(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1183(n-1);
    }
}

const n1183 = 1 + sizeof(p1183);

var p1183: T1183*;

struct T1183 {
    a: int[n1183];
}


func example_test1184(): int {
    return fact_rec1184(10) == fact_iter1184(10);
}

union IntOrPtr1184 {
    i: int;
    p: int*;
}

// func f1184() {
//    u1 := IntOrPtr1184{i = 42};
//    u2 := IntOrPtr1184{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1184: int;

struct Vector1184 {
    x: int;
    y: int;
}

func fact_iter1184(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1184(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1184(n-1);
    }
}

const n1184 = 1 + sizeof(p1184);

var p1184: T1184*;

struct T1184 {
    a: int[n1184];
}


func example_test1185(): int {
    return fact_rec1185(10) == fact_iter1185(10);
}

union IntOrPtr1185 {
    i: int;
    p: int*;
}

// func f1185() {
//    u1 := IntOrPtr1185{i = 42};
//    u2 := IntOrPtr1185{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1185: int;

struct Vector1185 {
    x: int;
    y: int;
}

func fact_iter1185(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1185(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1185(n-1);
    }
}

const n1185 = 1 + sizeof(p1185);

var p1185: T1185*;

struct T1185 {
    a: int[n1185];
}


func example_test1186(): int {
    return fact_rec1186(10) == fact_iter1186(10);
}

union IntOrPtr1186 {
    i: int;
    p: int*;
}

// func f1186() {
//    u1 := IntOrPtr1186{i = 42};
//    u2 := IntOrPtr1186{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1186: int;

struct Vector1186 {
    x: int;
    y: int;
}

func fact_iter1186(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1186(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1186(n-1);
    }
}

const n1186 = 1 + sizeof(p1186);

var p1186: T1186*;

struct T1186 {
    a: int[n1186];
}


func example_test1187(): int {
    return fact_rec1187(10) == fact_iter1187(10);
}

union IntOrPtr1187 {
    i: int;
    p: int*;
}

// func f1187() {
//    u1 := IntOrPtr1187{i = 42};
//    u2 := IntOrPtr1187{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1187: int;

struct Vector1187 {
    x: int;
    y: int;
}

func fact_iter1187(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1187(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1187(n-1);
    }
}

const n1187 = 1 + sizeof(p1187);

var p1187: T1187*;

struct T1187 {
    a: int[n1187];
}


func example_test1188(): int {
    return fact_rec1188(10) == fact_iter1188(10);
}

union IntOrPtr1188 {
    i: int;
    p: int*;
}

// func f1188() {
//    u1 := IntOrPtr1188{i = 42};
//    u2 := IntOrPtr1188{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1188: int;

struct Vector1188 {
    x: int;
    y: int;
}

func fact_iter1188(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1188(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1188(n-1);
    }
}

const n1188 = 1 + sizeof(p1188);

var p1188: T1188*;

struct T1188 {
    a: int[n1188];
}


func example_test1189(): int {
    return fact_rec1189(10) == fact_iter1189(10);
}

union IntOrPtr1189 {
    i: int;
    p: int*;
}

// func f1189() {
//    u1 := IntOrPtr1189{i = 42};
//    u2 := IntOrPtr1189{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1189: int;

struct Vector1189 {
    x: int;
    y: int;
}

func fact_iter1189(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1189(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1189(n-1);
    }
}

const n1189 = 1 + sizeof(p1189);

var p1189: T1189*;

struct T1189 {
    a: int[n1189];
}


func example_test1190(): int {
    return fact_rec1190(10) == fact_iter1190(10);
}

union IntOrPtr1190 {
    i: int;
    p: int*;
}

// func f1190() {
//    u1 := IntOrPtr1190{i = 42};
//    u2 := IntOrPtr1190{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1190: int;

struct Vector1190 {
    x: int;
    y: int;
}

func fact_iter1190(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1190(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1190(n-1);
    }
}

const n1190 = 1 + sizeof(p1190);

var p1190: T1190*;

struct T1190 {
    a: int[n1190];
}


func example_test1191(): int {
    return fact_rec1191(10) == fact_iter1191(10);
}

union IntOrPtr1191 {
    i: int;
    p: int*;
}

// func f1191() {
//    u1 := IntOrPtr1191{i = 42};
//    u2 := IntOrPtr1191{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1191: int;

struct Vector1191 {
    x: int;
    y: int;
}

func fact_iter1191(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1191(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1191(n-1);
    }
}

const n1191 = 1 + sizeof(p1191);

var p1191: T1191*;

struct T1191 {
    a: int[n1191];
}


func example_test1192(): int {
    return fact_rec1192(10) == fact_iter1192(10);
}

union IntOrPtr1192 {
    i: int;
    p: int*;
}

// func f1192() {
//    u1 := IntOrPtr1192{i = 42};
//    u2 := IntOrPtr1192{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1192: int;

struct Vector1192 {
    x: int;
    y: int;
}

func fact_iter1192(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1192(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1192(n-1);
    }
}

const n1192 = 1 + sizeof(p1192);

var p1192: T1192*;

struct T1192 {
    a: int[n1192];
}


func example_test1193(): int {
    return fact_rec1193(10) == fact_iter1193(10);
}

union IntOrPtr1193 {
    i: int;
    p: int*;
}

// func f1193() {
//    u1 := IntOrPtr1193{i = 42};
//    u2 := IntOrPtr1193{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1193: int;

struct Vector1193 {
    x: int;
    y: int;
}

func fact_iter1193(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1193(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1193(n-1);
    }
}

const n1193 = 1 + sizeof(p1193);

var p1193: T1193*;

struct T1193 {
    a: int[n1193];
}


func example_test1194(): int {
    return fact_rec1194(10) == fact_iter1194(10);
}

union IntOrPtr1194 {
    i: int;
    p: int*;
}

// func f1194() {
//    u1 := IntOrPtr1194{i = 42};
//    u2 := IntOrPtr1194{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1194: int;

struct Vector1194 {
    x: int;
    y: int;
}

func fact_iter1194(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1194(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1194(n-1);
    }
}

const n1194 = 1 + sizeof(p1194);

var p1194: T1194*;

struct T1194 {
    a: int[n1194];
}


func example_test1195(): int {
    return fact_rec1195(10) == fact_iter1195(10);
}

union IntOrPtr1195 {
    i: int;
    p: int*;
}

// func f1195() {
//    u1 := IntOrPtr1195{i = 42};
//    u2 := IntOrPtr1195{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1195: int;

struct Vector1195 {
    x: int;
    y: int;
}

func fact_iter1195(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1195(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1195(n-1);
    }
}

const n1195 = 1 + sizeof(p1195);

var p1195: T1195*;

struct T1195 {
    a: int[n1195];
}


func example_test1196(): int {
    return fact_rec1196(10) == fact_iter1196(10);
}

union IntOrPtr1196 {
    i: int;
    p: int*;
}

// func f1196() {
//    u1 := IntOrPtr1196{i = 42};
//    u2 := IntOrPtr1196{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1196: int;

struct Vector1196 {
    x: int;
    y: int;
}

func fact_iter1196(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1196(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1196(n-1);
    }
}

const n1196 = 1 + sizeof(p1196);

var p1196: T1196*;

struct T1196 {
    a: int[n1196];
}


func example_test1197(): int {
    return fact_rec1197(10) == fact_iter1197(10);
}

union IntOrPtr1197 {
    i: int;
    p: int*;
}

// func f1197() {
//    u1 := IntOrPtr1197{i = 42};
//    u2 := IntOrPtr1197{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1197: int;

struct Vector1197 {
    x: int;
    y: int;
}

func fact_iter1197(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1197(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1197(n-1);
    }
}

const n1197 = 1 + sizeof(p1197);

var p1197: T1197*;

struct T1197 {
    a: int[n1197];
}


func example_test1198(): int {
    return fact_rec1198(10) == fact_iter1198(10);
}

union IntOrPtr1198 {
    i: int;
    p: int*;
}

// func f1198() {
//    u1 := IntOrPtr1198{i = 42};
//    u2 := IntOrPtr1198{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1198: int;

struct Vector1198 {
    x: int;
    y: int;
}

func fact_iter1198(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1198(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1198(n-1);
    }
}

const n1198 = 1 + sizeof(p1198);

var p1198: T1198*;

struct T1198 {
    a: int[n1198];
}


func example_test1199(): int {
    return fact_rec1199(10) == fact_iter1199(10);
}

union IntOrPtr1199 {
    i: int;
    p: int*;
}

// func f1199() {
//    u1 := IntOrPtr1199{i = 42};
//    u2 := IntOrPtr1199{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1199: int;

struct Vector1199 {
    x: int;
    y: int;
}

func fact_iter1199(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1199(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1199(n-1);
    }
}

const n1199 = 1 + sizeof(p1199);

var p1199: T1199*;

struct T1199 {
    a: int[n1199];
}


func example_test1200(): int {
    return fact_rec1200(10) == fact_iter1200(10);
}

union IntOrPtr1200 {
    i: int;
    p: int*;
}

// func f1200() {
//    u1 := IntOrPtr1200{i = 42};
//    u2 := IntOrPtr1200{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1200: int;

struct Vector1200 {
    x: int;
    y: int;
}

func fact_iter1200(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1200(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1200(n-1);
    }
}

const n1200 = 1 + sizeof(p1200);

var p1200: T1200*;

struct T1200 {
    a: int[n1200];
}


func example_test1201(): int {
    return fact_rec1201(10) == fact_iter1201(10);
}

union IntOrPtr1201 {
    i: int;
    p: int*;
}

// func f1201() {
//    u1 := IntOrPtr1201{i = 42};
//    u2 := IntOrPtr1201{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1201: int;

struct Vector1201 {
    x: int;
    y: int;
}

func fact_iter1201(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1201(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1201(n-1);
    }
}

const n1201 = 1 + sizeof(p1201);

var p1201: T1201*;

struct T1201 {
    a: int[n1201];
}


func example_test1202(): int {
    return fact_rec1202(10) == fact_iter1202(10);
}

union IntOrPtr1202 {
    i: int;
    p: int*;
}

// func f1202() {
//    u1 := IntOrPtr1202{i = 42};
//    u2 := IntOrPtr1202{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1202: int;

struct Vector1202 {
    x: int;
    y: int;
}

func fact_iter1202(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1202(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1202(n-1);
    }
}

const n1202 = 1 + sizeof(p1202);

var p1202: T1202*;

struct T1202 {
    a: int[n1202];
}


func example_test1203(): int {
    return fact_rec1203(10) == fact_iter1203(10);
}

union IntOrPtr1203 {
    i: int;
    p: int*;
}

// func f1203() {
//    u1 := IntOrPtr1203{i = 42};
//    u2 := IntOrPtr1203{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1203: int;

struct Vector1203 {
    x: int;
    y: int;
}

func fact_iter1203(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1203(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1203(n-1);
    }
}

const n1203 = 1 + sizeof(p1203);

var p1203: T1203*;

struct T1203 {
    a: int[n1203];
}


func example_test1204(): int {
    return fact_rec1204(10) == fact_iter1204(10);
}

union IntOrPtr1204 {
    i: int;
    p: int*;
}

// func f1204() {
//    u1 := IntOrPtr1204{i = 42};
//    u2 := IntOrPtr1204{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1204: int;

struct Vector1204 {
    x: int;
    y: int;
}

func fact_iter1204(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1204(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1204(n-1);
    }
}

const n1204 = 1 + sizeof(p1204);

var p1204: T1204*;

struct T1204 {
    a: int[n1204];
}


func example_test1205(): int {
    return fact_rec1205(10) == fact_iter1205(10);
}

union IntOrPtr1205 {
    i: int;
    p: int*;
}

// func f1205() {
//    u1 := IntOrPtr1205{i = 42};
//    u2 := IntOrPtr1205{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1205: int;

struct Vector1205 {
    x: int;
    y: int;
}

func fact_iter1205(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1205(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1205(n-1);
    }
}

const n1205 = 1 + sizeof(p1205);

var p1205: T1205*;

struct T1205 {
    a: int[n1205];
}


func example_test1206(): int {
    return fact_rec1206(10) == fact_iter1206(10);
}

union IntOrPtr1206 {
    i: int;
    p: int*;
}

// func f1206() {
//    u1 := IntOrPtr1206{i = 42};
//    u2 := IntOrPtr1206{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1206: int;

struct Vector1206 {
    x: int;
    y: int;
}

func fact_iter1206(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1206(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1206(n-1);
    }
}

const n1206 = 1 + sizeof(p1206);

var p1206: T1206*;

struct T1206 {
    a: int[n1206];
}


func example_test1207(): int {
    return fact_rec1207(10) == fact_iter1207(10);
}

union IntOrPtr1207 {
    i: int;
    p: int*;
}

// func f1207() {
//    u1 := IntOrPtr1207{i = 42};
//    u2 := IntOrPtr1207{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1207: int;

struct Vector1207 {
    x: int;
    y: int;
}

func fact_iter1207(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1207(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1207(n-1);
    }
}

const n1207 = 1 + sizeof(p1207);

var p1207: T1207*;

struct T1207 {
    a: int[n1207];
}


func example_test1208(): int {
    return fact_rec1208(10) == fact_iter1208(10);
}

union IntOrPtr1208 {
    i: int;
    p: int*;
}

// func f1208() {
//    u1 := IntOrPtr1208{i = 42};
//    u2 := IntOrPtr1208{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1208: int;

struct Vector1208 {
    x: int;
    y: int;
}

func fact_iter1208(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1208(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1208(n-1);
    }
}

const n1208 = 1 + sizeof(p1208);

var p1208: T1208*;

struct T1208 {
    a: int[n1208];
}


func example_test1209(): int {
    return fact_rec1209(10) == fact_iter1209(10);
}

union IntOrPtr1209 {
    i: int;
    p: int*;
}

// func f1209() {
//    u1 := IntOrPtr1209{i = 42};
//    u2 := IntOrPtr1209{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1209: int;

struct Vector1209 {
    x: int;
    y: int;
}

func fact_iter1209(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1209(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1209(n-1);
    }
}

const n1209 = 1 + sizeof(p1209);

var p1209: T1209*;

struct T1209 {
    a: int[n1209];
}


func example_test1210(): int {
    return fact_rec1210(10) == fact_iter1210(10);
}

union IntOrPtr1210 {
    i: int;
    p: int*;
}

// func f1210() {
//    u1 := IntOrPtr1210{i = 42};
//    u2 := IntOrPtr1210{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1210: int;

struct Vector1210 {
    x: int;
    y: int;
}

func fact_iter1210(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1210(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1210(n-1);
    }
}

const n1210 = 1 + sizeof(p1210);

var p1210: T1210*;

struct T1210 {
    a: int[n1210];
}


func example_test1211(): int {
    return fact_rec1211(10) == fact_iter1211(10);
}

union IntOrPtr1211 {
    i: int;
    p: int*;
}

// func f1211() {
//    u1 := IntOrPtr1211{i = 42};
//    u2 := IntOrPtr1211{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1211: int;

struct Vector1211 {
    x: int;
    y: int;
}

func fact_iter1211(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1211(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1211(n-1);
    }
}

const n1211 = 1 + sizeof(p1211);

var p1211: T1211*;

struct T1211 {
    a: int[n1211];
}


func example_test1212(): int {
    return fact_rec1212(10) == fact_iter1212(10);
}

union IntOrPtr1212 {
    i: int;
    p: int*;
}

// func f1212() {
//    u1 := IntOrPtr1212{i = 42};
//    u2 := IntOrPtr1212{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1212: int;

struct Vector1212 {
    x: int;
    y: int;
}

func fact_iter1212(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1212(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1212(n-1);
    }
}

const n1212 = 1 + sizeof(p1212);

var p1212: T1212*;

struct T1212 {
    a: int[n1212];
}


func example_test1213(): int {
    return fact_rec1213(10) == fact_iter1213(10);
}

union IntOrPtr1213 {
    i: int;
    p: int*;
}

// func f1213() {
//    u1 := IntOrPtr1213{i = 42};
//    u2 := IntOrPtr1213{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1213: int;

struct Vector1213 {
    x: int;
    y: int;
}

func fact_iter1213(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1213(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1213(n-1);
    }
}

const n1213 = 1 + sizeof(p1213);

var p1213: T1213*;

struct T1213 {
    a: int[n1213];
}


func example_test1214(): int {
    return fact_rec1214(10) == fact_iter1214(10);
}

union IntOrPtr1214 {
    i: int;
    p: int*;
}

// func f1214() {
//    u1 := IntOrPtr1214{i = 42};
//    u2 := IntOrPtr1214{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1214: int;

struct Vector1214 {
    x: int;
    y: int;
}

func fact_iter1214(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1214(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1214(n-1);
    }
}

const n1214 = 1 + sizeof(p1214);

var p1214: T1214*;

struct T1214 {
    a: int[n1214];
}


func example_test1215(): int {
    return fact_rec1215(10) == fact_iter1215(10);
}

union IntOrPtr1215 {
    i: int;
    p: int*;
}

// func f1215() {
//    u1 := IntOrPtr1215{i = 42};
//    u2 := IntOrPtr1215{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1215: int;

struct Vector1215 {
    x: int;
    y: int;
}

func fact_iter1215(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1215(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1215(n-1);
    }
}

const n1215 = 1 + sizeof(p1215);

var p1215: T1215*;

struct T1215 {
    a: int[n1215];
}


func example_test1216(): int {
    return fact_rec1216(10) == fact_iter1216(10);
}

union IntOrPtr1216 {
    i: int;
    p: int*;
}

// func f1216() {
//    u1 := IntOrPtr1216{i = 42};
//    u2 := IntOrPtr1216{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1216: int;

struct Vector1216 {
    x: int;
    y: int;
}

func fact_iter1216(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1216(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1216(n-1);
    }
}

const n1216 = 1 + sizeof(p1216);

var p1216: T1216*;

struct T1216 {
    a: int[n1216];
}


func example_test1217(): int {
    return fact_rec1217(10) == fact_iter1217(10);
}

union IntOrPtr1217 {
    i: int;
    p: int*;
}

// func f1217() {
//    u1 := IntOrPtr1217{i = 42};
//    u2 := IntOrPtr1217{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1217: int;

struct Vector1217 {
    x: int;
    y: int;
}

func fact_iter1217(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1217(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1217(n-1);
    }
}

const n1217 = 1 + sizeof(p1217);

var p1217: T1217*;

struct T1217 {
    a: int[n1217];
}


func example_test1218(): int {
    return fact_rec1218(10) == fact_iter1218(10);
}

union IntOrPtr1218 {
    i: int;
    p: int*;
}

// func f1218() {
//    u1 := IntOrPtr1218{i = 42};
//    u2 := IntOrPtr1218{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1218: int;

struct Vector1218 {
    x: int;
    y: int;
}

func fact_iter1218(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1218(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1218(n-1);
    }
}

const n1218 = 1 + sizeof(p1218);

var p1218: T1218*;

struct T1218 {
    a: int[n1218];
}


func example_test1219(): int {
    return fact_rec1219(10) == fact_iter1219(10);
}

union IntOrPtr1219 {
    i: int;
    p: int*;
}

// func f1219() {
//    u1 := IntOrPtr1219{i = 42};
//    u2 := IntOrPtr1219{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1219: int;

struct Vector1219 {
    x: int;
    y: int;
}

func fact_iter1219(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1219(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1219(n-1);
    }
}

const n1219 = 1 + sizeof(p1219);

var p1219: T1219*;

struct T1219 {
    a: int[n1219];
}


func example_test1220(): int {
    return fact_rec1220(10) == fact_iter1220(10);
}

union IntOrPtr1220 {
    i: int;
    p: int*;
}

// func f1220() {
//    u1 := IntOrPtr1220{i = 42};
//    u2 := IntOrPtr1220{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1220: int;

struct Vector1220 {
    x: int;
    y: int;
}

func fact_iter1220(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1220(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1220(n-1);
    }
}

const n1220 = 1 + sizeof(p1220);

var p1220: T1220*;

struct T1220 {
    a: int[n1220];
}


func example_test1221(): int {
    return fact_rec1221(10) == fact_iter1221(10);
}

union IntOrPtr1221 {
    i: int;
    p: int*;
}

// func f1221() {
//    u1 := IntOrPtr1221{i = 42};
//    u2 := IntOrPtr1221{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1221: int;

struct Vector1221 {
    x: int;
    y: int;
}

func fact_iter1221(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1221(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1221(n-1);
    }
}

const n1221 = 1 + sizeof(p1221);

var p1221: T1221*;

struct T1221 {
    a: int[n1221];
}


func example_test1222(): int {
    return fact_rec1222(10) == fact_iter1222(10);
}

union IntOrPtr1222 {
    i: int;
    p: int*;
}

// func f1222() {
//    u1 := IntOrPtr1222{i = 42};
//    u2 := IntOrPtr1222{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1222: int;

struct Vector1222 {
    x: int;
    y: int;
}

func fact_iter1222(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1222(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1222(n-1);
    }
}

const n1222 = 1 + sizeof(p1222);

var p1222: T1222*;

struct T1222 {
    a: int[n1222];
}


func example_test1223(): int {
    return fact_rec1223(10) == fact_iter1223(10);
}

union IntOrPtr1223 {
    i: int;
    p: int*;
}

// func f1223() {
//    u1 := IntOrPtr1223{i = 42};
//    u2 := IntOrPtr1223{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1223: int;

struct Vector1223 {
    x: int;
    y: int;
}

func fact_iter1223(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1223(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1223(n-1);
    }
}

const n1223 = 1 + sizeof(p1223);

var p1223: T1223*;

struct T1223 {
    a: int[n1223];
}


func example_test1224(): int {
    return fact_rec1224(10) == fact_iter1224(10);
}

union IntOrPtr1224 {
    i: int;
    p: int*;
}

// func f1224() {
//    u1 := IntOrPtr1224{i = 42};
//    u2 := IntOrPtr1224{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1224: int;

struct Vector1224 {
    x: int;
    y: int;
}

func fact_iter1224(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1224(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1224(n-1);
    }
}

const n1224 = 1 + sizeof(p1224);

var p1224: T1224*;

struct T1224 {
    a: int[n1224];
}


func example_test1225(): int {
    return fact_rec1225(10) == fact_iter1225(10);
}

union IntOrPtr1225 {
    i: int;
    p: int*;
}

// func f1225() {
//    u1 := IntOrPtr1225{i = 42};
//    u2 := IntOrPtr1225{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1225: int;

struct Vector1225 {
    x: int;
    y: int;
}

func fact_iter1225(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1225(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1225(n-1);
    }
}

const n1225 = 1 + sizeof(p1225);

var p1225: T1225*;

struct T1225 {
    a: int[n1225];
}


func example_test1226(): int {
    return fact_rec1226(10) == fact_iter1226(10);
}

union IntOrPtr1226 {
    i: int;
    p: int*;
}

// func f1226() {
//    u1 := IntOrPtr1226{i = 42};
//    u2 := IntOrPtr1226{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1226: int;

struct Vector1226 {
    x: int;
    y: int;
}

func fact_iter1226(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1226(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1226(n-1);
    }
}

const n1226 = 1 + sizeof(p1226);

var p1226: T1226*;

struct T1226 {
    a: int[n1226];
}


func example_test1227(): int {
    return fact_rec1227(10) == fact_iter1227(10);
}

union IntOrPtr1227 {
    i: int;
    p: int*;
}

// func f1227() {
//    u1 := IntOrPtr1227{i = 42};
//    u2 := IntOrPtr1227{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1227: int;

struct Vector1227 {
    x: int;
    y: int;
}

func fact_iter1227(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1227(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1227(n-1);
    }
}

const n1227 = 1 + sizeof(p1227);

var p1227: T1227*;

struct T1227 {
    a: int[n1227];
}


func example_test1228(): int {
    return fact_rec1228(10) == fact_iter1228(10);
}

union IntOrPtr1228 {
    i: int;
    p: int*;
}

// func f1228() {
//    u1 := IntOrPtr1228{i = 42};
//    u2 := IntOrPtr1228{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1228: int;

struct Vector1228 {
    x: int;
    y: int;
}

func fact_iter1228(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1228(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1228(n-1);
    }
}

const n1228 = 1 + sizeof(p1228);

var p1228: T1228*;

struct T1228 {
    a: int[n1228];
}


func example_test1229(): int {
    return fact_rec1229(10) == fact_iter1229(10);
}

union IntOrPtr1229 {
    i: int;
    p: int*;
}

// func f1229() {
//    u1 := IntOrPtr1229{i = 42};
//    u2 := IntOrPtr1229{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1229: int;

struct Vector1229 {
    x: int;
    y: int;
}

func fact_iter1229(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1229(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1229(n-1);
    }
}

const n1229 = 1 + sizeof(p1229);

var p1229: T1229*;

struct T1229 {
    a: int[n1229];
}


func example_test1230(): int {
    return fact_rec1230(10) == fact_iter1230(10);
}

union IntOrPtr1230 {
    i: int;
    p: int*;
}

// func f1230() {
//    u1 := IntOrPtr1230{i = 42};
//    u2 := IntOrPtr1230{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1230: int;

struct Vector1230 {
    x: int;
    y: int;
}

func fact_iter1230(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1230(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1230(n-1);
    }
}

const n1230 = 1 + sizeof(p1230);

var p1230: T1230*;

struct T1230 {
    a: int[n1230];
}


func example_test1231(): int {
    return fact_rec1231(10) == fact_iter1231(10);
}

union IntOrPtr1231 {
    i: int;
    p: int*;
}

// func f1231() {
//    u1 := IntOrPtr1231{i = 42};
//    u2 := IntOrPtr1231{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1231: int;

struct Vector1231 {
    x: int;
    y: int;
}

func fact_iter1231(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1231(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1231(n-1);
    }
}

const n1231 = 1 + sizeof(p1231);

var p1231: T1231*;

struct T1231 {
    a: int[n1231];
}


func example_test1232(): int {
    return fact_rec1232(10) == fact_iter1232(10);
}

union IntOrPtr1232 {
    i: int;
    p: int*;
}

// func f1232() {
//    u1 := IntOrPtr1232{i = 42};
//    u2 := IntOrPtr1232{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1232: int;

struct Vector1232 {
    x: int;
    y: int;
}

func fact_iter1232(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1232(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1232(n-1);
    }
}

const n1232 = 1 + sizeof(p1232);

var p1232: T1232*;

struct T1232 {
    a: int[n1232];
}


func example_test1233(): int {
    return fact_rec1233(10) == fact_iter1233(10);
}

union IntOrPtr1233 {
    i: int;
    p: int*;
}

// func f1233() {
//    u1 := IntOrPtr1233{i = 42};
//    u2 := IntOrPtr1233{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1233: int;

struct Vector1233 {
    x: int;
    y: int;
}

func fact_iter1233(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1233(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1233(n-1);
    }
}

const n1233 = 1 + sizeof(p1233);

var p1233: T1233*;

struct T1233 {
    a: int[n1233];
}


func example_test1234(): int {
    return fact_rec1234(10) == fact_iter1234(10);
}

union IntOrPtr1234 {
    i: int;
    p: int*;
}

// func f1234() {
//    u1 := IntOrPtr1234{i = 42};
//    u2 := IntOrPtr1234{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1234: int;

struct Vector1234 {
    x: int;
    y: int;
}

func fact_iter1234(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1234(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1234(n-1);
    }
}

const n1234 = 1 + sizeof(p1234);

var p1234: T1234*;

struct T1234 {
    a: int[n1234];
}


func example_test1235(): int {
    return fact_rec1235(10) == fact_iter1235(10);
}

union IntOrPtr1235 {
    i: int;
    p: int*;
}

// func f1235() {
//    u1 := IntOrPtr1235{i = 42};
//    u2 := IntOrPtr1235{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1235: int;

struct Vector1235 {
    x: int;
    y: int;
}

func fact_iter1235(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1235(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1235(n-1);
    }
}

const n1235 = 1 + sizeof(p1235);

var p1235: T1235*;

struct T1235 {
    a: int[n1235];
}


func example_test1236(): int {
    return fact_rec1236(10) == fact_iter1236(10);
}

union IntOrPtr1236 {
    i: int;
    p: int*;
}

// func f1236() {
//    u1 := IntOrPtr1236{i = 42};
//    u2 := IntOrPtr1236{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1236: int;

struct Vector1236 {
    x: int;
    y: int;
}

func fact_iter1236(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1236(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1236(n-1);
    }
}

const n1236 = 1 + sizeof(p1236);

var p1236: T1236*;

struct T1236 {
    a: int[n1236];
}


func example_test1237(): int {
    return fact_rec1237(10) == fact_iter1237(10);
}

union IntOrPtr1237 {
    i: int;
    p: int*;
}

// func f1237() {
//    u1 := IntOrPtr1237{i = 42};
//    u2 := IntOrPtr1237{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1237: int;

struct Vector1237 {
    x: int;
    y: int;
}

func fact_iter1237(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1237(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1237(n-1);
    }
}

const n1237 = 1 + sizeof(p1237);

var p1237: T1237*;

struct T1237 {
    a: int[n1237];
}


func example_test1238(): int {
    return fact_rec1238(10) == fact_iter1238(10);
}

union IntOrPtr1238 {
    i: int;
    p: int*;
}

// func f1238() {
//    u1 := IntOrPtr1238{i = 42};
//    u2 := IntOrPtr1238{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1238: int;

struct Vector1238 {
    x: int;
    y: int;
}

func fact_iter1238(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1238(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1238(n-1);
    }
}

const n1238 = 1 + sizeof(p1238);

var p1238: T1238*;

struct T1238 {
    a: int[n1238];
}


func example_test1239(): int {
    return fact_rec1239(10) == fact_iter1239(10);
}

union IntOrPtr1239 {
    i: int;
    p: int*;
}

// func f1239() {
//    u1 := IntOrPtr1239{i = 42};
//    u2 := IntOrPtr1239{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1239: int;

struct Vector1239 {
    x: int;
    y: int;
}

func fact_iter1239(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1239(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1239(n-1);
    }
}

const n1239 = 1 + sizeof(p1239);

var p1239: T1239*;

struct T1239 {
    a: int[n1239];
}


func example_test1240(): int {
    return fact_rec1240(10) == fact_iter1240(10);
}

union IntOrPtr1240 {
    i: int;
    p: int*;
}

// func f1240() {
//    u1 := IntOrPtr1240{i = 42};
//    u2 := IntOrPtr1240{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1240: int;

struct Vector1240 {
    x: int;
    y: int;
}

func fact_iter1240(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1240(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1240(n-1);
    }
}

const n1240 = 1 + sizeof(p1240);

var p1240: T1240*;

struct T1240 {
    a: int[n1240];
}


func example_test1241(): int {
    return fact_rec1241(10) == fact_iter1241(10);
}

union IntOrPtr1241 {
    i: int;
    p: int*;
}

// func f1241() {
//    u1 := IntOrPtr1241{i = 42};
//    u2 := IntOrPtr1241{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1241: int;

struct Vector1241 {
    x: int;
    y: int;
}

func fact_iter1241(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1241(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1241(n-1);
    }
}

const n1241 = 1 + sizeof(p1241);

var p1241: T1241*;

struct T1241 {
    a: int[n1241];
}


func example_test1242(): int {
    return fact_rec1242(10) == fact_iter1242(10);
}

union IntOrPtr1242 {
    i: int;
    p: int*;
}

// func f1242() {
//    u1 := IntOrPtr1242{i = 42};
//    u2 := IntOrPtr1242{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1242: int;

struct Vector1242 {
    x: int;
    y: int;
}

func fact_iter1242(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1242(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1242(n-1);
    }
}

const n1242 = 1 + sizeof(p1242);

var p1242: T1242*;

struct T1242 {
    a: int[n1242];
}


func example_test1243(): int {
    return fact_rec1243(10) == fact_iter1243(10);
}

union IntOrPtr1243 {
    i: int;
    p: int*;
}

// func f1243() {
//    u1 := IntOrPtr1243{i = 42};
//    u2 := IntOrPtr1243{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1243: int;

struct Vector1243 {
    x: int;
    y: int;
}

func fact_iter1243(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1243(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1243(n-1);
    }
}

const n1243 = 1 + sizeof(p1243);

var p1243: T1243*;

struct T1243 {
    a: int[n1243];
}


func example_test1244(): int {
    return fact_rec1244(10) == fact_iter1244(10);
}

union IntOrPtr1244 {
    i: int;
    p: int*;
}

// func f1244() {
//    u1 := IntOrPtr1244{i = 42};
//    u2 := IntOrPtr1244{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1244: int;

struct Vector1244 {
    x: int;
    y: int;
}

func fact_iter1244(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1244(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1244(n-1);
    }
}

const n1244 = 1 + sizeof(p1244);

var p1244: T1244*;

struct T1244 {
    a: int[n1244];
}


func example_test1245(): int {
    return fact_rec1245(10) == fact_iter1245(10);
}

union IntOrPtr1245 {
    i: int;
    p: int*;
}

// func f1245() {
//    u1 := IntOrPtr1245{i = 42};
//    u2 := IntOrPtr1245{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1245: int;

struct Vector1245 {
    x: int;
    y: int;
}

func fact_iter1245(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1245(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1245(n-1);
    }
}

const n1245 = 1 + sizeof(p1245);

var p1245: T1245*;

struct T1245 {
    a: int[n1245];
}


func example_test1246(): int {
    return fact_rec1246(10) == fact_iter1246(10);
}

union IntOrPtr1246 {
    i: int;
    p: int*;
}

// func f1246() {
//    u1 := IntOrPtr1246{i = 42};
//    u2 := IntOrPtr1246{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1246: int;

struct Vector1246 {
    x: int;
    y: int;
}

func fact_iter1246(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1246(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1246(n-1);
    }
}

const n1246 = 1 + sizeof(p1246);

var p1246: T1246*;

struct T1246 {
    a: int[n1246];
}


func example_test1247(): int {
    return fact_rec1247(10) == fact_iter1247(10);
}

union IntOrPtr1247 {
    i: int;
    p: int*;
}

// func f1247() {
//    u1 := IntOrPtr1247{i = 42};
//    u2 := IntOrPtr1247{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1247: int;

struct Vector1247 {
    x: int;
    y: int;
}

func fact_iter1247(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1247(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1247(n-1);
    }
}

const n1247 = 1 + sizeof(p1247);

var p1247: T1247*;

struct T1247 {
    a: int[n1247];
}


func example_test1248(): int {
    return fact_rec1248(10) == fact_iter1248(10);
}

union IntOrPtr1248 {
    i: int;
    p: int*;
}

// func f1248() {
//    u1 := IntOrPtr1248{i = 42};
//    u2 := IntOrPtr1248{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1248: int;

struct Vector1248 {
    x: int;
    y: int;
}

func fact_iter1248(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1248(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1248(n-1);
    }
}

const n1248 = 1 + sizeof(p1248);

var p1248: T1248*;

struct T1248 {
    a: int[n1248];
}


func example_test1249(): int {
    return fact_rec1249(10) == fact_iter1249(10);
}

union IntOrPtr1249 {
    i: int;
    p: int*;
}

// func f1249() {
//    u1 := IntOrPtr1249{i = 42};
//    u2 := IntOrPtr1249{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1249: int;

struct Vector1249 {
    x: int;
    y: int;
}

func fact_iter1249(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1249(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1249(n-1);
    }
}

const n1249 = 1 + sizeof(p1249);

var p1249: T1249*;

struct T1249 {
    a: int[n1249];
}


func example_test1250(): int {
    return fact_rec1250(10) == fact_iter1250(10);
}

union IntOrPtr1250 {
    i: int;
    p: int*;
}

// func f1250() {
//    u1 := IntOrPtr1250{i = 42};
//    u2 := IntOrPtr1250{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1250: int;

struct Vector1250 {
    x: int;
    y: int;
}

func fact_iter1250(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1250(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1250(n-1);
    }
}

const n1250 = 1 + sizeof(p1250);

var p1250: T1250*;

struct T1250 {
    a: int[n1250];
}


func example_test1251(): int {
    return fact_rec1251(10) == fact_iter1251(10);
}

union IntOrPtr1251 {
    i: int;
    p: int*;
}

// func f1251() {
//    u1 := IntOrPtr1251{i = 42};
//    u2 := IntOrPtr1251{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1251: int;

struct Vector1251 {
    x: int;
    y: int;
}

func fact_iter1251(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1251(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1251(n-1);
    }
}

const n1251 = 1 + sizeof(p1251);

var p1251: T1251*;

struct T1251 {
    a: int[n1251];
}


func example_test1252(): int {
    return fact_rec1252(10) == fact_iter1252(10);
}

union IntOrPtr1252 {
    i: int;
    p: int*;
}

// func f1252() {
//    u1 := IntOrPtr1252{i = 42};
//    u2 := IntOrPtr1252{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1252: int;

struct Vector1252 {
    x: int;
    y: int;
}

func fact_iter1252(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1252(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1252(n-1);
    }
}

const n1252 = 1 + sizeof(p1252);

var p1252: T1252*;

struct T1252 {
    a: int[n1252];
}


func example_test1253(): int {
    return fact_rec1253(10) == fact_iter1253(10);
}

union IntOrPtr1253 {
    i: int;
    p: int*;
}

// func f1253() {
//    u1 := IntOrPtr1253{i = 42};
//    u2 := IntOrPtr1253{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1253: int;

struct Vector1253 {
    x: int;
    y: int;
}

func fact_iter1253(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1253(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1253(n-1);
    }
}

const n1253 = 1 + sizeof(p1253);

var p1253: T1253*;

struct T1253 {
    a: int[n1253];
}


func example_test1254(): int {
    return fact_rec1254(10) == fact_iter1254(10);
}

union IntOrPtr1254 {
    i: int;
    p: int*;
}

// func f1254() {
//    u1 := IntOrPtr1254{i = 42};
//    u2 := IntOrPtr1254{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1254: int;

struct Vector1254 {
    x: int;
    y: int;
}

func fact_iter1254(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1254(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1254(n-1);
    }
}

const n1254 = 1 + sizeof(p1254);

var p1254: T1254*;

struct T1254 {
    a: int[n1254];
}


func example_test1255(): int {
    return fact_rec1255(10) == fact_iter1255(10);
}

union IntOrPtr1255 {
    i: int;
    p: int*;
}

// func f1255() {
//    u1 := IntOrPtr1255{i = 42};
//    u2 := IntOrPtr1255{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1255: int;

struct Vector1255 {
    x: int;
    y: int;
}

func fact_iter1255(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1255(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1255(n-1);
    }
}

const n1255 = 1 + sizeof(p1255);

var p1255: T1255*;

struct T1255 {
    a: int[n1255];
}


func example_test1256(): int {
    return fact_rec1256(10) == fact_iter1256(10);
}

union IntOrPtr1256 {
    i: int;
    p: int*;
}

// func f1256() {
//    u1 := IntOrPtr1256{i = 42};
//    u2 := IntOrPtr1256{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1256: int;

struct Vector1256 {
    x: int;
    y: int;
}

func fact_iter1256(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1256(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1256(n-1);
    }
}

const n1256 = 1 + sizeof(p1256);

var p1256: T1256*;

struct T1256 {
    a: int[n1256];
}


func example_test1257(): int {
    return fact_rec1257(10) == fact_iter1257(10);
}

union IntOrPtr1257 {
    i: int;
    p: int*;
}

// func f1257() {
//    u1 := IntOrPtr1257{i = 42};
//    u2 := IntOrPtr1257{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1257: int;

struct Vector1257 {
    x: int;
    y: int;
}

func fact_iter1257(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1257(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1257(n-1);
    }
}

const n1257 = 1 + sizeof(p1257);

var p1257: T1257*;

struct T1257 {
    a: int[n1257];
}


func example_test1258(): int {
    return fact_rec1258(10) == fact_iter1258(10);
}

union IntOrPtr1258 {
    i: int;
    p: int*;
}

// func f1258() {
//    u1 := IntOrPtr1258{i = 42};
//    u2 := IntOrPtr1258{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1258: int;

struct Vector1258 {
    x: int;
    y: int;
}

func fact_iter1258(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1258(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1258(n-1);
    }
}

const n1258 = 1 + sizeof(p1258);

var p1258: T1258*;

struct T1258 {
    a: int[n1258];
}


func example_test1259(): int {
    return fact_rec1259(10) == fact_iter1259(10);
}

union IntOrPtr1259 {
    i: int;
    p: int*;
}

// func f1259() {
//    u1 := IntOrPtr1259{i = 42};
//    u2 := IntOrPtr1259{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1259: int;

struct Vector1259 {
    x: int;
    y: int;
}

func fact_iter1259(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1259(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1259(n-1);
    }
}

const n1259 = 1 + sizeof(p1259);

var p1259: T1259*;

struct T1259 {
    a: int[n1259];
}


func example_test1260(): int {
    return fact_rec1260(10) == fact_iter1260(10);
}

union IntOrPtr1260 {
    i: int;
    p: int*;
}

// func f1260() {
//    u1 := IntOrPtr1260{i = 42};
//    u2 := IntOrPtr1260{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1260: int;

struct Vector1260 {
    x: int;
    y: int;
}

func fact_iter1260(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1260(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1260(n-1);
    }
}

const n1260 = 1 + sizeof(p1260);

var p1260: T1260*;

struct T1260 {
    a: int[n1260];
}


func example_test1261(): int {
    return fact_rec1261(10) == fact_iter1261(10);
}

union IntOrPtr1261 {
    i: int;
    p: int*;
}

// func f1261() {
//    u1 := IntOrPtr1261{i = 42};
//    u2 := IntOrPtr1261{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1261: int;

struct Vector1261 {
    x: int;
    y: int;
}

func fact_iter1261(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1261(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1261(n-1);
    }
}

const n1261 = 1 + sizeof(p1261);

var p1261: T1261*;

struct T1261 {
    a: int[n1261];
}


func example_test1262(): int {
    return fact_rec1262(10) == fact_iter1262(10);
}

union IntOrPtr1262 {
    i: int;
    p: int*;
}

// func f1262() {
//    u1 := IntOrPtr1262{i = 42};
//    u2 := IntOrPtr1262{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1262: int;

struct Vector1262 {
    x: int;
    y: int;
}

func fact_iter1262(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1262(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1262(n-1);
    }
}

const n1262 = 1 + sizeof(p1262);

var p1262: T1262*;

struct T1262 {
    a: int[n1262];
}


func example_test1263(): int {
    return fact_rec1263(10) == fact_iter1263(10);
}

union IntOrPtr1263 {
    i: int;
    p: int*;
}

// func f1263() {
//    u1 := IntOrPtr1263{i = 42};
//    u2 := IntOrPtr1263{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1263: int;

struct Vector1263 {
    x: int;
    y: int;
}

func fact_iter1263(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1263(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1263(n-1);
    }
}

const n1263 = 1 + sizeof(p1263);

var p1263: T1263*;

struct T1263 {
    a: int[n1263];
}


func example_test1264(): int {
    return fact_rec1264(10) == fact_iter1264(10);
}

union IntOrPtr1264 {
    i: int;
    p: int*;
}

// func f1264() {
//    u1 := IntOrPtr1264{i = 42};
//    u2 := IntOrPtr1264{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1264: int;

struct Vector1264 {
    x: int;
    y: int;
}

func fact_iter1264(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1264(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1264(n-1);
    }
}

const n1264 = 1 + sizeof(p1264);

var p1264: T1264*;

struct T1264 {
    a: int[n1264];
}


func example_test1265(): int {
    return fact_rec1265(10) == fact_iter1265(10);
}

union IntOrPtr1265 {
    i: int;
    p: int*;
}

// func f1265() {
//    u1 := IntOrPtr1265{i = 42};
//    u2 := IntOrPtr1265{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1265: int;

struct Vector1265 {
    x: int;
    y: int;
}

func fact_iter1265(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1265(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1265(n-1);
    }
}

const n1265 = 1 + sizeof(p1265);

var p1265: T1265*;

struct T1265 {
    a: int[n1265];
}


func example_test1266(): int {
    return fact_rec1266(10) == fact_iter1266(10);
}

union IntOrPtr1266 {
    i: int;
    p: int*;
}

// func f1266() {
//    u1 := IntOrPtr1266{i = 42};
//    u2 := IntOrPtr1266{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1266: int;

struct Vector1266 {
    x: int;
    y: int;
}

func fact_iter1266(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1266(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1266(n-1);
    }
}

const n1266 = 1 + sizeof(p1266);

var p1266: T1266*;

struct T1266 {
    a: int[n1266];
}


func example_test1267(): int {
    return fact_rec1267(10) == fact_iter1267(10);
}

union IntOrPtr1267 {
    i: int;
    p: int*;
}

// func f1267() {
//    u1 := IntOrPtr1267{i = 42};
//    u2 := IntOrPtr1267{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1267: int;

struct Vector1267 {
    x: int;
    y: int;
}

func fact_iter1267(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1267(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1267(n-1);
    }
}

const n1267 = 1 + sizeof(p1267);

var p1267: T1267*;

struct T1267 {
    a: int[n1267];
}


func example_test1268(): int {
    return fact_rec1268(10) == fact_iter1268(10);
}

union IntOrPtr1268 {
    i: int;
    p: int*;
}

// func f1268() {
//    u1 := IntOrPtr1268{i = 42};
//    u2 := IntOrPtr1268{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1268: int;

struct Vector1268 {
    x: int;
    y: int;
}

func fact_iter1268(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1268(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1268(n-1);
    }
}

const n1268 = 1 + sizeof(p1268);

var p1268: T1268*;

struct T1268 {
    a: int[n1268];
}


func example_test1269(): int {
    return fact_rec1269(10) == fact_iter1269(10);
}

union IntOrPtr1269 {
    i: int;
    p: int*;
}

// func f1269() {
//    u1 := IntOrPtr1269{i = 42};
//    u2 := IntOrPtr1269{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1269: int;

struct Vector1269 {
    x: int;
    y: int;
}

func fact_iter1269(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1269(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1269(n-1);
    }
}

const n1269 = 1 + sizeof(p1269);

var p1269: T1269*;

struct T1269 {
    a: int[n1269];
}


func example_test1270(): int {
    return fact_rec1270(10) == fact_iter1270(10);
}

union IntOrPtr1270 {
    i: int;
    p: int*;
}

// func f1270() {
//    u1 := IntOrPtr1270{i = 42};
//    u2 := IntOrPtr1270{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1270: int;

struct Vector1270 {
    x: int;
    y: int;
}

func fact_iter1270(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1270(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1270(n-1);
    }
}

const n1270 = 1 + sizeof(p1270);

var p1270: T1270*;

struct T1270 {
    a: int[n1270];
}


func example_test1271(): int {
    return fact_rec1271(10) == fact_iter1271(10);
}

union IntOrPtr1271 {
    i: int;
    p: int*;
}

// func f1271() {
//    u1 := IntOrPtr1271{i = 42};
//    u2 := IntOrPtr1271{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1271: int;

struct Vector1271 {
    x: int;
    y: int;
}

func fact_iter1271(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1271(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1271(n-1);
    }
}

const n1271 = 1 + sizeof(p1271);

var p1271: T1271*;

struct T1271 {
    a: int[n1271];
}


func example_test1272(): int {
    return fact_rec1272(10) == fact_iter1272(10);
}

union IntOrPtr1272 {
    i: int;
    p: int*;
}

// func f1272() {
//    u1 := IntOrPtr1272{i = 42};
//    u2 := IntOrPtr1272{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1272: int;

struct Vector1272 {
    x: int;
    y: int;
}

func fact_iter1272(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1272(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1272(n-1);
    }
}

const n1272 = 1 + sizeof(p1272);

var p1272: T1272*;

struct T1272 {
    a: int[n1272];
}


func example_test1273(): int {
    return fact_rec1273(10) == fact_iter1273(10);
}

union IntOrPtr1273 {
    i: int;
    p: int*;
}

// func f1273() {
//    u1 := IntOrPtr1273{i = 42};
//    u2 := IntOrPtr1273{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1273: int;

struct Vector1273 {
    x: int;
    y: int;
}

func fact_iter1273(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1273(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1273(n-1);
    }
}

const n1273 = 1 + sizeof(p1273);

var p1273: T1273*;

struct T1273 {
    a: int[n1273];
}


func example_test1274(): int {
    return fact_rec1274(10) == fact_iter1274(10);
}

union IntOrPtr1274 {
    i: int;
    p: int*;
}

// func f1274() {
//    u1 := IntOrPtr1274{i = 42};
//    u2 := IntOrPtr1274{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1274: int;

struct Vector1274 {
    x: int;
    y: int;
}

func fact_iter1274(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1274(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1274(n-1);
    }
}

const n1274 = 1 + sizeof(p1274);

var p1274: T1274*;

struct T1274 {
    a: int[n1274];
}


func example_test1275(): int {
    return fact_rec1275(10) == fact_iter1275(10);
}

union IntOrPtr1275 {
    i: int;
    p: int*;
}

// func f1275() {
//    u1 := IntOrPtr1275{i = 42};
//    u2 := IntOrPtr1275{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1275: int;

struct Vector1275 {
    x: int;
    y: int;
}

func fact_iter1275(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1275(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1275(n-1);
    }
}

const n1275 = 1 + sizeof(p1275);

var p1275: T1275*;

struct T1275 {
    a: int[n1275];
}


func example_test1276(): int {
    return fact_rec1276(10) == fact_iter1276(10);
}

union IntOrPtr1276 {
    i: int;
    p: int*;
}

// func f1276() {
//    u1 := IntOrPtr1276{i = 42};
//    u2 := IntOrPtr1276{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1276: int;

struct Vector1276 {
    x: int;
    y: int;
}

func fact_iter1276(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1276(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1276(n-1);
    }
}

const n1276 = 1 + sizeof(p1276);

var p1276: T1276*;

struct T1276 {
    a: int[n1276];
}


func example_test1277(): int {
    return fact_rec1277(10) == fact_iter1277(10);
}

union IntOrPtr1277 {
    i: int;
    p: int*;
}

// func f1277() {
//    u1 := IntOrPtr1277{i = 42};
//    u2 := IntOrPtr1277{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1277: int;

struct Vector1277 {
    x: int;
    y: int;
}

func fact_iter1277(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1277(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1277(n-1);
    }
}

const n1277 = 1 + sizeof(p1277);

var p1277: T1277*;

struct T1277 {
    a: int[n1277];
}


func example_test1278(): int {
    return fact_rec1278(10) == fact_iter1278(10);
}

union IntOrPtr1278 {
    i: int;
    p: int*;
}

// func f1278() {
//    u1 := IntOrPtr1278{i = 42};
//    u2 := IntOrPtr1278{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1278: int;

struct Vector1278 {
    x: int;
    y: int;
}

func fact_iter1278(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1278(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1278(n-1);
    }
}

const n1278 = 1 + sizeof(p1278);

var p1278: T1278*;

struct T1278 {
    a: int[n1278];
}


func example_test1279(): int {
    return fact_rec1279(10) == fact_iter1279(10);
}

union IntOrPtr1279 {
    i: int;
    p: int*;
}

// func f1279() {
//    u1 := IntOrPtr1279{i = 42};
//    u2 := IntOrPtr1279{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1279: int;

struct Vector1279 {
    x: int;
    y: int;
}

func fact_iter1279(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1279(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1279(n-1);
    }
}

const n1279 = 1 + sizeof(p1279);

var p1279: T1279*;

struct T1279 {
    a: int[n1279];
}


func example_test1280(): int {
    return fact_rec1280(10) == fact_iter1280(10);
}

union IntOrPtr1280 {
    i: int;
    p: int*;
}

// func f1280() {
//    u1 := IntOrPtr1280{i = 42};
//    u2 := IntOrPtr1280{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1280: int;

struct Vector1280 {
    x: int;
    y: int;
}

func fact_iter1280(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1280(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1280(n-1);
    }
}

const n1280 = 1 + sizeof(p1280);

var p1280: T1280*;

struct T1280 {
    a: int[n1280];
}


func example_test1281(): int {
    return fact_rec1281(10) == fact_iter1281(10);
}

union IntOrPtr1281 {
    i: int;
    p: int*;
}

// func f1281() {
//    u1 := IntOrPtr1281{i = 42};
//    u2 := IntOrPtr1281{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1281: int;

struct Vector1281 {
    x: int;
    y: int;
}

func fact_iter1281(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1281(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1281(n-1);
    }
}

const n1281 = 1 + sizeof(p1281);

var p1281: T1281*;

struct T1281 {
    a: int[n1281];
}


func example_test1282(): int {
    return fact_rec1282(10) == fact_iter1282(10);
}

union IntOrPtr1282 {
    i: int;
    p: int*;
}

// func f1282() {
//    u1 := IntOrPtr1282{i = 42};
//    u2 := IntOrPtr1282{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1282: int;

struct Vector1282 {
    x: int;
    y: int;
}

func fact_iter1282(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1282(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1282(n-1);
    }
}

const n1282 = 1 + sizeof(p1282);

var p1282: T1282*;

struct T1282 {
    a: int[n1282];
}


func example_test1283(): int {
    return fact_rec1283(10) == fact_iter1283(10);
}

union IntOrPtr1283 {
    i: int;
    p: int*;
}

// func f1283() {
//    u1 := IntOrPtr1283{i = 42};
//    u2 := IntOrPtr1283{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1283: int;

struct Vector1283 {
    x: int;
    y: int;
}

func fact_iter1283(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1283(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1283(n-1);
    }
}

const n1283 = 1 + sizeof(p1283);

var p1283: T1283*;

struct T1283 {
    a: int[n1283];
}


func example_test1284(): int {
    return fact_rec1284(10) == fact_iter1284(10);
}

union IntOrPtr1284 {
    i: int;
    p: int*;
}

// func f1284() {
//    u1 := IntOrPtr1284{i = 42};
//    u2 := IntOrPtr1284{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1284: int;

struct Vector1284 {
    x: int;
    y: int;
}

func fact_iter1284(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1284(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1284(n-1);
    }
}

const n1284 = 1 + sizeof(p1284);

var p1284: T1284*;

struct T1284 {
    a: int[n1284];
}


func example_test1285(): int {
    return fact_rec1285(10) == fact_iter1285(10);
}

union IntOrPtr1285 {
    i: int;
    p: int*;
}

// func f1285() {
//    u1 := IntOrPtr1285{i = 42};
//    u2 := IntOrPtr1285{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1285: int;

struct Vector1285 {
    x: int;
    y: int;
}

func fact_iter1285(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1285(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1285(n-1);
    }
}

const n1285 = 1 + sizeof(p1285);

var p1285: T1285*;

struct T1285 {
    a: int[n1285];
}


func example_test1286(): int {
    return fact_rec1286(10) == fact_iter1286(10);
}

union IntOrPtr1286 {
    i: int;
    p: int*;
}

// func f1286() {
//    u1 := IntOrPtr1286{i = 42};
//    u2 := IntOrPtr1286{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1286: int;

struct Vector1286 {
    x: int;
    y: int;
}

func fact_iter1286(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1286(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1286(n-1);
    }
}

const n1286 = 1 + sizeof(p1286);

var p1286: T1286*;

struct T1286 {
    a: int[n1286];
}


func example_test1287(): int {
    return fact_rec1287(10) == fact_iter1287(10);
}

union IntOrPtr1287 {
    i: int;
    p: int*;
}

// func f1287() {
//    u1 := IntOrPtr1287{i = 42};
//    u2 := IntOrPtr1287{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1287: int;

struct Vector1287 {
    x: int;
    y: int;
}

func fact_iter1287(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1287(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1287(n-1);
    }
}

const n1287 = 1 + sizeof(p1287);

var p1287: T1287*;

struct T1287 {
    a: int[n1287];
}


func example_test1288(): int {
    return fact_rec1288(10) == fact_iter1288(10);
}

union IntOrPtr1288 {
    i: int;
    p: int*;
}

// func f1288() {
//    u1 := IntOrPtr1288{i = 42};
//    u2 := IntOrPtr1288{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1288: int;

struct Vector1288 {
    x: int;
    y: int;
}

func fact_iter1288(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1288(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1288(n-1);
    }
}

const n1288 = 1 + sizeof(p1288);

var p1288: T1288*;

struct T1288 {
    a: int[n1288];
}


func example_test1289(): int {
    return fact_rec1289(10) == fact_iter1289(10);
}

union IntOrPtr1289 {
    i: int;
    p: int*;
}

// func f1289() {
//    u1 := IntOrPtr1289{i = 42};
//    u2 := IntOrPtr1289{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1289: int;

struct Vector1289 {
    x: int;
    y: int;
}

func fact_iter1289(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1289(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1289(n-1);
    }
}

const n1289 = 1 + sizeof(p1289);

var p1289: T1289*;

struct T1289 {
    a: int[n1289];
}


func example_test1290(): int {
    return fact_rec1290(10) == fact_iter1290(10);
}

union IntOrPtr1290 {
    i: int;
    p: int*;
}

// func f1290() {
//    u1 := IntOrPtr1290{i = 42};
//    u2 := IntOrPtr1290{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1290: int;

struct Vector1290 {
    x: int;
    y: int;
}

func fact_iter1290(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1290(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1290(n-1);
    }
}

const n1290 = 1 + sizeof(p1290);

var p1290: T1290*;

struct T1290 {
    a: int[n1290];
}


func example_test1291(): int {
    return fact_rec1291(10) == fact_iter1291(10);
}

union IntOrPtr1291 {
    i: int;
    p: int*;
}

// func f1291() {
//    u1 := IntOrPtr1291{i = 42};
//    u2 := IntOrPtr1291{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1291: int;

struct Vector1291 {
    x: int;
    y: int;
}

func fact_iter1291(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1291(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1291(n-1);
    }
}

const n1291 = 1 + sizeof(p1291);

var p1291: T1291*;

struct T1291 {
    a: int[n1291];
}


func example_test1292(): int {
    return fact_rec1292(10) == fact_iter1292(10);
}

union IntOrPtr1292 {
    i: int;
    p: int*;
}

// func f1292() {
//    u1 := IntOrPtr1292{i = 42};
//    u2 := IntOrPtr1292{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1292: int;

struct Vector1292 {
    x: int;
    y: int;
}

func fact_iter1292(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1292(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1292(n-1);
    }
}

const n1292 = 1 + sizeof(p1292);

var p1292: T1292*;

struct T1292 {
    a: int[n1292];
}


func example_test1293(): int {
    return fact_rec1293(10) == fact_iter1293(10);
}

union IntOrPtr1293 {
    i: int;
    p: int*;
}

// func f1293() {
//    u1 := IntOrPtr1293{i = 42};
//    u2 := IntOrPtr1293{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1293: int;

struct Vector1293 {
    x: int;
    y: int;
}

func fact_iter1293(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1293(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1293(n-1);
    }
}

const n1293 = 1 + sizeof(p1293);

var p1293: T1293*;

struct T1293 {
    a: int[n1293];
}


func example_test1294(): int {
    return fact_rec1294(10) == fact_iter1294(10);
}

union IntOrPtr1294 {
    i: int;
    p: int*;
}

// func f1294() {
//    u1 := IntOrPtr1294{i = 42};
//    u2 := IntOrPtr1294{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1294: int;

struct Vector1294 {
    x: int;
    y: int;
}

func fact_iter1294(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1294(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1294(n-1);
    }
}

const n1294 = 1 + sizeof(p1294);

var p1294: T1294*;

struct T1294 {
    a: int[n1294];
}


func example_test1295(): int {
    return fact_rec1295(10) == fact_iter1295(10);
}

union IntOrPtr1295 {
    i: int;
    p: int*;
}

// func f1295() {
//    u1 := IntOrPtr1295{i = 42};
//    u2 := IntOrPtr1295{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1295: int;

struct Vector1295 {
    x: int;
    y: int;
}

func fact_iter1295(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1295(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1295(n-1);
    }
}

const n1295 = 1 + sizeof(p1295);

var p1295: T1295*;

struct T1295 {
    a: int[n1295];
}


func example_test1296(): int {
    return fact_rec1296(10) == fact_iter1296(10);
}

union IntOrPtr1296 {
    i: int;
    p: int*;
}

// func f1296() {
//    u1 := IntOrPtr1296{i = 42};
//    u2 := IntOrPtr1296{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1296: int;

struct Vector1296 {
    x: int;
    y: int;
}

func fact_iter1296(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1296(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1296(n-1);
    }
}

const n1296 = 1 + sizeof(p1296);

var p1296: T1296*;

struct T1296 {
    a: int[n1296];
}


func example_test1297(): int {
    return fact_rec1297(10) == fact_iter1297(10);
}

union IntOrPtr1297 {
    i: int;
    p: int*;
}

// func f1297() {
//    u1 := IntOrPtr1297{i = 42};
//    u2 := IntOrPtr1297{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1297: int;

struct Vector1297 {
    x: int;
    y: int;
}

func fact_iter1297(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1297(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1297(n-1);
    }
}

const n1297 = 1 + sizeof(p1297);

var p1297: T1297*;

struct T1297 {
    a: int[n1297];
}


func example_test1298(): int {
    return fact_rec1298(10) == fact_iter1298(10);
}

union IntOrPtr1298 {
    i: int;
    p: int*;
}

// func f1298() {
//    u1 := IntOrPtr1298{i = 42};
//    u2 := IntOrPtr1298{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1298: int;

struct Vector1298 {
    x: int;
    y: int;
}

func fact_iter1298(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1298(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1298(n-1);
    }
}

const n1298 = 1 + sizeof(p1298);

var p1298: T1298*;

struct T1298 {
    a: int[n1298];
}


func example_test1299(): int {
    return fact_rec1299(10) == fact_iter1299(10);
}

union IntOrPtr1299 {
    i: int;
    p: int*;
}

// func f1299() {
//    u1 := IntOrPtr1299{i = 42};
//    u2 := IntOrPtr1299{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1299: int;

struct Vector1299 {
    x: int;
    y: int;
}

func fact_iter1299(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1299(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1299(n-1);
    }
}

const n1299 = 1 + sizeof(p1299);

var p1299: T1299*;

struct T1299 {
    a: int[n1299];
}


func example_test1300(): int {
    return fact_rec1300(10) == fact_iter1300(10);
}

union IntOrPtr1300 {
    i: int;
    p: int*;
}

// func f1300() {
//    u1 := IntOrPtr1300{i = 42};
//    u2 := IntOrPtr1300{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1300: int;

struct Vector1300 {
    x: int;
    y: int;
}

func fact_iter1300(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1300(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1300(n-1);
    }
}

const n1300 = 1 + sizeof(p1300);

var p1300: T1300*;

struct T1300 {
    a: int[n1300];
}


func example_test1301(): int {
    return fact_rec1301(10) == fact_iter1301(10);
}

union IntOrPtr1301 {
    i: int;
    p: int*;
}

// func f1301() {
//    u1 := IntOrPtr1301{i = 42};
//    u2 := IntOrPtr1301{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1301: int;

struct Vector1301 {
    x: int;
    y: int;
}

func fact_iter1301(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1301(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1301(n-1);
    }
}

const n1301 = 1 + sizeof(p1301);

var p1301: T1301*;

struct T1301 {
    a: int[n1301];
}


func example_test1302(): int {
    return fact_rec1302(10) == fact_iter1302(10);
}

union IntOrPtr1302 {
    i: int;
    p: int*;
}

// func f1302() {
//    u1 := IntOrPtr1302{i = 42};
//    u2 := IntOrPtr1302{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1302: int;

struct Vector1302 {
    x: int;
    y: int;
}

func fact_iter1302(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1302(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1302(n-1);
    }
}

const n1302 = 1 + sizeof(p1302);

var p1302: T1302*;

struct T1302 {
    a: int[n1302];
}


func example_test1303(): int {
    return fact_rec1303(10) == fact_iter1303(10);
}

union IntOrPtr1303 {
    i: int;
    p: int*;
}

// func f1303() {
//    u1 := IntOrPtr1303{i = 42};
//    u2 := IntOrPtr1303{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1303: int;

struct Vector1303 {
    x: int;
    y: int;
}

func fact_iter1303(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1303(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1303(n-1);
    }
}

const n1303 = 1 + sizeof(p1303);

var p1303: T1303*;

struct T1303 {
    a: int[n1303];
}


func example_test1304(): int {
    return fact_rec1304(10) == fact_iter1304(10);
}

union IntOrPtr1304 {
    i: int;
    p: int*;
}

// func f1304() {
//    u1 := IntOrPtr1304{i = 42};
//    u2 := IntOrPtr1304{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1304: int;

struct Vector1304 {
    x: int;
    y: int;
}

func fact_iter1304(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1304(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1304(n-1);
    }
}

const n1304 = 1 + sizeof(p1304);

var p1304: T1304*;

struct T1304 {
    a: int[n1304];
}


func example_test1305(): int {
    return fact_rec1305(10) == fact_iter1305(10);
}

union IntOrPtr1305 {
    i: int;
    p: int*;
}

// func f1305() {
//    u1 := IntOrPtr1305{i = 42};
//    u2 := IntOrPtr1305{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1305: int;

struct Vector1305 {
    x: int;
    y: int;
}

func fact_iter1305(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1305(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1305(n-1);
    }
}

const n1305 = 1 + sizeof(p1305);

var p1305: T1305*;

struct T1305 {
    a: int[n1305];
}


func example_test1306(): int {
    return fact_rec1306(10) == fact_iter1306(10);
}

union IntOrPtr1306 {
    i: int;
    p: int*;
}

// func f1306() {
//    u1 := IntOrPtr1306{i = 42};
//    u2 := IntOrPtr1306{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1306: int;

struct Vector1306 {
    x: int;
    y: int;
}

func fact_iter1306(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1306(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1306(n-1);
    }
}

const n1306 = 1 + sizeof(p1306);

var p1306: T1306*;

struct T1306 {
    a: int[n1306];
}


func example_test1307(): int {
    return fact_rec1307(10) == fact_iter1307(10);
}

union IntOrPtr1307 {
    i: int;
    p: int*;
}

// func f1307() {
//    u1 := IntOrPtr1307{i = 42};
//    u2 := IntOrPtr1307{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1307: int;

struct Vector1307 {
    x: int;
    y: int;
}

func fact_iter1307(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1307(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1307(n-1);
    }
}

const n1307 = 1 + sizeof(p1307);

var p1307: T1307*;

struct T1307 {
    a: int[n1307];
}


func example_test1308(): int {
    return fact_rec1308(10) == fact_iter1308(10);
}

union IntOrPtr1308 {
    i: int;
    p: int*;
}

// func f1308() {
//    u1 := IntOrPtr1308{i = 42};
//    u2 := IntOrPtr1308{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1308: int;

struct Vector1308 {
    x: int;
    y: int;
}

func fact_iter1308(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1308(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1308(n-1);
    }
}

const n1308 = 1 + sizeof(p1308);

var p1308: T1308*;

struct T1308 {
    a: int[n1308];
}


func example_test1309(): int {
    return fact_rec1309(10) == fact_iter1309(10);
}

union IntOrPtr1309 {
    i: int;
    p: int*;
}

// func f1309() {
//    u1 := IntOrPtr1309{i = 42};
//    u2 := IntOrPtr1309{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1309: int;

struct Vector1309 {
    x: int;
    y: int;
}

func fact_iter1309(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1309(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1309(n-1);
    }
}

const n1309 = 1 + sizeof(p1309);

var p1309: T1309*;

struct T1309 {
    a: int[n1309];
}


func example_test1310(): int {
    return fact_rec1310(10) == fact_iter1310(10);
}

union IntOrPtr1310 {
    i: int;
    p: int*;
}

// func f1310() {
//    u1 := IntOrPtr1310{i = 42};
//    u2 := IntOrPtr1310{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1310: int;

struct Vector1310 {
    x: int;
    y: int;
}

func fact_iter1310(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1310(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1310(n-1);
    }
}

const n1310 = 1 + sizeof(p1310);

var p1310: T1310*;

struct T1310 {
    a: int[n1310];
}


func example_test1311(): int {
    return fact_rec1311(10) == fact_iter1311(10);
}

union IntOrPtr1311 {
    i: int;
    p: int*;
}

// func f1311() {
//    u1 := IntOrPtr1311{i = 42};
//    u2 := IntOrPtr1311{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1311: int;

struct Vector1311 {
    x: int;
    y: int;
}

func fact_iter1311(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1311(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1311(n-1);
    }
}

const n1311 = 1 + sizeof(p1311);

var p1311: T1311*;

struct T1311 {
    a: int[n1311];
}


func example_test1312(): int {
    return fact_rec1312(10) == fact_iter1312(10);
}

union IntOrPtr1312 {
    i: int;
    p: int*;
}

// func f1312() {
//    u1 := IntOrPtr1312{i = 42};
//    u2 := IntOrPtr1312{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1312: int;

struct Vector1312 {
    x: int;
    y: int;
}

func fact_iter1312(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1312(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1312(n-1);
    }
}

const n1312 = 1 + sizeof(p1312);

var p1312: T1312*;

struct T1312 {
    a: int[n1312];
}


func example_test1313(): int {
    return fact_rec1313(10) == fact_iter1313(10);
}

union IntOrPtr1313 {
    i: int;
    p: int*;
}

// func f1313() {
//    u1 := IntOrPtr1313{i = 42};
//    u2 := IntOrPtr1313{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1313: int;

struct Vector1313 {
    x: int;
    y: int;
}

func fact_iter1313(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1313(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1313(n-1);
    }
}

const n1313 = 1 + sizeof(p1313);

var p1313: T1313*;

struct T1313 {
    a: int[n1313];
}


func example_test1314(): int {
    return fact_rec1314(10) == fact_iter1314(10);
}

union IntOrPtr1314 {
    i: int;
    p: int*;
}

// func f1314() {
//    u1 := IntOrPtr1314{i = 42};
//    u2 := IntOrPtr1314{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1314: int;

struct Vector1314 {
    x: int;
    y: int;
}

func fact_iter1314(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1314(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1314(n-1);
    }
}

const n1314 = 1 + sizeof(p1314);

var p1314: T1314*;

struct T1314 {
    a: int[n1314];
}


func example_test1315(): int {
    return fact_rec1315(10) == fact_iter1315(10);
}

union IntOrPtr1315 {
    i: int;
    p: int*;
}

// func f1315() {
//    u1 := IntOrPtr1315{i = 42};
//    u2 := IntOrPtr1315{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1315: int;

struct Vector1315 {
    x: int;
    y: int;
}

func fact_iter1315(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1315(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1315(n-1);
    }
}

const n1315 = 1 + sizeof(p1315);

var p1315: T1315*;

struct T1315 {
    a: int[n1315];
}


func example_test1316(): int {
    return fact_rec1316(10) == fact_iter1316(10);
}

union IntOrPtr1316 {
    i: int;
    p: int*;
}

// func f1316() {
//    u1 := IntOrPtr1316{i = 42};
//    u2 := IntOrPtr1316{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1316: int;

struct Vector1316 {
    x: int;
    y: int;
}

func fact_iter1316(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1316(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1316(n-1);
    }
}

const n1316 = 1 + sizeof(p1316);

var p1316: T1316*;

struct T1316 {
    a: int[n1316];
}


func example_test1317(): int {
    return fact_rec1317(10) == fact_iter1317(10);
}

union IntOrPtr1317 {
    i: int;
    p: int*;
}

// func f1317() {
//    u1 := IntOrPtr1317{i = 42};
//    u2 := IntOrPtr1317{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1317: int;

struct Vector1317 {
    x: int;
    y: int;
}

func fact_iter1317(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1317(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1317(n-1);
    }
}

const n1317 = 1 + sizeof(p1317);

var p1317: T1317*;

struct T1317 {
    a: int[n1317];
}


func example_test1318(): int {
    return fact_rec1318(10) == fact_iter1318(10);
}

union IntOrPtr1318 {
    i: int;
    p: int*;
}

// func f1318() {
//    u1 := IntOrPtr1318{i = 42};
//    u2 := IntOrPtr1318{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1318: int;

struct Vector1318 {
    x: int;
    y: int;
}

func fact_iter1318(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1318(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1318(n-1);
    }
}

const n1318 = 1 + sizeof(p1318);

var p1318: T1318*;

struct T1318 {
    a: int[n1318];
}


func example_test1319(): int {
    return fact_rec1319(10) == fact_iter1319(10);
}

union IntOrPtr1319 {
    i: int;
    p: int*;
}

// func f1319() {
//    u1 := IntOrPtr1319{i = 42};
//    u2 := IntOrPtr1319{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1319: int;

struct Vector1319 {
    x: int;
    y: int;
}

func fact_iter1319(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1319(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1319(n-1);
    }
}

const n1319 = 1 + sizeof(p1319);

var p1319: T1319*;

struct T1319 {
    a: int[n1319];
}


func example_test1320(): int {
    return fact_rec1320(10) == fact_iter1320(10);
}

union IntOrPtr1320 {
    i: int;
    p: int*;
}

// func f1320() {
//    u1 := IntOrPtr1320{i = 42};
//    u2 := IntOrPtr1320{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1320: int;

struct Vector1320 {
    x: int;
    y: int;
}

func fact_iter1320(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1320(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1320(n-1);
    }
}

const n1320 = 1 + sizeof(p1320);

var p1320: T1320*;

struct T1320 {
    a: int[n1320];
}


func example_test1321(): int {
    return fact_rec1321(10) == fact_iter1321(10);
}

union IntOrPtr1321 {
    i: int;
    p: int*;
}

// func f1321() {
//    u1 := IntOrPtr1321{i = 42};
//    u2 := IntOrPtr1321{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1321: int;

struct Vector1321 {
    x: int;
    y: int;
}

func fact_iter1321(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1321(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1321(n-1);
    }
}

const n1321 = 1 + sizeof(p1321);

var p1321: T1321*;

struct T1321 {
    a: int[n1321];
}


func example_test1322(): int {
    return fact_rec1322(10) == fact_iter1322(10);
}

union IntOrPtr1322 {
    i: int;
    p: int*;
}

// func f1322() {
//    u1 := IntOrPtr1322{i = 42};
//    u2 := IntOrPtr1322{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1322: int;

struct Vector1322 {
    x: int;
    y: int;
}

func fact_iter1322(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1322(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1322(n-1);
    }
}

const n1322 = 1 + sizeof(p1322);

var p1322: T1322*;

struct T1322 {
    a: int[n1322];
}


func example_test1323(): int {
    return fact_rec1323(10) == fact_iter1323(10);
}

union IntOrPtr1323 {
    i: int;
    p: int*;
}

// func f1323() {
//    u1 := IntOrPtr1323{i = 42};
//    u2 := IntOrPtr1323{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1323: int;

struct Vector1323 {
    x: int;
    y: int;
}

func fact_iter1323(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1323(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1323(n-1);
    }
}

const n1323 = 1 + sizeof(p1323);

var p1323: T1323*;

struct T1323 {
    a: int[n1323];
}


func example_test1324(): int {
    return fact_rec1324(10) == fact_iter1324(10);
}

union IntOrPtr1324 {
    i: int;
    p: int*;
}

// func f1324() {
//    u1 := IntOrPtr1324{i = 42};
//    u2 := IntOrPtr1324{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1324: int;

struct Vector1324 {
    x: int;
    y: int;
}

func fact_iter1324(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1324(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1324(n-1);
    }
}

const n1324 = 1 + sizeof(p1324);

var p1324: T1324*;

struct T1324 {
    a: int[n1324];
}


func example_test1325(): int {
    return fact_rec1325(10) == fact_iter1325(10);
}

union IntOrPtr1325 {
    i: int;
    p: int*;
}

// func f1325() {
//    u1 := IntOrPtr1325{i = 42};
//    u2 := IntOrPtr1325{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1325: int;

struct Vector1325 {
    x: int;
    y: int;
}

func fact_iter1325(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1325(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1325(n-1);
    }
}

const n1325 = 1 + sizeof(p1325);

var p1325: T1325*;

struct T1325 {
    a: int[n1325];
}


func example_test1326(): int {
    return fact_rec1326(10) == fact_iter1326(10);
}

union IntOrPtr1326 {
    i: int;
    p: int*;
}

// func f1326() {
//    u1 := IntOrPtr1326{i = 42};
//    u2 := IntOrPtr1326{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1326: int;

struct Vector1326 {
    x: int;
    y: int;
}

func fact_iter1326(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1326(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1326(n-1);
    }
}

const n1326 = 1 + sizeof(p1326);

var p1326: T1326*;

struct T1326 {
    a: int[n1326];
}


func example_test1327(): int {
    return fact_rec1327(10) == fact_iter1327(10);
}

union IntOrPtr1327 {
    i: int;
    p: int*;
}

// func f1327() {
//    u1 := IntOrPtr1327{i = 42};
//    u2 := IntOrPtr1327{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1327: int;

struct Vector1327 {
    x: int;
    y: int;
}

func fact_iter1327(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1327(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1327(n-1);
    }
}

const n1327 = 1 + sizeof(p1327);

var p1327: T1327*;

struct T1327 {
    a: int[n1327];
}


func example_test1328(): int {
    return fact_rec1328(10) == fact_iter1328(10);
}

union IntOrPtr1328 {
    i: int;
    p: int*;
}

// func f1328() {
//    u1 := IntOrPtr1328{i = 42};
//    u2 := IntOrPtr1328{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1328: int;

struct Vector1328 {
    x: int;
    y: int;
}

func fact_iter1328(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1328(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1328(n-1);
    }
}

const n1328 = 1 + sizeof(p1328);

var p1328: T1328*;

struct T1328 {
    a: int[n1328];
}


func example_test1329(): int {
    return fact_rec1329(10) == fact_iter1329(10);
}

union IntOrPtr1329 {
    i: int;
    p: int*;
}

// func f1329() {
//    u1 := IntOrPtr1329{i = 42};
//    u2 := IntOrPtr1329{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1329: int;

struct Vector1329 {
    x: int;
    y: int;
}

func fact_iter1329(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1329(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1329(n-1);
    }
}

const n1329 = 1 + sizeof(p1329);

var p1329: T1329*;

struct T1329 {
    a: int[n1329];
}


func example_test1330(): int {
    return fact_rec1330(10) == fact_iter1330(10);
}

union IntOrPtr1330 {
    i: int;
    p: int*;
}

// func f1330() {
//    u1 := IntOrPtr1330{i = 42};
//    u2 := IntOrPtr1330{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1330: int;

struct Vector1330 {
    x: int;
    y: int;
}

func fact_iter1330(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1330(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1330(n-1);
    }
}

const n1330 = 1 + sizeof(p1330);

var p1330: T1330*;

struct T1330 {
    a: int[n1330];
}


func example_test1331(): int {
    return fact_rec1331(10) == fact_iter1331(10);
}

union IntOrPtr1331 {
    i: int;
    p: int*;
}

// func f1331() {
//    u1 := IntOrPtr1331{i = 42};
//    u2 := IntOrPtr1331{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1331: int;

struct Vector1331 {
    x: int;
    y: int;
}

func fact_iter1331(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1331(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1331(n-1);
    }
}

const n1331 = 1 + sizeof(p1331);

var p1331: T1331*;

struct T1331 {
    a: int[n1331];
}


func example_test1332(): int {
    return fact_rec1332(10) == fact_iter1332(10);
}

union IntOrPtr1332 {
    i: int;
    p: int*;
}

// func f1332() {
//    u1 := IntOrPtr1332{i = 42};
//    u2 := IntOrPtr1332{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1332: int;

struct Vector1332 {
    x: int;
    y: int;
}

func fact_iter1332(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1332(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1332(n-1);
    }
}

const n1332 = 1 + sizeof(p1332);

var p1332: T1332*;

struct T1332 {
    a: int[n1332];
}


func example_test1333(): int {
    return fact_rec1333(10) == fact_iter1333(10);
}

union IntOrPtr1333 {
    i: int;
    p: int*;
}

// func f1333() {
//    u1 := IntOrPtr1333{i = 42};
//    u2 := IntOrPtr1333{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1333: int;

struct Vector1333 {
    x: int;
    y: int;
}

func fact_iter1333(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1333(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1333(n-1);
    }
}

const n1333 = 1 + sizeof(p1333);

var p1333: T1333*;

struct T1333 {
    a: int[n1333];
}


func example_test1334(): int {
    return fact_rec1334(10) == fact_iter1334(10);
}

union IntOrPtr1334 {
    i: int;
    p: int*;
}

// func f1334() {
//    u1 := IntOrPtr1334{i = 42};
//    u2 := IntOrPtr1334{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1334: int;

struct Vector1334 {
    x: int;
    y: int;
}

func fact_iter1334(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1334(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1334(n-1);
    }
}

const n1334 = 1 + sizeof(p1334);

var p1334: T1334*;

struct T1334 {
    a: int[n1334];
}


func example_test1335(): int {
    return fact_rec1335(10) == fact_iter1335(10);
}

union IntOrPtr1335 {
    i: int;
    p: int*;
}

// func f1335() {
//    u1 := IntOrPtr1335{i = 42};
//    u2 := IntOrPtr1335{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1335: int;

struct Vector1335 {
    x: int;
    y: int;
}

func fact_iter1335(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1335(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1335(n-1);
    }
}

const n1335 = 1 + sizeof(p1335);

var p1335: T1335*;

struct T1335 {
    a: int[n1335];
}


func example_test1336(): int {
    return fact_rec1336(10) == fact_iter1336(10);
}

union IntOrPtr1336 {
    i: int;
    p: int*;
}

// func f1336() {
//    u1 := IntOrPtr1336{i = 42};
//    u2 := IntOrPtr1336{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1336: int;

struct Vector1336 {
    x: int;
    y: int;
}

func fact_iter1336(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1336(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1336(n-1);
    }
}

const n1336 = 1 + sizeof(p1336);

var p1336: T1336*;

struct T1336 {
    a: int[n1336];
}


func example_test1337(): int {
    return fact_rec1337(10) == fact_iter1337(10);
}

union IntOrPtr1337 {
    i: int;
    p: int*;
}

// func f1337() {
//    u1 := IntOrPtr1337{i = 42};
//    u2 := IntOrPtr1337{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1337: int;

struct Vector1337 {
    x: int;
    y: int;
}

func fact_iter1337(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1337(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1337(n-1);
    }
}

const n1337 = 1 + sizeof(p1337);

var p1337: T1337*;

struct T1337 {
    a: int[n1337];
}


func example_test1338(): int {
    return fact_rec1338(10) == fact_iter1338(10);
}

union IntOrPtr1338 {
    i: int;
    p: int*;
}

// func f1338() {
//    u1 := IntOrPtr1338{i = 42};
//    u2 := IntOrPtr1338{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1338: int;

struct Vector1338 {
    x: int;
    y: int;
}

func fact_iter1338(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1338(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1338(n-1);
    }
}

const n1338 = 1 + sizeof(p1338);

var p1338: T1338*;

struct T1338 {
    a: int[n1338];
}


func example_test1339(): int {
    return fact_rec1339(10) == fact_iter1339(10);
}

union IntOrPtr1339 {
    i: int;
    p: int*;
}

// func f1339() {
//    u1 := IntOrPtr1339{i = 42};
//    u2 := IntOrPtr1339{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1339: int;

struct Vector1339 {
    x: int;
    y: int;
}

func fact_iter1339(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1339(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1339(n-1);
    }
}

const n1339 = 1 + sizeof(p1339);

var p1339: T1339*;

struct T1339 {
    a: int[n1339];
}


func example_test1340(): int {
    return fact_rec1340(10) == fact_iter1340(10);
}

union IntOrPtr1340 {
    i: int;
    p: int*;
}

// func f1340() {
//    u1 := IntOrPtr1340{i = 42};
//    u2 := IntOrPtr1340{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1340: int;

struct Vector1340 {
    x: int;
    y: int;
}

func fact_iter1340(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1340(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1340(n-1);
    }
}

const n1340 = 1 + sizeof(p1340);

var p1340: T1340*;

struct T1340 {
    a: int[n1340];
}


func example_test1341(): int {
    return fact_rec1341(10) == fact_iter1341(10);
}

union IntOrPtr1341 {
    i: int;
    p: int*;
}

// func f1341() {
//    u1 := IntOrPtr1341{i = 42};
//    u2 := IntOrPtr1341{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1341: int;

struct Vector1341 {
    x: int;
    y: int;
}

func fact_iter1341(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1341(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1341(n-1);
    }
}

const n1341 = 1 + sizeof(p1341);

var p1341: T1341*;

struct T1341 {
    a: int[n1341];
}


func example_test1342(): int {
    return fact_rec1342(10) == fact_iter1342(10);
}

union IntOrPtr1342 {
    i: int;
    p: int*;
}

// func f1342() {
//    u1 := IntOrPtr1342{i = 42};
//    u2 := IntOrPtr1342{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1342: int;

struct Vector1342 {
    x: int;
    y: int;
}

func fact_iter1342(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1342(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1342(n-1);
    }
}

const n1342 = 1 + sizeof(p1342);

var p1342: T1342*;

struct T1342 {
    a: int[n1342];
}


func example_test1343(): int {
    return fact_rec1343(10) == fact_iter1343(10);
}

union IntOrPtr1343 {
    i: int;
    p: int*;
}

// func f1343() {
//    u1 := IntOrPtr1343{i = 42};
//    u2 := IntOrPtr1343{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1343: int;

struct Vector1343 {
    x: int;
    y: int;
}

func fact_iter1343(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1343(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1343(n-1);
    }
}

const n1343 = 1 + sizeof(p1343);

var p1343: T1343*;

struct T1343 {
    a: int[n1343];
}


func example_test1344(): int {
    return fact_rec1344(10) == fact_iter1344(10);
}

union IntOrPtr1344 {
    i: int;
    p: int*;
}

// func f1344() {
//    u1 := IntOrPtr1344{i = 42};
//    u2 := IntOrPtr1344{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1344: int;

struct Vector1344 {
    x: int;
    y: int;
}

func fact_iter1344(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1344(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1344(n-1);
    }
}

const n1344 = 1 + sizeof(p1344);

var p1344: T1344*;

struct T1344 {
    a: int[n1344];
}


func example_test1345(): int {
    return fact_rec1345(10) == fact_iter1345(10);
}

union IntOrPtr1345 {
    i: int;
    p: int*;
}

// func f1345() {
//    u1 := IntOrPtr1345{i = 42};
//    u2 := IntOrPtr1345{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1345: int;

struct Vector1345 {
    x: int;
    y: int;
}

func fact_iter1345(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1345(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1345(n-1);
    }
}

const n1345 = 1 + sizeof(p1345);

var p1345: T1345*;

struct T1345 {
    a: int[n1345];
}


func example_test1346(): int {
    return fact_rec1346(10) == fact_iter1346(10);
}

union IntOrPtr1346 {
    i: int;
    p: int*;
}

// func f1346() {
//    u1 := IntOrPtr1346{i = 42};
//    u2 := IntOrPtr1346{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1346: int;

struct Vector1346 {
    x: int;
    y: int;
}

func fact_iter1346(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1346(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1346(n-1);
    }
}

const n1346 = 1 + sizeof(p1346);

var p1346: T1346*;

struct T1346 {
    a: int[n1346];
}


func example_test1347(): int {
    return fact_rec1347(10) == fact_iter1347(10);
}

union IntOrPtr1347 {
    i: int;
    p: int*;
}

// func f1347() {
//    u1 := IntOrPtr1347{i = 42};
//    u2 := IntOrPtr1347{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1347: int;

struct Vector1347 {
    x: int;
    y: int;
}

func fact_iter1347(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1347(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1347(n-1);
    }
}

const n1347 = 1 + sizeof(p1347);

var p1347: T1347*;

struct T1347 {
    a: int[n1347];
}


func example_test1348(): int {
    return fact_rec1348(10) == fact_iter1348(10);
}

union IntOrPtr1348 {
    i: int;
    p: int*;
}

// func f1348() {
//    u1 := IntOrPtr1348{i = 42};
//    u2 := IntOrPtr1348{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1348: int;

struct Vector1348 {
    x: int;
    y: int;
}

func fact_iter1348(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1348(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1348(n-1);
    }
}

const n1348 = 1 + sizeof(p1348);

var p1348: T1348*;

struct T1348 {
    a: int[n1348];
}


func example_test1349(): int {
    return fact_rec1349(10) == fact_iter1349(10);
}

union IntOrPtr1349 {
    i: int;
    p: int*;
}

// func f1349() {
//    u1 := IntOrPtr1349{i = 42};
//    u2 := IntOrPtr1349{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1349: int;

struct Vector1349 {
    x: int;
    y: int;
}

func fact_iter1349(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1349(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1349(n-1);
    }
}

const n1349 = 1 + sizeof(p1349);

var p1349: T1349*;

struct T1349 {
    a: int[n1349];
}


func example_test1350(): int {
    return fact_rec1350(10) == fact_iter1350(10);
}

union IntOrPtr1350 {
    i: int;
    p: int*;
}

// func f1350() {
//    u1 := IntOrPtr1350{i = 42};
//    u2 := IntOrPtr1350{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1350: int;

struct Vector1350 {
    x: int;
    y: int;
}

func fact_iter1350(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1350(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1350(n-1);
    }
}

const n1350 = 1 + sizeof(p1350);

var p1350: T1350*;

struct T1350 {
    a: int[n1350];
}


func example_test1351(): int {
    return fact_rec1351(10) == fact_iter1351(10);
}

union IntOrPtr1351 {
    i: int;
    p: int*;
}

// func f1351() {
//    u1 := IntOrPtr1351{i = 42};
//    u2 := IntOrPtr1351{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1351: int;

struct Vector1351 {
    x: int;
    y: int;
}

func fact_iter1351(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1351(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1351(n-1);
    }
}

const n1351 = 1 + sizeof(p1351);

var p1351: T1351*;

struct T1351 {
    a: int[n1351];
}


func example_test1352(): int {
    return fact_rec1352(10) == fact_iter1352(10);
}

union IntOrPtr1352 {
    i: int;
    p: int*;
}

// func f1352() {
//    u1 := IntOrPtr1352{i = 42};
//    u2 := IntOrPtr1352{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1352: int;

struct Vector1352 {
    x: int;
    y: int;
}

func fact_iter1352(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1352(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1352(n-1);
    }
}

const n1352 = 1 + sizeof(p1352);

var p1352: T1352*;

struct T1352 {
    a: int[n1352];
}


func example_test1353(): int {
    return fact_rec1353(10) == fact_iter1353(10);
}

union IntOrPtr1353 {
    i: int;
    p: int*;
}

// func f1353() {
//    u1 := IntOrPtr1353{i = 42};
//    u2 := IntOrPtr1353{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1353: int;

struct Vector1353 {
    x: int;
    y: int;
}

func fact_iter1353(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1353(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1353(n-1);
    }
}

const n1353 = 1 + sizeof(p1353);

var p1353: T1353*;

struct T1353 {
    a: int[n1353];
}


func example_test1354(): int {
    return fact_rec1354(10) == fact_iter1354(10);
}

union IntOrPtr1354 {
    i: int;
    p: int*;
}

// func f1354() {
//    u1 := IntOrPtr1354{i = 42};
//    u2 := IntOrPtr1354{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1354: int;

struct Vector1354 {
    x: int;
    y: int;
}

func fact_iter1354(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1354(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1354(n-1);
    }
}

const n1354 = 1 + sizeof(p1354);

var p1354: T1354*;

struct T1354 {
    a: int[n1354];
}


func example_test1355(): int {
    return fact_rec1355(10) == fact_iter1355(10);
}

union IntOrPtr1355 {
    i: int;
    p: int*;
}

// func f1355() {
//    u1 := IntOrPtr1355{i = 42};
//    u2 := IntOrPtr1355{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1355: int;

struct Vector1355 {
    x: int;
    y: int;
}

func fact_iter1355(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1355(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1355(n-1);
    }
}

const n1355 = 1 + sizeof(p1355);

var p1355: T1355*;

struct T1355 {
    a: int[n1355];
}


func example_test1356(): int {
    return fact_rec1356(10) == fact_iter1356(10);
}

union IntOrPtr1356 {
    i: int;
    p: int*;
}

// func f1356() {
//    u1 := IntOrPtr1356{i = 42};
//    u2 := IntOrPtr1356{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1356: int;

struct Vector1356 {
    x: int;
    y: int;
}

func fact_iter1356(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1356(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1356(n-1);
    }
}

const n1356 = 1 + sizeof(p1356);

var p1356: T1356*;

struct T1356 {
    a: int[n1356];
}


func example_test1357(): int {
    return fact_rec1357(10) == fact_iter1357(10);
}

union IntOrPtr1357 {
    i: int;
    p: int*;
}

// func f1357() {
//    u1 := IntOrPtr1357{i = 42};
//    u2 := IntOrPtr1357{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1357: int;

struct Vector1357 {
    x: int;
    y: int;
}

func fact_iter1357(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1357(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1357(n-1);
    }
}

const n1357 = 1 + sizeof(p1357);

var p1357: T1357*;

struct T1357 {
    a: int[n1357];
}


func example_test1358(): int {
    return fact_rec1358(10) == fact_iter1358(10);
}

union IntOrPtr1358 {
    i: int;
    p: int*;
}

// func f1358() {
//    u1 := IntOrPtr1358{i = 42};
//    u2 := IntOrPtr1358{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1358: int;

struct Vector1358 {
    x: int;
    y: int;
}

func fact_iter1358(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1358(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1358(n-1);
    }
}

const n1358 = 1 + sizeof(p1358);

var p1358: T1358*;

struct T1358 {
    a: int[n1358];
}


func example_test1359(): int {
    return fact_rec1359(10) == fact_iter1359(10);
}

union IntOrPtr1359 {
    i: int;
    p: int*;
}

// func f1359() {
//    u1 := IntOrPtr1359{i = 42};
//    u2 := IntOrPtr1359{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1359: int;

struct Vector1359 {
    x: int;
    y: int;
}

func fact_iter1359(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1359(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1359(n-1);
    }
}

const n1359 = 1 + sizeof(p1359);

var p1359: T1359*;

struct T1359 {
    a: int[n1359];
}


func example_test1360(): int {
    return fact_rec1360(10) == fact_iter1360(10);
}

union IntOrPtr1360 {
    i: int;
    p: int*;
}

// func f1360() {
//    u1 := IntOrPtr1360{i = 42};
//    u2 := IntOrPtr1360{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1360: int;

struct Vector1360 {
    x: int;
    y: int;
}

func fact_iter1360(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1360(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1360(n-1);
    }
}

const n1360 = 1 + sizeof(p1360);

var p1360: T1360*;

struct T1360 {
    a: int[n1360];
}


func example_test1361(): int {
    return fact_rec1361(10) == fact_iter1361(10);
}

union IntOrPtr1361 {
    i: int;
    p: int*;
}

// func f1361() {
//    u1 := IntOrPtr1361{i = 42};
//    u2 := IntOrPtr1361{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1361: int;

struct Vector1361 {
    x: int;
    y: int;
}

func fact_iter1361(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1361(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1361(n-1);
    }
}

const n1361 = 1 + sizeof(p1361);

var p1361: T1361*;

struct T1361 {
    a: int[n1361];
}


func example_test1362(): int {
    return fact_rec1362(10) == fact_iter1362(10);
}

union IntOrPtr1362 {
    i: int;
    p: int*;
}

// func f1362() {
//    u1 := IntOrPtr1362{i = 42};
//    u2 := IntOrPtr1362{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1362: int;

struct Vector1362 {
    x: int;
    y: int;
}

func fact_iter1362(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1362(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1362(n-1);
    }
}

const n1362 = 1 + sizeof(p1362);

var p1362: T1362*;

struct T1362 {
    a: int[n1362];
}


func example_test1363(): int {
    return fact_rec1363(10) == fact_iter1363(10);
}

union IntOrPtr1363 {
    i: int;
    p: int*;
}

// func f1363() {
//    u1 := IntOrPtr1363{i = 42};
//    u2 := IntOrPtr1363{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1363: int;

struct Vector1363 {
    x: int;
    y: int;
}

func fact_iter1363(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1363(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1363(n-1);
    }
}

const n1363 = 1 + sizeof(p1363);

var p1363: T1363*;

struct T1363 {
    a: int[n1363];
}


func example_test1364(): int {
    return fact_rec1364(10) == fact_iter1364(10);
}

union IntOrPtr1364 {
    i: int;
    p: int*;
}

// func f1364() {
//    u1 := IntOrPtr1364{i = 42};
//    u2 := IntOrPtr1364{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1364: int;

struct Vector1364 {
    x: int;
    y: int;
}

func fact_iter1364(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1364(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1364(n-1);
    }
}

const n1364 = 1 + sizeof(p1364);

var p1364: T1364*;

struct T1364 {
    a: int[n1364];
}


func example_test1365(): int {
    return fact_rec1365(10) == fact_iter1365(10);
}

union IntOrPtr1365 {
    i: int;
    p: int*;
}

// func f1365() {
//    u1 := IntOrPtr1365{i = 42};
//    u2 := IntOrPtr1365{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1365: int;

struct Vector1365 {
    x: int;
    y: int;
}

func fact_iter1365(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1365(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1365(n-1);
    }
}

const n1365 = 1 + sizeof(p1365);

var p1365: T1365*;

struct T1365 {
    a: int[n1365];
}


func example_test1366(): int {
    return fact_rec1366(10) == fact_iter1366(10);
}

union IntOrPtr1366 {
    i: int;
    p: int*;
}

// func f1366() {
//    u1 := IntOrPtr1366{i = 42};
//    u2 := IntOrPtr1366{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1366: int;

struct Vector1366 {
    x: int;
    y: int;
}

func fact_iter1366(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1366(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1366(n-1);
    }
}

const n1366 = 1 + sizeof(p1366);

var p1366: T1366*;

struct T1366 {
    a: int[n1366];
}


func example_test1367(): int {
    return fact_rec1367(10) == fact_iter1367(10);
}

union IntOrPtr1367 {
    i: int;
    p: int*;
}

// func f1367() {
//    u1 := IntOrPtr1367{i = 42};
//    u2 := IntOrPtr1367{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1367: int;

struct Vector1367 {
    x: int;
    y: int;
}

func fact_iter1367(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1367(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1367(n-1);
    }
}

const n1367 = 1 + sizeof(p1367);

var p1367: T1367*;

struct T1367 {
    a: int[n1367];
}


func example_test1368(): int {
    return fact_rec1368(10) == fact_iter1368(10);
}

union IntOrPtr1368 {
    i: int;
    p: int*;
}

// func f1368() {
//    u1 := IntOrPtr1368{i = 42};
//    u2 := IntOrPtr1368{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1368: int;

struct Vector1368 {
    x: int;
    y: int;
}

func fact_iter1368(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1368(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1368(n-1);
    }
}

const n1368 = 1 + sizeof(p1368);

var p1368: T1368*;

struct T1368 {
    a: int[n1368];
}


func example_test1369(): int {
    return fact_rec1369(10) == fact_iter1369(10);
}

union IntOrPtr1369 {
    i: int;
    p: int*;
}

// func f1369() {
//    u1 := IntOrPtr1369{i = 42};
//    u2 := IntOrPtr1369{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1369: int;

struct Vector1369 {
    x: int;
    y: int;
}

func fact_iter1369(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1369(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1369(n-1);
    }
}

const n1369 = 1 + sizeof(p1369);

var p1369: T1369*;

struct T1369 {
    a: int[n1369];
}


func example_test1370(): int {
    return fact_rec1370(10) == fact_iter1370(10);
}

union IntOrPtr1370 {
    i: int;
    p: int*;
}

// func f1370() {
//    u1 := IntOrPtr1370{i = 42};
//    u2 := IntOrPtr1370{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1370: int;

struct Vector1370 {
    x: int;
    y: int;
}

func fact_iter1370(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1370(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1370(n-1);
    }
}

const n1370 = 1 + sizeof(p1370);

var p1370: T1370*;

struct T1370 {
    a: int[n1370];
}


func example_test1371(): int {
    return fact_rec1371(10) == fact_iter1371(10);
}

union IntOrPtr1371 {
    i: int;
    p: int*;
}

// func f1371() {
//    u1 := IntOrPtr1371{i = 42};
//    u2 := IntOrPtr1371{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1371: int;

struct Vector1371 {
    x: int;
    y: int;
}

func fact_iter1371(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1371(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1371(n-1);
    }
}

const n1371 = 1 + sizeof(p1371);

var p1371: T1371*;

struct T1371 {
    a: int[n1371];
}


func example_test1372(): int {
    return fact_rec1372(10) == fact_iter1372(10);
}

union IntOrPtr1372 {
    i: int;
    p: int*;
}

// func f1372() {
//    u1 := IntOrPtr1372{i = 42};
//    u2 := IntOrPtr1372{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1372: int;

struct Vector1372 {
    x: int;
    y: int;
}

func fact_iter1372(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1372(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1372(n-1);
    }
}

const n1372 = 1 + sizeof(p1372);

var p1372: T1372*;

struct T1372 {
    a: int[n1372];
}


func example_test1373(): int {
    return fact_rec1373(10) == fact_iter1373(10);
}

union IntOrPtr1373 {
    i: int;
    p: int*;
}

// func f1373() {
//    u1 := IntOrPtr1373{i = 42};
//    u2 := IntOrPtr1373{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1373: int;

struct Vector1373 {
    x: int;
    y: int;
}

func fact_iter1373(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1373(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1373(n-1);
    }
}

const n1373 = 1 + sizeof(p1373);

var p1373: T1373*;

struct T1373 {
    a: int[n1373];
}


func example_test1374(): int {
    return fact_rec1374(10) == fact_iter1374(10);
}

union IntOrPtr1374 {
    i: int;
    p: int*;
}

// func f1374() {
//    u1 := IntOrPtr1374{i = 42};
//    u2 := IntOrPtr1374{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1374: int;

struct Vector1374 {
    x: int;
    y: int;
}

func fact_iter1374(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1374(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1374(n-1);
    }
}

const n1374 = 1 + sizeof(p1374);

var p1374: T1374*;

struct T1374 {
    a: int[n1374];
}


func example_test1375(): int {
    return fact_rec1375(10) == fact_iter1375(10);
}

union IntOrPtr1375 {
    i: int;
    p: int*;
}

// func f1375() {
//    u1 := IntOrPtr1375{i = 42};
//    u2 := IntOrPtr1375{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1375: int;

struct Vector1375 {
    x: int;
    y: int;
}

func fact_iter1375(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1375(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1375(n-1);
    }
}

const n1375 = 1 + sizeof(p1375);

var p1375: T1375*;

struct T1375 {
    a: int[n1375];
}


func example_test1376(): int {
    return fact_rec1376(10) == fact_iter1376(10);
}

union IntOrPtr1376 {
    i: int;
    p: int*;
}

// func f1376() {
//    u1 := IntOrPtr1376{i = 42};
//    u2 := IntOrPtr1376{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1376: int;

struct Vector1376 {
    x: int;
    y: int;
}

func fact_iter1376(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1376(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1376(n-1);
    }
}

const n1376 = 1 + sizeof(p1376);

var p1376: T1376*;

struct T1376 {
    a: int[n1376];
}


func example_test1377(): int {
    return fact_rec1377(10) == fact_iter1377(10);
}

union IntOrPtr1377 {
    i: int;
    p: int*;
}

// func f1377() {
//    u1 := IntOrPtr1377{i = 42};
//    u2 := IntOrPtr1377{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1377: int;

struct Vector1377 {
    x: int;
    y: int;
}

func fact_iter1377(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1377(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1377(n-1);
    }
}

const n1377 = 1 + sizeof(p1377);

var p1377: T1377*;

struct T1377 {
    a: int[n1377];
}


func example_test1378(): int {
    return fact_rec1378(10) == fact_iter1378(10);
}

union IntOrPtr1378 {
    i: int;
    p: int*;
}

// func f1378() {
//    u1 := IntOrPtr1378{i = 42};
//    u2 := IntOrPtr1378{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1378: int;

struct Vector1378 {
    x: int;
    y: int;
}

func fact_iter1378(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1378(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1378(n-1);
    }
}

const n1378 = 1 + sizeof(p1378);

var p1378: T1378*;

struct T1378 {
    a: int[n1378];
}


func example_test1379(): int {
    return fact_rec1379(10) == fact_iter1379(10);
}

union IntOrPtr1379 {
    i: int;
    p: int*;
}

// func f1379() {
//    u1 := IntOrPtr1379{i = 42};
//    u2 := IntOrPtr1379{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1379: int;

struct Vector1379 {
    x: int;
    y: int;
}

func fact_iter1379(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1379(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1379(n-1);
    }
}

const n1379 = 1 + sizeof(p1379);

var p1379: T1379*;

struct T1379 {
    a: int[n1379];
}


func example_test1380(): int {
    return fact_rec1380(10) == fact_iter1380(10);
}

union IntOrPtr1380 {
    i: int;
    p: int*;
}

// func f1380() {
//    u1 := IntOrPtr1380{i = 42};
//    u2 := IntOrPtr1380{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1380: int;

struct Vector1380 {
    x: int;
    y: int;
}

func fact_iter1380(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1380(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1380(n-1);
    }
}

const n1380 = 1 + sizeof(p1380);

var p1380: T1380*;

struct T1380 {
    a: int[n1380];
}


func example_test1381(): int {
    return fact_rec1381(10) == fact_iter1381(10);
}

union IntOrPtr1381 {
    i: int;
    p: int*;
}

// func f1381() {
//    u1 := IntOrPtr1381{i = 42};
//    u2 := IntOrPtr1381{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1381: int;

struct Vector1381 {
    x: int;
    y: int;
}

func fact_iter1381(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1381(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1381(n-1);
    }
}

const n1381 = 1 + sizeof(p1381);

var p1381: T1381*;

struct T1381 {
    a: int[n1381];
}


func example_test1382(): int {
    return fact_rec1382(10) == fact_iter1382(10);
}

union IntOrPtr1382 {
    i: int;
    p: int*;
}

// func f1382() {
//    u1 := IntOrPtr1382{i = 42};
//    u2 := IntOrPtr1382{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1382: int;

struct Vector1382 {
    x: int;
    y: int;
}

func fact_iter1382(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1382(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1382(n-1);
    }
}

const n1382 = 1 + sizeof(p1382);

var p1382: T1382*;

struct T1382 {
    a: int[n1382];
}


func example_test1383(): int {
    return fact_rec1383(10) == fact_iter1383(10);
}

union IntOrPtr1383 {
    i: int;
    p: int*;
}

// func f1383() {
//    u1 := IntOrPtr1383{i = 42};
//    u2 := IntOrPtr1383{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1383: int;

struct Vector1383 {
    x: int;
    y: int;
}

func fact_iter1383(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1383(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1383(n-1);
    }
}

const n1383 = 1 + sizeof(p1383);

var p1383: T1383*;

struct T1383 {
    a: int[n1383];
}


func example_test1384(): int {
    return fact_rec1384(10) == fact_iter1384(10);
}

union IntOrPtr1384 {
    i: int;
    p: int*;
}

// func f1384() {
//    u1 := IntOrPtr1384{i = 42};
//    u2 := IntOrPtr1384{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1384: int;

struct Vector1384 {
    x: int;
    y: int;
}

func fact_iter1384(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1384(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1384(n-1);
    }
}

const n1384 = 1 + sizeof(p1384);

var p1384: T1384*;

struct T1384 {
    a: int[n1384];
}


func example_test1385(): int {
    return fact_rec1385(10) == fact_iter1385(10);
}

union IntOrPtr1385 {
    i: int;
    p: int*;
}

// func f1385() {
//    u1 := IntOrPtr1385{i = 42};
//    u2 := IntOrPtr1385{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1385: int;

struct Vector1385 {
    x: int;
    y: int;
}

func fact_iter1385(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1385(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1385(n-1);
    }
}

const n1385 = 1 + sizeof(p1385);

var p1385: T1385*;

struct T1385 {
    a: int[n1385];
}


func example_test1386(): int {
    return fact_rec1386(10) == fact_iter1386(10);
}

union IntOrPtr1386 {
    i: int;
    p: int*;
}

// func f1386() {
//    u1 := IntOrPtr1386{i = 42};
//    u2 := IntOrPtr1386{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1386: int;

struct Vector1386 {
    x: int;
    y: int;
}

func fact_iter1386(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1386(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1386(n-1);
    }
}

const n1386 = 1 + sizeof(p1386);

var p1386: T1386*;

struct T1386 {
    a: int[n1386];
}


func example_test1387(): int {
    return fact_rec1387(10) == fact_iter1387(10);
}

union IntOrPtr1387 {
    i: int;
    p: int*;
}

// func f1387() {
//    u1 := IntOrPtr1387{i = 42};
//    u2 := IntOrPtr1387{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1387: int;

struct Vector1387 {
    x: int;
    y: int;
}

func fact_iter1387(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1387(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1387(n-1);
    }
}

const n1387 = 1 + sizeof(p1387);

var p1387: T1387*;

struct T1387 {
    a: int[n1387];
}


func example_test1388(): int {
    return fact_rec1388(10) == fact_iter1388(10);
}

union IntOrPtr1388 {
    i: int;
    p: int*;
}

// func f1388() {
//    u1 := IntOrPtr1388{i = 42};
//    u2 := IntOrPtr1388{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1388: int;

struct Vector1388 {
    x: int;
    y: int;
}

func fact_iter1388(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1388(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1388(n-1);
    }
}

const n1388 = 1 + sizeof(p1388);

var p1388: T1388*;

struct T1388 {
    a: int[n1388];
}


func example_test1389(): int {
    return fact_rec1389(10) == fact_iter1389(10);
}

union IntOrPtr1389 {
    i: int;
    p: int*;
}

// func f1389() {
//    u1 := IntOrPtr1389{i = 42};
//    u2 := IntOrPtr1389{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1389: int;

struct Vector1389 {
    x: int;
    y: int;
}

func fact_iter1389(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1389(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1389(n-1);
    }
}

const n1389 = 1 + sizeof(p1389);

var p1389: T1389*;

struct T1389 {
    a: int[n1389];
}


func example_test1390(): int {
    return fact_rec1390(10) == fact_iter1390(10);
}

union IntOrPtr1390 {
    i: int;
    p: int*;
}

// func f1390() {
//    u1 := IntOrPtr1390{i = 42};
//    u2 := IntOrPtr1390{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1390: int;

struct Vector1390 {
    x: int;
    y: int;
}

func fact_iter1390(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1390(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1390(n-1);
    }
}

const n1390 = 1 + sizeof(p1390);

var p1390: T1390*;

struct T1390 {
    a: int[n1390];
}


func example_test1391(): int {
    return fact_rec1391(10) == fact_iter1391(10);
}

union IntOrPtr1391 {
    i: int;
    p: int*;
}

// func f1391() {
//    u1 := IntOrPtr1391{i = 42};
//    u2 := IntOrPtr1391{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1391: int;

struct Vector1391 {
    x: int;
    y: int;
}

func fact_iter1391(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1391(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1391(n-1);
    }
}

const n1391 = 1 + sizeof(p1391);

var p1391: T1391*;

struct T1391 {
    a: int[n1391];
}


func example_test1392(): int {
    return fact_rec1392(10) == fact_iter1392(10);
}

union IntOrPtr1392 {
    i: int;
    p: int*;
}

// func f1392() {
//    u1 := IntOrPtr1392{i = 42};
//    u2 := IntOrPtr1392{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1392: int;

struct Vector1392 {
    x: int;
    y: int;
}

func fact_iter1392(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1392(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1392(n-1);
    }
}

const n1392 = 1 + sizeof(p1392);

var p1392: T1392*;

struct T1392 {
    a: int[n1392];
}


func example_test1393(): int {
    return fact_rec1393(10) == fact_iter1393(10);
}

union IntOrPtr1393 {
    i: int;
    p: int*;
}

// func f1393() {
//    u1 := IntOrPtr1393{i = 42};
//    u2 := IntOrPtr1393{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1393: int;

struct Vector1393 {
    x: int;
    y: int;
}

func fact_iter1393(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1393(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1393(n-1);
    }
}

const n1393 = 1 + sizeof(p1393);

var p1393: T1393*;

struct T1393 {
    a: int[n1393];
}


func example_test1394(): int {
    return fact_rec1394(10) == fact_iter1394(10);
}

union IntOrPtr1394 {
    i: int;
    p: int*;
}

// func f1394() {
//    u1 := IntOrPtr1394{i = 42};
//    u2 := IntOrPtr1394{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1394: int;

struct Vector1394 {
    x: int;
    y: int;
}

func fact_iter1394(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1394(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1394(n-1);
    }
}

const n1394 = 1 + sizeof(p1394);

var p1394: T1394*;

struct T1394 {
    a: int[n1394];
}


func example_test1395(): int {
    return fact_rec1395(10) == fact_iter1395(10);
}

union IntOrPtr1395 {
    i: int;
    p: int*;
}

// func f1395() {
//    u1 := IntOrPtr1395{i = 42};
//    u2 := IntOrPtr1395{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1395: int;

struct Vector1395 {
    x: int;
    y: int;
}

func fact_iter1395(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1395(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1395(n-1);
    }
}

const n1395 = 1 + sizeof(p1395);

var p1395: T1395*;

struct T1395 {
    a: int[n1395];
}


func example_test1396(): int {
    return fact_rec1396(10) == fact_iter1396(10);
}

union IntOrPtr1396 {
    i: int;
    p: int*;
}

// func f1396() {
//    u1 := IntOrPtr1396{i = 42};
//    u2 := IntOrPtr1396{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1396: int;

struct Vector1396 {
    x: int;
    y: int;
}

func fact_iter1396(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1396(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1396(n-1);
    }
}

const n1396 = 1 + sizeof(p1396);

var p1396: T1396*;

struct T1396 {
    a: int[n1396];
}


func example_test1397(): int {
    return fact_rec1397(10) == fact_iter1397(10);
}

union IntOrPtr1397 {
    i: int;
    p: int*;
}

// func f1397() {
//    u1 := IntOrPtr1397{i = 42};
//    u2 := IntOrPtr1397{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1397: int;

struct Vector1397 {
    x: int;
    y: int;
}

func fact_iter1397(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1397(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1397(n-1);
    }
}

const n1397 = 1 + sizeof(p1397);

var p1397: T1397*;

struct T1397 {
    a: int[n1397];
}


func example_test1398(): int {
    return fact_rec1398(10) == fact_iter1398(10);
}

union IntOrPtr1398 {
    i: int;
    p: int*;
}

// func f1398() {
//    u1 := IntOrPtr1398{i = 42};
//    u2 := IntOrPtr1398{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1398: int;

struct Vector1398 {
    x: int;
    y: int;
}

func fact_iter1398(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1398(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1398(n-1);
    }
}

const n1398 = 1 + sizeof(p1398);

var p1398: T1398*;

struct T1398 {
    a: int[n1398];
}


func example_test1399(): int {
    return fact_rec1399(10) == fact_iter1399(10);
}

union IntOrPtr1399 {
    i: int;
    p: int*;
}

// func f1399() {
//    u1 := IntOrPtr1399{i = 42};
//    u2 := IntOrPtr1399{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1399: int;

struct Vector1399 {
    x: int;
    y: int;
}

func fact_iter1399(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1399(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1399(n-1);
    }
}

const n1399 = 1 + sizeof(p1399);

var p1399: T1399*;

struct T1399 {
    a: int[n1399];
}


func example_test1400(): int {
    return fact_rec1400(10) == fact_iter1400(10);
}

union IntOrPtr1400 {
    i: int;
    p: int*;
}

// func f1400() {
//    u1 := IntOrPtr1400{i = 42};
//    u2 := IntOrPtr1400{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1400: int;

struct Vector1400 {
    x: int;
    y: int;
}

func fact_iter1400(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1400(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1400(n-1);
    }
}

const n1400 = 1 + sizeof(p1400);

var p1400: T1400*;

struct T1400 {
    a: int[n1400];
}


func example_test1401(): int {
    return fact_rec1401(10) == fact_iter1401(10);
}

union IntOrPtr1401 {
    i: int;
    p: int*;
}

// func f1401() {
//    u1 := IntOrPtr1401{i = 42};
//    u2 := IntOrPtr1401{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1401: int;

struct Vector1401 {
    x: int;
    y: int;
}

func fact_iter1401(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1401(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1401(n-1);
    }
}

const n1401 = 1 + sizeof(p1401);

var p1401: T1401*;

struct T1401 {
    a: int[n1401];
}


func example_test1402(): int {
    return fact_rec1402(10) == fact_iter1402(10);
}

union IntOrPtr1402 {
    i: int;
    p: int*;
}

// func f1402() {
//    u1 := IntOrPtr1402{i = 42};
//    u2 := IntOrPtr1402{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1402: int;

struct Vector1402 {
    x: int;
    y: int;
}

func fact_iter1402(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1402(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1402(n-1);
    }
}

const n1402 = 1 + sizeof(p1402);

var p1402: T1402*;

struct T1402 {
    a: int[n1402];
}


func example_test1403(): int {
    return fact_rec1403(10) == fact_iter1403(10);
}

union IntOrPtr1403 {
    i: int;
    p: int*;
}

// func f1403() {
//    u1 := IntOrPtr1403{i = 42};
//    u2 := IntOrPtr1403{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1403: int;

struct Vector1403 {
    x: int;
    y: int;
}

func fact_iter1403(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1403(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1403(n-1);
    }
}

const n1403 = 1 + sizeof(p1403);

var p1403: T1403*;

struct T1403 {
    a: int[n1403];
}


func example_test1404(): int {
    return fact_rec1404(10) == fact_iter1404(10);
}

union IntOrPtr1404 {
    i: int;
    p: int*;
}

// func f1404() {
//    u1 := IntOrPtr1404{i = 42};
//    u2 := IntOrPtr1404{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1404: int;

struct Vector1404 {
    x: int;
    y: int;
}

func fact_iter1404(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1404(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1404(n-1);
    }
}

const n1404 = 1 + sizeof(p1404);

var p1404: T1404*;

struct T1404 {
    a: int[n1404];
}


func example_test1405(): int {
    return fact_rec1405(10) == fact_iter1405(10);
}

union IntOrPtr1405 {
    i: int;
    p: int*;
}

// func f1405() {
//    u1 := IntOrPtr1405{i = 42};
//    u2 := IntOrPtr1405{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1405: int;

struct Vector1405 {
    x: int;
    y: int;
}

func fact_iter1405(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1405(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1405(n-1);
    }
}

const n1405 = 1 + sizeof(p1405);

var p1405: T1405*;

struct T1405 {
    a: int[n1405];
}


func example_test1406(): int {
    return fact_rec1406(10) == fact_iter1406(10);
}

union IntOrPtr1406 {
    i: int;
    p: int*;
}

// func f1406() {
//    u1 := IntOrPtr1406{i = 42};
//    u2 := IntOrPtr1406{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1406: int;

struct Vector1406 {
    x: int;
    y: int;
}

func fact_iter1406(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1406(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1406(n-1);
    }
}

const n1406 = 1 + sizeof(p1406);

var p1406: T1406*;

struct T1406 {
    a: int[n1406];
}


func example_test1407(): int {
    return fact_rec1407(10) == fact_iter1407(10);
}

union IntOrPtr1407 {
    i: int;
    p: int*;
}

// func f1407() {
//    u1 := IntOrPtr1407{i = 42};
//    u2 := IntOrPtr1407{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1407: int;

struct Vector1407 {
    x: int;
    y: int;
}

func fact_iter1407(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1407(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1407(n-1);
    }
}

const n1407 = 1 + sizeof(p1407);

var p1407: T1407*;

struct T1407 {
    a: int[n1407];
}


func example_test1408(): int {
    return fact_rec1408(10) == fact_iter1408(10);
}

union IntOrPtr1408 {
    i: int;
    p: int*;
}

// func f1408() {
//    u1 := IntOrPtr1408{i = 42};
//    u2 := IntOrPtr1408{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1408: int;

struct Vector1408 {
    x: int;
    y: int;
}

func fact_iter1408(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1408(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1408(n-1);
    }
}

const n1408 = 1 + sizeof(p1408);

var p1408: T1408*;

struct T1408 {
    a: int[n1408];
}


func example_test1409(): int {
    return fact_rec1409(10) == fact_iter1409(10);
}

union IntOrPtr1409 {
    i: int;
    p: int*;
}

// func f1409() {
//    u1 := IntOrPtr1409{i = 42};
//    u2 := IntOrPtr1409{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1409: int;

struct Vector1409 {
    x: int;
    y: int;
}

func fact_iter1409(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1409(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1409(n-1);
    }
}

const n1409 = 1 + sizeof(p1409);

var p1409: T1409*;

struct T1409 {
    a: int[n1409];
}


func example_test1410(): int {
    return fact_rec1410(10) == fact_iter1410(10);
}

union IntOrPtr1410 {
    i: int;
    p: int*;
}

// func f1410() {
//    u1 := IntOrPtr1410{i = 42};
//    u2 := IntOrPtr1410{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1410: int;

struct Vector1410 {
    x: int;
    y: int;
}

func fact_iter1410(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1410(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1410(n-1);
    }
}

const n1410 = 1 + sizeof(p1410);

var p1410: T1410*;

struct T1410 {
    a: int[n1410];
}


func example_test1411(): int {
    return fact_rec1411(10) == fact_iter1411(10);
}

union IntOrPtr1411 {
    i: int;
    p: int*;
}

// func f1411() {
//    u1 := IntOrPtr1411{i = 42};
//    u2 := IntOrPtr1411{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1411: int;

struct Vector1411 {
    x: int;
    y: int;
}

func fact_iter1411(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1411(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1411(n-1);
    }
}

const n1411 = 1 + sizeof(p1411);

var p1411: T1411*;

struct T1411 {
    a: int[n1411];
}


func example_test1412(): int {
    return fact_rec1412(10) == fact_iter1412(10);
}

union IntOrPtr1412 {
    i: int;
    p: int*;
}

// func f1412() {
//    u1 := IntOrPtr1412{i = 42};
//    u2 := IntOrPtr1412{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1412: int;

struct Vector1412 {
    x: int;
    y: int;
}

func fact_iter1412(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1412(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1412(n-1);
    }
}

const n1412 = 1 + sizeof(p1412);

var p1412: T1412*;

struct T1412 {
    a: int[n1412];
}


func example_test1413(): int {
    return fact_rec1413(10) == fact_iter1413(10);
}

union IntOrPtr1413 {
    i: int;
    p: int*;
}

// func f1413() {
//    u1 := IntOrPtr1413{i = 42};
//    u2 := IntOrPtr1413{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1413: int;

struct Vector1413 {
    x: int;
    y: int;
}

func fact_iter1413(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1413(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1413(n-1);
    }
}

const n1413 = 1 + sizeof(p1413);

var p1413: T1413*;

struct T1413 {
    a: int[n1413];
}


func example_test1414(): int {
    return fact_rec1414(10) == fact_iter1414(10);
}

union IntOrPtr1414 {
    i: int;
    p: int*;
}

// func f1414() {
//    u1 := IntOrPtr1414{i = 42};
//    u2 := IntOrPtr1414{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1414: int;

struct Vector1414 {
    x: int;
    y: int;
}

func fact_iter1414(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1414(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1414(n-1);
    }
}

const n1414 = 1 + sizeof(p1414);

var p1414: T1414*;

struct T1414 {
    a: int[n1414];
}


func example_test1415(): int {
    return fact_rec1415(10) == fact_iter1415(10);
}

union IntOrPtr1415 {
    i: int;
    p: int*;
}

// func f1415() {
//    u1 := IntOrPtr1415{i = 42};
//    u2 := IntOrPtr1415{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1415: int;

struct Vector1415 {
    x: int;
    y: int;
}

func fact_iter1415(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1415(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1415(n-1);
    }
}

const n1415 = 1 + sizeof(p1415);

var p1415: T1415*;

struct T1415 {
    a: int[n1415];
}


func example_test1416(): int {
    return fact_rec1416(10) == fact_iter1416(10);
}

union IntOrPtr1416 {
    i: int;
    p: int*;
}

// func f1416() {
//    u1 := IntOrPtr1416{i = 42};
//    u2 := IntOrPtr1416{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1416: int;

struct Vector1416 {
    x: int;
    y: int;
}

func fact_iter1416(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1416(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1416(n-1);
    }
}

const n1416 = 1 + sizeof(p1416);

var p1416: T1416*;

struct T1416 {
    a: int[n1416];
}


func example_test1417(): int {
    return fact_rec1417(10) == fact_iter1417(10);
}

union IntOrPtr1417 {
    i: int;
    p: int*;
}

// func f1417() {
//    u1 := IntOrPtr1417{i = 42};
//    u2 := IntOrPtr1417{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1417: int;

struct Vector1417 {
    x: int;
    y: int;
}

func fact_iter1417(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1417(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1417(n-1);
    }
}

const n1417 = 1 + sizeof(p1417);

var p1417: T1417*;

struct T1417 {
    a: int[n1417];
}


func example_test1418(): int {
    return fact_rec1418(10) == fact_iter1418(10);
}

union IntOrPtr1418 {
    i: int;
    p: int*;
}

// func f1418() {
//    u1 := IntOrPtr1418{i = 42};
//    u2 := IntOrPtr1418{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1418: int;

struct Vector1418 {
    x: int;
    y: int;
}

func fact_iter1418(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1418(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1418(n-1);
    }
}

const n1418 = 1 + sizeof(p1418);

var p1418: T1418*;

struct T1418 {
    a: int[n1418];
}


func example_test1419(): int {
    return fact_rec1419(10) == fact_iter1419(10);
}

union IntOrPtr1419 {
    i: int;
    p: int*;
}

// func f1419() {
//    u1 := IntOrPtr1419{i = 42};
//    u2 := IntOrPtr1419{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1419: int;

struct Vector1419 {
    x: int;
    y: int;
}

func fact_iter1419(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1419(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1419(n-1);
    }
}

const n1419 = 1 + sizeof(p1419);

var p1419: T1419*;

struct T1419 {
    a: int[n1419];
}


func example_test1420(): int {
    return fact_rec1420(10) == fact_iter1420(10);
}

union IntOrPtr1420 {
    i: int;
    p: int*;
}

// func f1420() {
//    u1 := IntOrPtr1420{i = 42};
//    u2 := IntOrPtr1420{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1420: int;

struct Vector1420 {
    x: int;
    y: int;
}

func fact_iter1420(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1420(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1420(n-1);
    }
}

const n1420 = 1 + sizeof(p1420);

var p1420: T1420*;

struct T1420 {
    a: int[n1420];
}


func example_test1421(): int {
    return fact_rec1421(10) == fact_iter1421(10);
}

union IntOrPtr1421 {
    i: int;
    p: int*;
}

// func f1421() {
//    u1 := IntOrPtr1421{i = 42};
//    u2 := IntOrPtr1421{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1421: int;

struct Vector1421 {
    x: int;
    y: int;
}

func fact_iter1421(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1421(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1421(n-1);
    }
}

const n1421 = 1 + sizeof(p1421);

var p1421: T1421*;

struct T1421 {
    a: int[n1421];
}


func example_test1422(): int {
    return fact_rec1422(10) == fact_iter1422(10);
}

union IntOrPtr1422 {
    i: int;
    p: int*;
}

// func f1422() {
//    u1 := IntOrPtr1422{i = 42};
//    u2 := IntOrPtr1422{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1422: int;

struct Vector1422 {
    x: int;
    y: int;
}

func fact_iter1422(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1422(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1422(n-1);
    }
}

const n1422 = 1 + sizeof(p1422);

var p1422: T1422*;

struct T1422 {
    a: int[n1422];
}


func example_test1423(): int {
    return fact_rec1423(10) == fact_iter1423(10);
}

union IntOrPtr1423 {
    i: int;
    p: int*;
}

// func f1423() {
//    u1 := IntOrPtr1423{i = 42};
//    u2 := IntOrPtr1423{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1423: int;

struct Vector1423 {
    x: int;
    y: int;
}

func fact_iter1423(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1423(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1423(n-1);
    }
}

const n1423 = 1 + sizeof(p1423);

var p1423: T1423*;

struct T1423 {
    a: int[n1423];
}


func example_test1424(): int {
    return fact_rec1424(10) == fact_iter1424(10);
}

union IntOrPtr1424 {
    i: int;
    p: int*;
}

// func f1424() {
//    u1 := IntOrPtr1424{i = 42};
//    u2 := IntOrPtr1424{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1424: int;

struct Vector1424 {
    x: int;
    y: int;
}

func fact_iter1424(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1424(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1424(n-1);
    }
}

const n1424 = 1 + sizeof(p1424);

var p1424: T1424*;

struct T1424 {
    a: int[n1424];
}


func example_test1425(): int {
    return fact_rec1425(10) == fact_iter1425(10);
}

union IntOrPtr1425 {
    i: int;
    p: int*;
}

// func f1425() {
//    u1 := IntOrPtr1425{i = 42};
//    u2 := IntOrPtr1425{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1425: int;

struct Vector1425 {
    x: int;
    y: int;
}

func fact_iter1425(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1425(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1425(n-1);
    }
}

const n1425 = 1 + sizeof(p1425);

var p1425: T1425*;

struct T1425 {
    a: int[n1425];
}


func example_test1426(): int {
    return fact_rec1426(10) == fact_iter1426(10);
}

union IntOrPtr1426 {
    i: int;
    p: int*;
}

// func f1426() {
//    u1 := IntOrPtr1426{i = 42};
//    u2 := IntOrPtr1426{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1426: int;

struct Vector1426 {
    x: int;
    y: int;
}

func fact_iter1426(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1426(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1426(n-1);
    }
}

const n1426 = 1 + sizeof(p1426);

var p1426: T1426*;

struct T1426 {
    a: int[n1426];
}


func example_test1427(): int {
    return fact_rec1427(10) == fact_iter1427(10);
}

union IntOrPtr1427 {
    i: int;
    p: int*;
}

// func f1427() {
//    u1 := IntOrPtr1427{i = 42};
//    u2 := IntOrPtr1427{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1427: int;

struct Vector1427 {
    x: int;
    y: int;
}

func fact_iter1427(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1427(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1427(n-1);
    }
}

const n1427 = 1 + sizeof(p1427);

var p1427: T1427*;

struct T1427 {
    a: int[n1427];
}


func example_test1428(): int {
    return fact_rec1428(10) == fact_iter1428(10);
}

union IntOrPtr1428 {
    i: int;
    p: int*;
}

// func f1428() {
//    u1 := IntOrPtr1428{i = 42};
//    u2 := IntOrPtr1428{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1428: int;

struct Vector1428 {
    x: int;
    y: int;
}

func fact_iter1428(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1428(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1428(n-1);
    }
}

const n1428 = 1 + sizeof(p1428);

var p1428: T1428*;

struct T1428 {
    a: int[n1428];
}


func example_test1429(): int {
    return fact_rec1429(10) == fact_iter1429(10);
}

union IntOrPtr1429 {
    i: int;
    p: int*;
}

// func f1429() {
//    u1 := IntOrPtr1429{i = 42};
//    u2 := IntOrPtr1429{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1429: int;

struct Vector1429 {
    x: int;
    y: int;
}

func fact_iter1429(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1429(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1429(n-1);
    }
}

const n1429 = 1 + sizeof(p1429);

var p1429: T1429*;

struct T1429 {
    a: int[n1429];
}


func example_test1430(): int {
    return fact_rec1430(10) == fact_iter1430(10);
}

union IntOrPtr1430 {
    i: int;
    p: int*;
}

// func f1430() {
//    u1 := IntOrPtr1430{i = 42};
//    u2 := IntOrPtr1430{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1430: int;

struct Vector1430 {
    x: int;
    y: int;
}

func fact_iter1430(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1430(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1430(n-1);
    }
}

const n1430 = 1 + sizeof(p1430);

var p1430: T1430*;

struct T1430 {
    a: int[n1430];
}


func example_test1431(): int {
    return fact_rec1431(10) == fact_iter1431(10);
}

union IntOrPtr1431 {
    i: int;
    p: int*;
}

// func f1431() {
//    u1 := IntOrPtr1431{i = 42};
//    u2 := IntOrPtr1431{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1431: int;

struct Vector1431 {
    x: int;
    y: int;
}

func fact_iter1431(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1431(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1431(n-1);
    }
}

const n1431 = 1 + sizeof(p1431);

var p1431: T1431*;

struct T1431 {
    a: int[n1431];
}


func example_test1432(): int {
    return fact_rec1432(10) == fact_iter1432(10);
}

union IntOrPtr1432 {
    i: int;
    p: int*;
}

// func f1432() {
//    u1 := IntOrPtr1432{i = 42};
//    u2 := IntOrPtr1432{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1432: int;

struct Vector1432 {
    x: int;
    y: int;
}

func fact_iter1432(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1432(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1432(n-1);
    }
}

const n1432 = 1 + sizeof(p1432);

var p1432: T1432*;

struct T1432 {
    a: int[n1432];
}


func example_test1433(): int {
    return fact_rec1433(10) == fact_iter1433(10);
}

union IntOrPtr1433 {
    i: int;
    p: int*;
}

// func f1433() {
//    u1 := IntOrPtr1433{i = 42};
//    u2 := IntOrPtr1433{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1433: int;

struct Vector1433 {
    x: int;
    y: int;
}

func fact_iter1433(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1433(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1433(n-1);
    }
}

const n1433 = 1 + sizeof(p1433);

var p1433: T1433*;

struct T1433 {
    a: int[n1433];
}


func example_test1434(): int {
    return fact_rec1434(10) == fact_iter1434(10);
}

union IntOrPtr1434 {
    i: int;
    p: int*;
}

// func f1434() {
//    u1 := IntOrPtr1434{i = 42};
//    u2 := IntOrPtr1434{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1434: int;

struct Vector1434 {
    x: int;
    y: int;
}

func fact_iter1434(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1434(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1434(n-1);
    }
}

const n1434 = 1 + sizeof(p1434);

var p1434: T1434*;

struct T1434 {
    a: int[n1434];
}


func example_test1435(): int {
    return fact_rec1435(10) == fact_iter1435(10);
}

union IntOrPtr1435 {
    i: int;
    p: int*;
}

// func f1435() {
//    u1 := IntOrPtr1435{i = 42};
//    u2 := IntOrPtr1435{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1435: int;

struct Vector1435 {
    x: int;
    y: int;
}

func fact_iter1435(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1435(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1435(n-1);
    }
}

const n1435 = 1 + sizeof(p1435);

var p1435: T1435*;

struct T1435 {
    a: int[n1435];
}


func example_test1436(): int {
    return fact_rec1436(10) == fact_iter1436(10);
}

union IntOrPtr1436 {
    i: int;
    p: int*;
}

// func f1436() {
//    u1 := IntOrPtr1436{i = 42};
//    u2 := IntOrPtr1436{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1436: int;

struct Vector1436 {
    x: int;
    y: int;
}

func fact_iter1436(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1436(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1436(n-1);
    }
}

const n1436 = 1 + sizeof(p1436);

var p1436: T1436*;

struct T1436 {
    a: int[n1436];
}


func example_test1437(): int {
    return fact_rec1437(10) == fact_iter1437(10);
}

union IntOrPtr1437 {
    i: int;
    p: int*;
}

// func f1437() {
//    u1 := IntOrPtr1437{i = 42};
//    u2 := IntOrPtr1437{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1437: int;

struct Vector1437 {
    x: int;
    y: int;
}

func fact_iter1437(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1437(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1437(n-1);
    }
}

const n1437 = 1 + sizeof(p1437);

var p1437: T1437*;

struct T1437 {
    a: int[n1437];
}


func example_test1438(): int {
    return fact_rec1438(10) == fact_iter1438(10);
}

union IntOrPtr1438 {
    i: int;
    p: int*;
}

// func f1438() {
//    u1 := IntOrPtr1438{i = 42};
//    u2 := IntOrPtr1438{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1438: int;

struct Vector1438 {
    x: int;
    y: int;
}

func fact_iter1438(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1438(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1438(n-1);
    }
}

const n1438 = 1 + sizeof(p1438);

var p1438: T1438*;

struct T1438 {
    a: int[n1438];
}


func example_test1439(): int {
    return fact_rec1439(10) == fact_iter1439(10);
}

union IntOrPtr1439 {
    i: int;
    p: int*;
}

// func f1439() {
//    u1 := IntOrPtr1439{i = 42};
//    u2 := IntOrPtr1439{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1439: int;

struct Vector1439 {
    x: int;
    y: int;
}

func fact_iter1439(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1439(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1439(n-1);
    }
}

const n1439 = 1 + sizeof(p1439);

var p1439: T1439*;

struct T1439 {
    a: int[n1439];
}


func example_test1440(): int {
    return fact_rec1440(10) == fact_iter1440(10);
}

union IntOrPtr1440 {
    i: int;
    p: int*;
}

// func f1440() {
//    u1 := IntOrPtr1440{i = 42};
//    u2 := IntOrPtr1440{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1440: int;

struct Vector1440 {
    x: int;
    y: int;
}

func fact_iter1440(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1440(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1440(n-1);
    }
}

const n1440 = 1 + sizeof(p1440);

var p1440: T1440*;

struct T1440 {
    a: int[n1440];
}


func example_test1441(): int {
    return fact_rec1441(10) == fact_iter1441(10);
}

union IntOrPtr1441 {
    i: int;
    p: int*;
}

// func f1441() {
//    u1 := IntOrPtr1441{i = 42};
//    u2 := IntOrPtr1441{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1441: int;

struct Vector1441 {
    x: int;
    y: int;
}

func fact_iter1441(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1441(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1441(n-1);
    }
}

const n1441 = 1 + sizeof(p1441);

var p1441: T1441*;

struct T1441 {
    a: int[n1441];
}


func example_test1442(): int {
    return fact_rec1442(10) == fact_iter1442(10);
}

union IntOrPtr1442 {
    i: int;
    p: int*;
}

// func f1442() {
//    u1 := IntOrPtr1442{i = 42};
//    u2 := IntOrPtr1442{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1442: int;

struct Vector1442 {
    x: int;
    y: int;
}

func fact_iter1442(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1442(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1442(n-1);
    }
}

const n1442 = 1 + sizeof(p1442);

var p1442: T1442*;

struct T1442 {
    a: int[n1442];
}


func example_test1443(): int {
    return fact_rec1443(10) == fact_iter1443(10);
}

union IntOrPtr1443 {
    i: int;
    p: int*;
}

// func f1443() {
//    u1 := IntOrPtr1443{i = 42};
//    u2 := IntOrPtr1443{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1443: int;

struct Vector1443 {
    x: int;
    y: int;
}

func fact_iter1443(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1443(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1443(n-1);
    }
}

const n1443 = 1 + sizeof(p1443);

var p1443: T1443*;

struct T1443 {
    a: int[n1443];
}


func example_test1444(): int {
    return fact_rec1444(10) == fact_iter1444(10);
}

union IntOrPtr1444 {
    i: int;
    p: int*;
}

// func f1444() {
//    u1 := IntOrPtr1444{i = 42};
//    u2 := IntOrPtr1444{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1444: int;

struct Vector1444 {
    x: int;
    y: int;
}

func fact_iter1444(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1444(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1444(n-1);
    }
}

const n1444 = 1 + sizeof(p1444);

var p1444: T1444*;

struct T1444 {
    a: int[n1444];
}


func example_test1445(): int {
    return fact_rec1445(10) == fact_iter1445(10);
}

union IntOrPtr1445 {
    i: int;
    p: int*;
}

// func f1445() {
//    u1 := IntOrPtr1445{i = 42};
//    u2 := IntOrPtr1445{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1445: int;

struct Vector1445 {
    x: int;
    y: int;
}

func fact_iter1445(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1445(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1445(n-1);
    }
}

const n1445 = 1 + sizeof(p1445);

var p1445: T1445*;

struct T1445 {
    a: int[n1445];
}


func example_test1446(): int {
    return fact_rec1446(10) == fact_iter1446(10);
}

union IntOrPtr1446 {
    i: int;
    p: int*;
}

// func f1446() {
//    u1 := IntOrPtr1446{i = 42};
//    u2 := IntOrPtr1446{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1446: int;

struct Vector1446 {
    x: int;
    y: int;
}

func fact_iter1446(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1446(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1446(n-1);
    }
}

const n1446 = 1 + sizeof(p1446);

var p1446: T1446*;

struct T1446 {
    a: int[n1446];
}


func example_test1447(): int {
    return fact_rec1447(10) == fact_iter1447(10);
}

union IntOrPtr1447 {
    i: int;
    p: int*;
}

// func f1447() {
//    u1 := IntOrPtr1447{i = 42};
//    u2 := IntOrPtr1447{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1447: int;

struct Vector1447 {
    x: int;
    y: int;
}

func fact_iter1447(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1447(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1447(n-1);
    }
}

const n1447 = 1 + sizeof(p1447);

var p1447: T1447*;

struct T1447 {
    a: int[n1447];
}


func example_test1448(): int {
    return fact_rec1448(10) == fact_iter1448(10);
}

union IntOrPtr1448 {
    i: int;
    p: int*;
}

// func f1448() {
//    u1 := IntOrPtr1448{i = 42};
//    u2 := IntOrPtr1448{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1448: int;

struct Vector1448 {
    x: int;
    y: int;
}

func fact_iter1448(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1448(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1448(n-1);
    }
}

const n1448 = 1 + sizeof(p1448);

var p1448: T1448*;

struct T1448 {
    a: int[n1448];
}


func example_test1449(): int {
    return fact_rec1449(10) == fact_iter1449(10);
}

union IntOrPtr1449 {
    i: int;
    p: int*;
}

// func f1449() {
//    u1 := IntOrPtr1449{i = 42};
//    u2 := IntOrPtr1449{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1449: int;

struct Vector1449 {
    x: int;
    y: int;
}

func fact_iter1449(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1449(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1449(n-1);
    }
}

const n1449 = 1 + sizeof(p1449);

var p1449: T1449*;

struct T1449 {
    a: int[n1449];
}


func example_test1450(): int {
    return fact_rec1450(10) == fact_iter1450(10);
}

union IntOrPtr1450 {
    i: int;
    p: int*;
}

// func f1450() {
//    u1 := IntOrPtr1450{i = 42};
//    u2 := IntOrPtr1450{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1450: int;

struct Vector1450 {
    x: int;
    y: int;
}

func fact_iter1450(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1450(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1450(n-1);
    }
}

const n1450 = 1 + sizeof(p1450);

var p1450: T1450*;

struct T1450 {
    a: int[n1450];
}


func example_test1451(): int {
    return fact_rec1451(10) == fact_iter1451(10);
}

union IntOrPtr1451 {
    i: int;
    p: int*;
}

// func f1451() {
//    u1 := IntOrPtr1451{i = 42};
//    u2 := IntOrPtr1451{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1451: int;

struct Vector1451 {
    x: int;
    y: int;
}

func fact_iter1451(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1451(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1451(n-1);
    }
}

const n1451 = 1 + sizeof(p1451);

var p1451: T1451*;

struct T1451 {
    a: int[n1451];
}


func example_test1452(): int {
    return fact_rec1452(10) == fact_iter1452(10);
}

union IntOrPtr1452 {
    i: int;
    p: int*;
}

// func f1452() {
//    u1 := IntOrPtr1452{i = 42};
//    u2 := IntOrPtr1452{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1452: int;

struct Vector1452 {
    x: int;
    y: int;
}

func fact_iter1452(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1452(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1452(n-1);
    }
}

const n1452 = 1 + sizeof(p1452);

var p1452: T1452*;

struct T1452 {
    a: int[n1452];
}


func example_test1453(): int {
    return fact_rec1453(10) == fact_iter1453(10);
}

union IntOrPtr1453 {
    i: int;
    p: int*;
}

// func f1453() {
//    u1 := IntOrPtr1453{i = 42};
//    u2 := IntOrPtr1453{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1453: int;

struct Vector1453 {
    x: int;
    y: int;
}

func fact_iter1453(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1453(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1453(n-1);
    }
}

const n1453 = 1 + sizeof(p1453);

var p1453: T1453*;

struct T1453 {
    a: int[n1453];
}


func example_test1454(): int {
    return fact_rec1454(10) == fact_iter1454(10);
}

union IntOrPtr1454 {
    i: int;
    p: int*;
}

// func f1454() {
//    u1 := IntOrPtr1454{i = 42};
//    u2 := IntOrPtr1454{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1454: int;

struct Vector1454 {
    x: int;
    y: int;
}

func fact_iter1454(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1454(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1454(n-1);
    }
}

const n1454 = 1 + sizeof(p1454);

var p1454: T1454*;

struct T1454 {
    a: int[n1454];
}


func example_test1455(): int {
    return fact_rec1455(10) == fact_iter1455(10);
}

union IntOrPtr1455 {
    i: int;
    p: int*;
}

// func f1455() {
//    u1 := IntOrPtr1455{i = 42};
//    u2 := IntOrPtr1455{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1455: int;

struct Vector1455 {
    x: int;
    y: int;
}

func fact_iter1455(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1455(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1455(n-1);
    }
}

const n1455 = 1 + sizeof(p1455);

var p1455: T1455*;

struct T1455 {
    a: int[n1455];
}


func example_test1456(): int {
    return fact_rec1456(10) == fact_iter1456(10);
}

union IntOrPtr1456 {
    i: int;
    p: int*;
}

// func f1456() {
//    u1 := IntOrPtr1456{i = 42};
//    u2 := IntOrPtr1456{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1456: int;

struct Vector1456 {
    x: int;
    y: int;
}

func fact_iter1456(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1456(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1456(n-1);
    }
}

const n1456 = 1 + sizeof(p1456);

var p1456: T1456*;

struct T1456 {
    a: int[n1456];
}


func example_test1457(): int {
    return fact_rec1457(10) == fact_iter1457(10);
}

union IntOrPtr1457 {
    i: int;
    p: int*;
}

// func f1457() {
//    u1 := IntOrPtr1457{i = 42};
//    u2 := IntOrPtr1457{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1457: int;

struct Vector1457 {
    x: int;
    y: int;
}

func fact_iter1457(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1457(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1457(n-1);
    }
}

const n1457 = 1 + sizeof(p1457);

var p1457: T1457*;

struct T1457 {
    a: int[n1457];
}


func example_test1458(): int {
    return fact_rec1458(10) == fact_iter1458(10);
}

union IntOrPtr1458 {
    i: int;
    p: int*;
}

// func f1458() {
//    u1 := IntOrPtr1458{i = 42};
//    u2 := IntOrPtr1458{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1458: int;

struct Vector1458 {
    x: int;
    y: int;
}

func fact_iter1458(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1458(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1458(n-1);
    }
}

const n1458 = 1 + sizeof(p1458);

var p1458: T1458*;

struct T1458 {
    a: int[n1458];
}


func example_test1459(): int {
    return fact_rec1459(10) == fact_iter1459(10);
}

union IntOrPtr1459 {
    i: int;
    p: int*;
}

// func f1459() {
//    u1 := IntOrPtr1459{i = 42};
//    u2 := IntOrPtr1459{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1459: int;

struct Vector1459 {
    x: int;
    y: int;
}

func fact_iter1459(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1459(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1459(n-1);
    }
}

const n1459 = 1 + sizeof(p1459);

var p1459: T1459*;

struct T1459 {
    a: int[n1459];
}


func example_test1460(): int {
    return fact_rec1460(10) == fact_iter1460(10);
}

union IntOrPtr1460 {
    i: int;
    p: int*;
}

// func f1460() {
//    u1 := IntOrPtr1460{i = 42};
//    u2 := IntOrPtr1460{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1460: int;

struct Vector1460 {
    x: int;
    y: int;
}

func fact_iter1460(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1460(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1460(n-1);
    }
}

const n1460 = 1 + sizeof(p1460);

var p1460: T1460*;

struct T1460 {
    a: int[n1460];
}


func example_test1461(): int {
    return fact_rec1461(10) == fact_iter1461(10);
}

union IntOrPtr1461 {
    i: int;
    p: int*;
}

// func f1461() {
//    u1 := IntOrPtr1461{i = 42};
//    u2 := IntOrPtr1461{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1461: int;

struct Vector1461 {
    x: int;
    y: int;
}

func fact_iter1461(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1461(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1461(n-1);
    }
}

const n1461 = 1 + sizeof(p1461);

var p1461: T1461*;

struct T1461 {
    a: int[n1461];
}


func example_test1462(): int {
    return fact_rec1462(10) == fact_iter1462(10);
}

union IntOrPtr1462 {
    i: int;
    p: int*;
}

// func f1462() {
//    u1 := IntOrPtr1462{i = 42};
//    u2 := IntOrPtr1462{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1462: int;

struct Vector1462 {
    x: int;
    y: int;
}

func fact_iter1462(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1462(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1462(n-1);
    }
}

const n1462 = 1 + sizeof(p1462);

var p1462: T1462*;

struct T1462 {
    a: int[n1462];
}


func example_test1463(): int {
    return fact_rec1463(10) == fact_iter1463(10);
}

union IntOrPtr1463 {
    i: int;
    p: int*;
}

// func f1463() {
//    u1 := IntOrPtr1463{i = 42};
//    u2 := IntOrPtr1463{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1463: int;

struct Vector1463 {
    x: int;
    y: int;
}

func fact_iter1463(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1463(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1463(n-1);
    }
}

const n1463 = 1 + sizeof(p1463);

var p1463: T1463*;

struct T1463 {
    a: int[n1463];
}


func example_test1464(): int {
    return fact_rec1464(10) == fact_iter1464(10);
}

union IntOrPtr1464 {
    i: int;
    p: int*;
}

// func f1464() {
//    u1 := IntOrPtr1464{i = 42};
//    u2 := IntOrPtr1464{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1464: int;

struct Vector1464 {
    x: int;
    y: int;
}

func fact_iter1464(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1464(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1464(n-1);
    }
}

const n1464 = 1 + sizeof(p1464);

var p1464: T1464*;

struct T1464 {
    a: int[n1464];
}


func example_test1465(): int {
    return fact_rec1465(10) == fact_iter1465(10);
}

union IntOrPtr1465 {
    i: int;
    p: int*;
}

// func f1465() {
//    u1 := IntOrPtr1465{i = 42};
//    u2 := IntOrPtr1465{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1465: int;

struct Vector1465 {
    x: int;
    y: int;
}

func fact_iter1465(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1465(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1465(n-1);
    }
}

const n1465 = 1 + sizeof(p1465);

var p1465: T1465*;

struct T1465 {
    a: int[n1465];
}


func example_test1466(): int {
    return fact_rec1466(10) == fact_iter1466(10);
}

union IntOrPtr1466 {
    i: int;
    p: int*;
}

// func f1466() {
//    u1 := IntOrPtr1466{i = 42};
//    u2 := IntOrPtr1466{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1466: int;

struct Vector1466 {
    x: int;
    y: int;
}

func fact_iter1466(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1466(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1466(n-1);
    }
}

const n1466 = 1 + sizeof(p1466);

var p1466: T1466*;

struct T1466 {
    a: int[n1466];
}


func example_test1467(): int {
    return fact_rec1467(10) == fact_iter1467(10);
}

union IntOrPtr1467 {
    i: int;
    p: int*;
}

// func f1467() {
//    u1 := IntOrPtr1467{i = 42};
//    u2 := IntOrPtr1467{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1467: int;

struct Vector1467 {
    x: int;
    y: int;
}

func fact_iter1467(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1467(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1467(n-1);
    }
}

const n1467 = 1 + sizeof(p1467);

var p1467: T1467*;

struct T1467 {
    a: int[n1467];
}


func example_test1468(): int {
    return fact_rec1468(10) == fact_iter1468(10);
}

union IntOrPtr1468 {
    i: int;
    p: int*;
}

// func f1468() {
//    u1 := IntOrPtr1468{i = 42};
//    u2 := IntOrPtr1468{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1468: int;

struct Vector1468 {
    x: int;
    y: int;
}

func fact_iter1468(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1468(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1468(n-1);
    }
}

const n1468 = 1 + sizeof(p1468);

var p1468: T1468*;

struct T1468 {
    a: int[n1468];
}


func example_test1469(): int {
    return fact_rec1469(10) == fact_iter1469(10);
}

union IntOrPtr1469 {
    i: int;
    p: int*;
}

// func f1469() {
//    u1 := IntOrPtr1469{i = 42};
//    u2 := IntOrPtr1469{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1469: int;

struct Vector1469 {
    x: int;
    y: int;
}

func fact_iter1469(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1469(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1469(n-1);
    }
}

const n1469 = 1 + sizeof(p1469);

var p1469: T1469*;

struct T1469 {
    a: int[n1469];
}


func example_test1470(): int {
    return fact_rec1470(10) == fact_iter1470(10);
}

union IntOrPtr1470 {
    i: int;
    p: int*;
}

// func f1470() {
//    u1 := IntOrPtr1470{i = 42};
//    u2 := IntOrPtr1470{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1470: int;

struct Vector1470 {
    x: int;
    y: int;
}

func fact_iter1470(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1470(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1470(n-1);
    }
}

const n1470 = 1 + sizeof(p1470);

var p1470: T1470*;

struct T1470 {
    a: int[n1470];
}


func example_test1471(): int {
    return fact_rec1471(10) == fact_iter1471(10);
}

union IntOrPtr1471 {
    i: int;
    p: int*;
}

// func f1471() {
//    u1 := IntOrPtr1471{i = 42};
//    u2 := IntOrPtr1471{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1471: int;

struct Vector1471 {
    x: int;
    y: int;
}

func fact_iter1471(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1471(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1471(n-1);
    }
}

const n1471 = 1 + sizeof(p1471);

var p1471: T1471*;

struct T1471 {
    a: int[n1471];
}


func example_test1472(): int {
    return fact_rec1472(10) == fact_iter1472(10);
}

union IntOrPtr1472 {
    i: int;
    p: int*;
}

// func f1472() {
//    u1 := IntOrPtr1472{i = 42};
//    u2 := IntOrPtr1472{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1472: int;

struct Vector1472 {
    x: int;
    y: int;
}

func fact_iter1472(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1472(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1472(n-1);
    }
}

const n1472 = 1 + sizeof(p1472);

var p1472: T1472*;

struct T1472 {
    a: int[n1472];
}


func example_test1473(): int {
    return fact_rec1473(10) == fact_iter1473(10);
}

union IntOrPtr1473 {
    i: int;
    p: int*;
}

// func f1473() {
//    u1 := IntOrPtr1473{i = 42};
//    u2 := IntOrPtr1473{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1473: int;

struct Vector1473 {
    x: int;
    y: int;
}

func fact_iter1473(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1473(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1473(n-1);
    }
}

const n1473 = 1 + sizeof(p1473);

var p1473: T1473*;

struct T1473 {
    a: int[n1473];
}


func example_test1474(): int {
    return fact_rec1474(10) == fact_iter1474(10);
}

union IntOrPtr1474 {
    i: int;
    p: int*;
}

// func f1474() {
//    u1 := IntOrPtr1474{i = 42};
//    u2 := IntOrPtr1474{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1474: int;

struct Vector1474 {
    x: int;
    y: int;
}

func fact_iter1474(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1474(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1474(n-1);
    }
}

const n1474 = 1 + sizeof(p1474);

var p1474: T1474*;

struct T1474 {
    a: int[n1474];
}


func example_test1475(): int {
    return fact_rec1475(10) == fact_iter1475(10);
}

union IntOrPtr1475 {
    i: int;
    p: int*;
}

// func f1475() {
//    u1 := IntOrPtr1475{i = 42};
//    u2 := IntOrPtr1475{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1475: int;

struct Vector1475 {
    x: int;
    y: int;
}

func fact_iter1475(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1475(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1475(n-1);
    }
}

const n1475 = 1 + sizeof(p1475);

var p1475: T1475*;

struct T1475 {
    a: int[n1475];
}


func example_test1476(): int {
    return fact_rec1476(10) == fact_iter1476(10);
}

union IntOrPtr1476 {
    i: int;
    p: int*;
}

// func f1476() {
//    u1 := IntOrPtr1476{i = 42};
//    u2 := IntOrPtr1476{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1476: int;

struct Vector1476 {
    x: int;
    y: int;
}

func fact_iter1476(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1476(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1476(n-1);
    }
}

const n1476 = 1 + sizeof(p1476);

var p1476: T1476*;

struct T1476 {
    a: int[n1476];
}


func example_test1477(): int {
    return fact_rec1477(10) == fact_iter1477(10);
}

union IntOrPtr1477 {
    i: int;
    p: int*;
}

// func f1477() {
//    u1 := IntOrPtr1477{i = 42};
//    u2 := IntOrPtr1477{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1477: int;

struct Vector1477 {
    x: int;
    y: int;
}

func fact_iter1477(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1477(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1477(n-1);
    }
}

const n1477 = 1 + sizeof(p1477);

var p1477: T1477*;

struct T1477 {
    a: int[n1477];
}


func example_test1478(): int {
    return fact_rec1478(10) == fact_iter1478(10);
}

union IntOrPtr1478 {
    i: int;
    p: int*;
}

// func f1478() {
//    u1 := IntOrPtr1478{i = 42};
//    u2 := IntOrPtr1478{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1478: int;

struct Vector1478 {
    x: int;
    y: int;
}

func fact_iter1478(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1478(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1478(n-1);
    }
}

const n1478 = 1 + sizeof(p1478);

var p1478: T1478*;

struct T1478 {
    a: int[n1478];
}


func example_test1479(): int {
    return fact_rec1479(10) == fact_iter1479(10);
}

union IntOrPtr1479 {
    i: int;
    p: int*;
}

// func f1479() {
//    u1 := IntOrPtr1479{i = 42};
//    u2 := IntOrPtr1479{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1479: int;

struct Vector1479 {
    x: int;
    y: int;
}

func fact_iter1479(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1479(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1479(n-1);
    }
}

const n1479 = 1 + sizeof(p1479);

var p1479: T1479*;

struct T1479 {
    a: int[n1479];
}


func example_test1480(): int {
    return fact_rec1480(10) == fact_iter1480(10);
}

union IntOrPtr1480 {
    i: int;
    p: int*;
}

// func f1480() {
//    u1 := IntOrPtr1480{i = 42};
//    u2 := IntOrPtr1480{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1480: int;

struct Vector1480 {
    x: int;
    y: int;
}

func fact_iter1480(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1480(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1480(n-1);
    }
}

const n1480 = 1 + sizeof(p1480);

var p1480: T1480*;

struct T1480 {
    a: int[n1480];
}


func example_test1481(): int {
    return fact_rec1481(10) == fact_iter1481(10);
}

union IntOrPtr1481 {
    i: int;
    p: int*;
}

// func f1481() {
//    u1 := IntOrPtr1481{i = 42};
//    u2 := IntOrPtr1481{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1481: int;

struct Vector1481 {
    x: int;
    y: int;
}

func fact_iter1481(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1481(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1481(n-1);
    }
}

const n1481 = 1 + sizeof(p1481);

var p1481: T1481*;

struct T1481 {
    a: int[n1481];
}


func example_test1482(): int {
    return fact_rec1482(10) == fact_iter1482(10);
}

union IntOrPtr1482 {
    i: int;
    p: int*;
}

// func f1482() {
//    u1 := IntOrPtr1482{i = 42};
//    u2 := IntOrPtr1482{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1482: int;

struct Vector1482 {
    x: int;
    y: int;
}

func fact_iter1482(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1482(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1482(n-1);
    }
}

const n1482 = 1 + sizeof(p1482);

var p1482: T1482*;

struct T1482 {
    a: int[n1482];
}


func example_test1483(): int {
    return fact_rec1483(10) == fact_iter1483(10);
}

union IntOrPtr1483 {
    i: int;
    p: int*;
}

// func f1483() {
//    u1 := IntOrPtr1483{i = 42};
//    u2 := IntOrPtr1483{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1483: int;

struct Vector1483 {
    x: int;
    y: int;
}

func fact_iter1483(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1483(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1483(n-1);
    }
}

const n1483 = 1 + sizeof(p1483);

var p1483: T1483*;

struct T1483 {
    a: int[n1483];
}


func example_test1484(): int {
    return fact_rec1484(10) == fact_iter1484(10);
}

union IntOrPtr1484 {
    i: int;
    p: int*;
}

// func f1484() {
//    u1 := IntOrPtr1484{i = 42};
//    u2 := IntOrPtr1484{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1484: int;

struct Vector1484 {
    x: int;
    y: int;
}

func fact_iter1484(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1484(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1484(n-1);
    }
}

const n1484 = 1 + sizeof(p1484);

var p1484: T1484*;

struct T1484 {
    a: int[n1484];
}


func example_test1485(): int {
    return fact_rec1485(10) == fact_iter1485(10);
}

union IntOrPtr1485 {
    i: int;
    p: int*;
}

// func f1485() {
//    u1 := IntOrPtr1485{i = 42};
//    u2 := IntOrPtr1485{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1485: int;

struct Vector1485 {
    x: int;
    y: int;
}

func fact_iter1485(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1485(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1485(n-1);
    }
}

const n1485 = 1 + sizeof(p1485);

var p1485: T1485*;

struct T1485 {
    a: int[n1485];
}


func example_test1486(): int {
    return fact_rec1486(10) == fact_iter1486(10);
}

union IntOrPtr1486 {
    i: int;
    p: int*;
}

// func f1486() {
//    u1 := IntOrPtr1486{i = 42};
//    u2 := IntOrPtr1486{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1486: int;

struct Vector1486 {
    x: int;
    y: int;
}

func fact_iter1486(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1486(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1486(n-1);
    }
}

const n1486 = 1 + sizeof(p1486);

var p1486: T1486*;

struct T1486 {
    a: int[n1486];
}


func example_test1487(): int {
    return fact_rec1487(10) == fact_iter1487(10);
}

union IntOrPtr1487 {
    i: int;
    p: int*;
}

// func f1487() {
//    u1 := IntOrPtr1487{i = 42};
//    u2 := IntOrPtr1487{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1487: int;

struct Vector1487 {
    x: int;
    y: int;
}

func fact_iter1487(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1487(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1487(n-1);
    }
}

const n1487 = 1 + sizeof(p1487);

var p1487: T1487*;

struct T1487 {
    a: int[n1487];
}


func example_test1488(): int {
    return fact_rec1488(10) == fact_iter1488(10);
}

union IntOrPtr1488 {
    i: int;
    p: int*;
}

// func f1488() {
//    u1 := IntOrPtr1488{i = 42};
//    u2 := IntOrPtr1488{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1488: int;

struct Vector1488 {
    x: int;
    y: int;
}

func fact_iter1488(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1488(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1488(n-1);
    }
}

const n1488 = 1 + sizeof(p1488);

var p1488: T1488*;

struct T1488 {
    a: int[n1488];
}


func example_test1489(): int {
    return fact_rec1489(10) == fact_iter1489(10);
}

union IntOrPtr1489 {
    i: int;
    p: int*;
}

// func f1489() {
//    u1 := IntOrPtr1489{i = 42};
//    u2 := IntOrPtr1489{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1489: int;

struct Vector1489 {
    x: int;
    y: int;
}

func fact_iter1489(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1489(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1489(n-1);
    }
}

const n1489 = 1 + sizeof(p1489);

var p1489: T1489*;

struct T1489 {
    a: int[n1489];
}


func example_test1490(): int {
    return fact_rec1490(10) == fact_iter1490(10);
}

union IntOrPtr1490 {
    i: int;
    p: int*;
}

// func f1490() {
//    u1 := IntOrPtr1490{i = 42};
//    u2 := IntOrPtr1490{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1490: int;

struct Vector1490 {
    x: int;
    y: int;
}

func fact_iter1490(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1490(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1490(n-1);
    }
}

const n1490 = 1 + sizeof(p1490);

var p1490: T1490*;

struct T1490 {
    a: int[n1490];
}


func example_test1491(): int {
    return fact_rec1491(10) == fact_iter1491(10);
}

union IntOrPtr1491 {
    i: int;
    p: int*;
}

// func f1491() {
//    u1 := IntOrPtr1491{i = 42};
//    u2 := IntOrPtr1491{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1491: int;

struct Vector1491 {
    x: int;
    y: int;
}

func fact_iter1491(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1491(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1491(n-1);
    }
}

const n1491 = 1 + sizeof(p1491);

var p1491: T1491*;

struct T1491 {
    a: int[n1491];
}


func example_test1492(): int {
    return fact_rec1492(10) == fact_iter1492(10);
}

union IntOrPtr1492 {
    i: int;
    p: int*;
}

// func f1492() {
//    u1 := IntOrPtr1492{i = 42};
//    u2 := IntOrPtr1492{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1492: int;

struct Vector1492 {
    x: int;
    y: int;
}

func fact_iter1492(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1492(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1492(n-1);
    }
}

const n1492 = 1 + sizeof(p1492);

var p1492: T1492*;

struct T1492 {
    a: int[n1492];
}


func example_test1493(): int {
    return fact_rec1493(10) == fact_iter1493(10);
}

union IntOrPtr1493 {
    i: int;
    p: int*;
}

// func f1493() {
//    u1 := IntOrPtr1493{i = 42};
//    u2 := IntOrPtr1493{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1493: int;

struct Vector1493 {
    x: int;
    y: int;
}

func fact_iter1493(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1493(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1493(n-1);
    }
}

const n1493 = 1 + sizeof(p1493);

var p1493: T1493*;

struct T1493 {
    a: int[n1493];
}


func example_test1494(): int {
    return fact_rec1494(10) == fact_iter1494(10);
}

union IntOrPtr1494 {
    i: int;
    p: int*;
}

// func f1494() {
//    u1 := IntOrPtr1494{i = 42};
//    u2 := IntOrPtr1494{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1494: int;

struct Vector1494 {
    x: int;
    y: int;
}

func fact_iter1494(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1494(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1494(n-1);
    }
}

const n1494 = 1 + sizeof(p1494);

var p1494: T1494*;

struct T1494 {
    a: int[n1494];
}


func example_test1495(): int {
    return fact_rec1495(10) == fact_iter1495(10);
}

union IntOrPtr1495 {
    i: int;
    p: int*;
}

// func f1495() {
//    u1 := IntOrPtr1495{i = 42};
//    u2 := IntOrPtr1495{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1495: int;

struct Vector1495 {
    x: int;
    y: int;
}

func fact_iter1495(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1495(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1495(n-1);
    }
}

const n1495 = 1 + sizeof(p1495);

var p1495: T1495*;

struct T1495 {
    a: int[n1495];
}


func example_test1496(): int {
    return fact_rec1496(10) == fact_iter1496(10);
}

union IntOrPtr1496 {
    i: int;
    p: int*;
}

// func f1496() {
//    u1 := IntOrPtr1496{i = 42};
//    u2 := IntOrPtr1496{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1496: int;

struct Vector1496 {
    x: int;
    y: int;
}

func fact_iter1496(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1496(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1496(n-1);
    }
}

const n1496 = 1 + sizeof(p1496);

var p1496: T1496*;

struct T1496 {
    a: int[n1496];
}


func example_test1497(): int {
    return fact_rec1497(10) == fact_iter1497(10);
}

union IntOrPtr1497 {
    i: int;
    p: int*;
}

// func f1497() {
//    u1 := IntOrPtr1497{i = 42};
//    u2 := IntOrPtr1497{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1497: int;

struct Vector1497 {
    x: int;
    y: int;
}

func fact_iter1497(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1497(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1497(n-1);
    }
}

const n1497 = 1 + sizeof(p1497);

var p1497: T1497*;

struct T1497 {
    a: int[n1497];
}


func example_test1498(): int {
    return fact_rec1498(10) == fact_iter1498(10);
}

union IntOrPtr1498 {
    i: int;
    p: int*;
}

// func f1498() {
//    u1 := IntOrPtr1498{i = 42};
//    u2 := IntOrPtr1498{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1498: int;

struct Vector1498 {
    x: int;
    y: int;
}

func fact_iter1498(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1498(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1498(n-1);
    }
}

const n1498 = 1 + sizeof(p1498);

var p1498: T1498*;

struct T1498 {
    a: int[n1498];
}


func example_test1499(): int {
    return fact_rec1499(10) == fact_iter1499(10);
}

union IntOrPtr1499 {
    i: int;
    p: int*;
}

// func f1499() {
//    u1 := IntOrPtr1499{i = 42};
//    u2 := IntOrPtr1499{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1499: int;

struct Vector1499 {
    x: int;
    y: int;
}

func fact_iter1499(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1499(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1499(n-1);
    }
}

const n1499 = 1 + sizeof(p1499);

var p1499: T1499*;

struct T1499 {
    a: int[n1499];
}


func example_test1500(): int {
    return fact_rec1500(10) == fact_iter1500(10);
}

union IntOrPtr1500 {
    i: int;
    p: int*;
}

// func f1500() {
//    u1 := IntOrPtr1500{i = 42};
//    u2 := IntOrPtr1500{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1500: int;

struct Vector1500 {
    x: int;
    y: int;
}

func fact_iter1500(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1500(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1500(n-1);
    }
}

const n1500 = 1 + sizeof(p1500);

var p1500: T1500*;

struct T1500 {
    a: int[n1500];
}


func example_test1501(): int {
    return fact_rec1501(10) == fact_iter1501(10);
}

union IntOrPtr1501 {
    i: int;
    p: int*;
}

// func f1501() {
//    u1 := IntOrPtr1501{i = 42};
//    u2 := IntOrPtr1501{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1501: int;

struct Vector1501 {
    x: int;
    y: int;
}

func fact_iter1501(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1501(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1501(n-1);
    }
}

const n1501 = 1 + sizeof(p1501);

var p1501: T1501*;

struct T1501 {
    a: int[n1501];
}


func example_test1502(): int {
    return fact_rec1502(10) == fact_iter1502(10);
}

union IntOrPtr1502 {
    i: int;
    p: int*;
}

// func f1502() {
//    u1 := IntOrPtr1502{i = 42};
//    u2 := IntOrPtr1502{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1502: int;

struct Vector1502 {
    x: int;
    y: int;
}

func fact_iter1502(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1502(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1502(n-1);
    }
}

const n1502 = 1 + sizeof(p1502);

var p1502: T1502*;

struct T1502 {
    a: int[n1502];
}


func example_test1503(): int {
    return fact_rec1503(10) == fact_iter1503(10);
}

union IntOrPtr1503 {
    i: int;
    p: int*;
}

// func f1503() {
//    u1 := IntOrPtr1503{i = 42};
//    u2 := IntOrPtr1503{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1503: int;

struct Vector1503 {
    x: int;
    y: int;
}

func fact_iter1503(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1503(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1503(n-1);
    }
}

const n1503 = 1 + sizeof(p1503);

var p1503: T1503*;

struct T1503 {
    a: int[n1503];
}


func example_test1504(): int {
    return fact_rec1504(10) == fact_iter1504(10);
}

union IntOrPtr1504 {
    i: int;
    p: int*;
}

// func f1504() {
//    u1 := IntOrPtr1504{i = 42};
//    u2 := IntOrPtr1504{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1504: int;

struct Vector1504 {
    x: int;
    y: int;
}

func fact_iter1504(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1504(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1504(n-1);
    }
}

const n1504 = 1 + sizeof(p1504);

var p1504: T1504*;

struct T1504 {
    a: int[n1504];
}


func example_test1505(): int {
    return fact_rec1505(10) == fact_iter1505(10);
}

union IntOrPtr1505 {
    i: int;
    p: int*;
}

// func f1505() {
//    u1 := IntOrPtr1505{i = 42};
//    u2 := IntOrPtr1505{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1505: int;

struct Vector1505 {
    x: int;
    y: int;
}

func fact_iter1505(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1505(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1505(n-1);
    }
}

const n1505 = 1 + sizeof(p1505);

var p1505: T1505*;

struct T1505 {
    a: int[n1505];
}


func example_test1506(): int {
    return fact_rec1506(10) == fact_iter1506(10);
}

union IntOrPtr1506 {
    i: int;
    p: int*;
}

// func f1506() {
//    u1 := IntOrPtr1506{i = 42};
//    u2 := IntOrPtr1506{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1506: int;

struct Vector1506 {
    x: int;
    y: int;
}

func fact_iter1506(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1506(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1506(n-1);
    }
}

const n1506 = 1 + sizeof(p1506);

var p1506: T1506*;

struct T1506 {
    a: int[n1506];
}


func example_test1507(): int {
    return fact_rec1507(10) == fact_iter1507(10);
}

union IntOrPtr1507 {
    i: int;
    p: int*;
}

// func f1507() {
//    u1 := IntOrPtr1507{i = 42};
//    u2 := IntOrPtr1507{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1507: int;

struct Vector1507 {
    x: int;
    y: int;
}

func fact_iter1507(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1507(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1507(n-1);
    }
}

const n1507 = 1 + sizeof(p1507);

var p1507: T1507*;

struct T1507 {
    a: int[n1507];
}


func example_test1508(): int {
    return fact_rec1508(10) == fact_iter1508(10);
}

union IntOrPtr1508 {
    i: int;
    p: int*;
}

// func f1508() {
//    u1 := IntOrPtr1508{i = 42};
//    u2 := IntOrPtr1508{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1508: int;

struct Vector1508 {
    x: int;
    y: int;
}

func fact_iter1508(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1508(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1508(n-1);
    }
}

const n1508 = 1 + sizeof(p1508);

var p1508: T1508*;

struct T1508 {
    a: int[n1508];
}


func example_test1509(): int {
    return fact_rec1509(10) == fact_iter1509(10);
}

union IntOrPtr1509 {
    i: int;
    p: int*;
}

// func f1509() {
//    u1 := IntOrPtr1509{i = 42};
//    u2 := IntOrPtr1509{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1509: int;

struct Vector1509 {
    x: int;
    y: int;
}

func fact_iter1509(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1509(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1509(n-1);
    }
}

const n1509 = 1 + sizeof(p1509);

var p1509: T1509*;

struct T1509 {
    a: int[n1509];
}


func example_test1510(): int {
    return fact_rec1510(10) == fact_iter1510(10);
}

union IntOrPtr1510 {
    i: int;
    p: int*;
}

// func f1510() {
//    u1 := IntOrPtr1510{i = 42};
//    u2 := IntOrPtr1510{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1510: int;

struct Vector1510 {
    x: int;
    y: int;
}

func fact_iter1510(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1510(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1510(n-1);
    }
}

const n1510 = 1 + sizeof(p1510);

var p1510: T1510*;

struct T1510 {
    a: int[n1510];
}


func example_test1511(): int {
    return fact_rec1511(10) == fact_iter1511(10);
}

union IntOrPtr1511 {
    i: int;
    p: int*;
}

// func f1511() {
//    u1 := IntOrPtr1511{i = 42};
//    u2 := IntOrPtr1511{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1511: int;

struct Vector1511 {
    x: int;
    y: int;
}

func fact_iter1511(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1511(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1511(n-1);
    }
}

const n1511 = 1 + sizeof(p1511);

var p1511: T1511*;

struct T1511 {
    a: int[n1511];
}


func example_test1512(): int {
    return fact_rec1512(10) == fact_iter1512(10);
}

union IntOrPtr1512 {
    i: int;
    p: int*;
}

// func f1512() {
//    u1 := IntOrPtr1512{i = 42};
//    u2 := IntOrPtr1512{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1512: int;

struct Vector1512 {
    x: int;
    y: int;
}

func fact_iter1512(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1512(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1512(n-1);
    }
}

const n1512 = 1 + sizeof(p1512);

var p1512: T1512*;

struct T1512 {
    a: int[n1512];
}


func example_test1513(): int {
    return fact_rec1513(10) == fact_iter1513(10);
}

union IntOrPtr1513 {
    i: int;
    p: int*;
}

// func f1513() {
//    u1 := IntOrPtr1513{i = 42};
//    u2 := IntOrPtr1513{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1513: int;

struct Vector1513 {
    x: int;
    y: int;
}

func fact_iter1513(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1513(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1513(n-1);
    }
}

const n1513 = 1 + sizeof(p1513);

var p1513: T1513*;

struct T1513 {
    a: int[n1513];
}


func example_test1514(): int {
    return fact_rec1514(10) == fact_iter1514(10);
}

union IntOrPtr1514 {
    i: int;
    p: int*;
}

// func f1514() {
//    u1 := IntOrPtr1514{i = 42};
//    u2 := IntOrPtr1514{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1514: int;

struct Vector1514 {
    x: int;
    y: int;
}

func fact_iter1514(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1514(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1514(n-1);
    }
}

const n1514 = 1 + sizeof(p1514);

var p1514: T1514*;

struct T1514 {
    a: int[n1514];
}


func example_test1515(): int {
    return fact_rec1515(10) == fact_iter1515(10);
}

union IntOrPtr1515 {
    i: int;
    p: int*;
}

// func f1515() {
//    u1 := IntOrPtr1515{i = 42};
//    u2 := IntOrPtr1515{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1515: int;

struct Vector1515 {
    x: int;
    y: int;
}

func fact_iter1515(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1515(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1515(n-1);
    }
}

const n1515 = 1 + sizeof(p1515);

var p1515: T1515*;

struct T1515 {
    a: int[n1515];
}


func example_test1516(): int {
    return fact_rec1516(10) == fact_iter1516(10);
}

union IntOrPtr1516 {
    i: int;
    p: int*;
}

// func f1516() {
//    u1 := IntOrPtr1516{i = 42};
//    u2 := IntOrPtr1516{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1516: int;

struct Vector1516 {
    x: int;
    y: int;
}

func fact_iter1516(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1516(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1516(n-1);
    }
}

const n1516 = 1 + sizeof(p1516);

var p1516: T1516*;

struct T1516 {
    a: int[n1516];
}


func example_test1517(): int {
    return fact_rec1517(10) == fact_iter1517(10);
}

union IntOrPtr1517 {
    i: int;
    p: int*;
}

// func f1517() {
//    u1 := IntOrPtr1517{i = 42};
//    u2 := IntOrPtr1517{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1517: int;

struct Vector1517 {
    x: int;
    y: int;
}

func fact_iter1517(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1517(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1517(n-1);
    }
}

const n1517 = 1 + sizeof(p1517);

var p1517: T1517*;

struct T1517 {
    a: int[n1517];
}


func example_test1518(): int {
    return fact_rec1518(10) == fact_iter1518(10);
}

union IntOrPtr1518 {
    i: int;
    p: int*;
}

// func f1518() {
//    u1 := IntOrPtr1518{i = 42};
//    u2 := IntOrPtr1518{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1518: int;

struct Vector1518 {
    x: int;
    y: int;
}

func fact_iter1518(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1518(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1518(n-1);
    }
}

const n1518 = 1 + sizeof(p1518);

var p1518: T1518*;

struct T1518 {
    a: int[n1518];
}


func example_test1519(): int {
    return fact_rec1519(10) == fact_iter1519(10);
}

union IntOrPtr1519 {
    i: int;
    p: int*;
}

// func f1519() {
//    u1 := IntOrPtr1519{i = 42};
//    u2 := IntOrPtr1519{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1519: int;

struct Vector1519 {
    x: int;
    y: int;
}

func fact_iter1519(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1519(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1519(n-1);
    }
}

const n1519 = 1 + sizeof(p1519);

var p1519: T1519*;

struct T1519 {
    a: int[n1519];
}


func example_test1520(): int {
    return fact_rec1520(10) == fact_iter1520(10);
}

union IntOrPtr1520 {
    i: int;
    p: int*;
}

// func f1520() {
//    u1 := IntOrPtr1520{i = 42};
//    u2 := IntOrPtr1520{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1520: int;

struct Vector1520 {
    x: int;
    y: int;
}

func fact_iter1520(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1520(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1520(n-1);
    }
}

const n1520 = 1 + sizeof(p1520);

var p1520: T1520*;

struct T1520 {
    a: int[n1520];
}


func example_test1521(): int {
    return fact_rec1521(10) == fact_iter1521(10);
}

union IntOrPtr1521 {
    i: int;
    p: int*;
}

// func f1521() {
//    u1 := IntOrPtr1521{i = 42};
//    u2 := IntOrPtr1521{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1521: int;

struct Vector1521 {
    x: int;
    y: int;
}

func fact_iter1521(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1521(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1521(n-1);
    }
}

const n1521 = 1 + sizeof(p1521);

var p1521: T1521*;

struct T1521 {
    a: int[n1521];
}


func example_test1522(): int {
    return fact_rec1522(10) == fact_iter1522(10);
}

union IntOrPtr1522 {
    i: int;
    p: int*;
}

// func f1522() {
//    u1 := IntOrPtr1522{i = 42};
//    u2 := IntOrPtr1522{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1522: int;

struct Vector1522 {
    x: int;
    y: int;
}

func fact_iter1522(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1522(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1522(n-1);
    }
}

const n1522 = 1 + sizeof(p1522);

var p1522: T1522*;

struct T1522 {
    a: int[n1522];
}


func example_test1523(): int {
    return fact_rec1523(10) == fact_iter1523(10);
}

union IntOrPtr1523 {
    i: int;
    p: int*;
}

// func f1523() {
//    u1 := IntOrPtr1523{i = 42};
//    u2 := IntOrPtr1523{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1523: int;

struct Vector1523 {
    x: int;
    y: int;
}

func fact_iter1523(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1523(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1523(n-1);
    }
}

const n1523 = 1 + sizeof(p1523);

var p1523: T1523*;

struct T1523 {
    a: int[n1523];
}


func example_test1524(): int {
    return fact_rec1524(10) == fact_iter1524(10);
}

union IntOrPtr1524 {
    i: int;
    p: int*;
}

// func f1524() {
//    u1 := IntOrPtr1524{i = 42};
//    u2 := IntOrPtr1524{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1524: int;

struct Vector1524 {
    x: int;
    y: int;
}

func fact_iter1524(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1524(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1524(n-1);
    }
}

const n1524 = 1 + sizeof(p1524);

var p1524: T1524*;

struct T1524 {
    a: int[n1524];
}


func example_test1525(): int {
    return fact_rec1525(10) == fact_iter1525(10);
}

union IntOrPtr1525 {
    i: int;
    p: int*;
}

// func f1525() {
//    u1 := IntOrPtr1525{i = 42};
//    u2 := IntOrPtr1525{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1525: int;

struct Vector1525 {
    x: int;
    y: int;
}

func fact_iter1525(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1525(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1525(n-1);
    }
}

const n1525 = 1 + sizeof(p1525);

var p1525: T1525*;

struct T1525 {
    a: int[n1525];
}


func example_test1526(): int {
    return fact_rec1526(10) == fact_iter1526(10);
}

union IntOrPtr1526 {
    i: int;
    p: int*;
}

// func f1526() {
//    u1 := IntOrPtr1526{i = 42};
//    u2 := IntOrPtr1526{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1526: int;

struct Vector1526 {
    x: int;
    y: int;
}

func fact_iter1526(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1526(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1526(n-1);
    }
}

const n1526 = 1 + sizeof(p1526);

var p1526: T1526*;

struct T1526 {
    a: int[n1526];
}


func example_test1527(): int {
    return fact_rec1527(10) == fact_iter1527(10);
}

union IntOrPtr1527 {
    i: int;
    p: int*;
}

// func f1527() {
//    u1 := IntOrPtr1527{i = 42};
//    u2 := IntOrPtr1527{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1527: int;

struct Vector1527 {
    x: int;
    y: int;
}

func fact_iter1527(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1527(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1527(n-1);
    }
}

const n1527 = 1 + sizeof(p1527);

var p1527: T1527*;

struct T1527 {
    a: int[n1527];
}


func example_test1528(): int {
    return fact_rec1528(10) == fact_iter1528(10);
}

union IntOrPtr1528 {
    i: int;
    p: int*;
}

// func f1528() {
//    u1 := IntOrPtr1528{i = 42};
//    u2 := IntOrPtr1528{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1528: int;

struct Vector1528 {
    x: int;
    y: int;
}

func fact_iter1528(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1528(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1528(n-1);
    }
}

const n1528 = 1 + sizeof(p1528);

var p1528: T1528*;

struct T1528 {
    a: int[n1528];
}


func example_test1529(): int {
    return fact_rec1529(10) == fact_iter1529(10);
}

union IntOrPtr1529 {
    i: int;
    p: int*;
}

// func f1529() {
//    u1 := IntOrPtr1529{i = 42};
//    u2 := IntOrPtr1529{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1529: int;

struct Vector1529 {
    x: int;
    y: int;
}

func fact_iter1529(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1529(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1529(n-1);
    }
}

const n1529 = 1 + sizeof(p1529);

var p1529: T1529*;

struct T1529 {
    a: int[n1529];
}


func example_test1530(): int {
    return fact_rec1530(10) == fact_iter1530(10);
}

union IntOrPtr1530 {
    i: int;
    p: int*;
}

// func f1530() {
//    u1 := IntOrPtr1530{i = 42};
//    u2 := IntOrPtr1530{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1530: int;

struct Vector1530 {
    x: int;
    y: int;
}

func fact_iter1530(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1530(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1530(n-1);
    }
}

const n1530 = 1 + sizeof(p1530);

var p1530: T1530*;

struct T1530 {
    a: int[n1530];
}


func example_test1531(): int {
    return fact_rec1531(10) == fact_iter1531(10);
}

union IntOrPtr1531 {
    i: int;
    p: int*;
}

// func f1531() {
//    u1 := IntOrPtr1531{i = 42};
//    u2 := IntOrPtr1531{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1531: int;

struct Vector1531 {
    x: int;
    y: int;
}

func fact_iter1531(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1531(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1531(n-1);
    }
}

const n1531 = 1 + sizeof(p1531);

var p1531: T1531*;

struct T1531 {
    a: int[n1531];
}


func example_test1532(): int {
    return fact_rec1532(10) == fact_iter1532(10);
}

union IntOrPtr1532 {
    i: int;
    p: int*;
}

// func f1532() {
//    u1 := IntOrPtr1532{i = 42};
//    u2 := IntOrPtr1532{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1532: int;

struct Vector1532 {
    x: int;
    y: int;
}

func fact_iter1532(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1532(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1532(n-1);
    }
}

const n1532 = 1 + sizeof(p1532);

var p1532: T1532*;

struct T1532 {
    a: int[n1532];
}


func example_test1533(): int {
    return fact_rec1533(10) == fact_iter1533(10);
}

union IntOrPtr1533 {
    i: int;
    p: int*;
}

// func f1533() {
//    u1 := IntOrPtr1533{i = 42};
//    u2 := IntOrPtr1533{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1533: int;

struct Vector1533 {
    x: int;
    y: int;
}

func fact_iter1533(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1533(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1533(n-1);
    }
}

const n1533 = 1 + sizeof(p1533);

var p1533: T1533*;

struct T1533 {
    a: int[n1533];
}


func example_test1534(): int {
    return fact_rec1534(10) == fact_iter1534(10);
}

union IntOrPtr1534 {
    i: int;
    p: int*;
}

// func f1534() {
//    u1 := IntOrPtr1534{i = 42};
//    u2 := IntOrPtr1534{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1534: int;

struct Vector1534 {
    x: int;
    y: int;
}

func fact_iter1534(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1534(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1534(n-1);
    }
}

const n1534 = 1 + sizeof(p1534);

var p1534: T1534*;

struct T1534 {
    a: int[n1534];
}


func example_test1535(): int {
    return fact_rec1535(10) == fact_iter1535(10);
}

union IntOrPtr1535 {
    i: int;
    p: int*;
}

// func f1535() {
//    u1 := IntOrPtr1535{i = 42};
//    u2 := IntOrPtr1535{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1535: int;

struct Vector1535 {
    x: int;
    y: int;
}

func fact_iter1535(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1535(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1535(n-1);
    }
}

const n1535 = 1 + sizeof(p1535);

var p1535: T1535*;

struct T1535 {
    a: int[n1535];
}


func example_test1536(): int {
    return fact_rec1536(10) == fact_iter1536(10);
}

union IntOrPtr1536 {
    i: int;
    p: int*;
}

// func f1536() {
//    u1 := IntOrPtr1536{i = 42};
//    u2 := IntOrPtr1536{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1536: int;

struct Vector1536 {
    x: int;
    y: int;
}

func fact_iter1536(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1536(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1536(n-1);
    }
}

const n1536 = 1 + sizeof(p1536);

var p1536: T1536*;

struct T1536 {
    a: int[n1536];
}


func example_test1537(): int {
    return fact_rec1537(10) == fact_iter1537(10);
}

union IntOrPtr1537 {
    i: int;
    p: int*;
}

// func f1537() {
//    u1 := IntOrPtr1537{i = 42};
//    u2 := IntOrPtr1537{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1537: int;

struct Vector1537 {
    x: int;
    y: int;
}

func fact_iter1537(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1537(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1537(n-1);
    }
}

const n1537 = 1 + sizeof(p1537);

var p1537: T1537*;

struct T1537 {
    a: int[n1537];
}


func example_test1538(): int {
    return fact_rec1538(10) == fact_iter1538(10);
}

union IntOrPtr1538 {
    i: int;
    p: int*;
}

// func f1538() {
//    u1 := IntOrPtr1538{i = 42};
//    u2 := IntOrPtr1538{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1538: int;

struct Vector1538 {
    x: int;
    y: int;
}

func fact_iter1538(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1538(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1538(n-1);
    }
}

const n1538 = 1 + sizeof(p1538);

var p1538: T1538*;

struct T1538 {
    a: int[n1538];
}


func example_test1539(): int {
    return fact_rec1539(10) == fact_iter1539(10);
}

union IntOrPtr1539 {
    i: int;
    p: int*;
}

// func f1539() {
//    u1 := IntOrPtr1539{i = 42};
//    u2 := IntOrPtr1539{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1539: int;

struct Vector1539 {
    x: int;
    y: int;
}

func fact_iter1539(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1539(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1539(n-1);
    }
}

const n1539 = 1 + sizeof(p1539);

var p1539: T1539*;

struct T1539 {
    a: int[n1539];
}


func example_test1540(): int {
    return fact_rec1540(10) == fact_iter1540(10);
}

union IntOrPtr1540 {
    i: int;
    p: int*;
}

// func f1540() {
//    u1 := IntOrPtr1540{i = 42};
//    u2 := IntOrPtr1540{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1540: int;

struct Vector1540 {
    x: int;
    y: int;
}

func fact_iter1540(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1540(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1540(n-1);
    }
}

const n1540 = 1 + sizeof(p1540);

var p1540: T1540*;

struct T1540 {
    a: int[n1540];
}


func example_test1541(): int {
    return fact_rec1541(10) == fact_iter1541(10);
}

union IntOrPtr1541 {
    i: int;
    p: int*;
}

// func f1541() {
//    u1 := IntOrPtr1541{i = 42};
//    u2 := IntOrPtr1541{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1541: int;

struct Vector1541 {
    x: int;
    y: int;
}

func fact_iter1541(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1541(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1541(n-1);
    }
}

const n1541 = 1 + sizeof(p1541);

var p1541: T1541*;

struct T1541 {
    a: int[n1541];
}


func example_test1542(): int {
    return fact_rec1542(10) == fact_iter1542(10);
}

union IntOrPtr1542 {
    i: int;
    p: int*;
}

// func f1542() {
//    u1 := IntOrPtr1542{i = 42};
//    u2 := IntOrPtr1542{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1542: int;

struct Vector1542 {
    x: int;
    y: int;
}

func fact_iter1542(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1542(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1542(n-1);
    }
}

const n1542 = 1 + sizeof(p1542);

var p1542: T1542*;

struct T1542 {
    a: int[n1542];
}


func example_test1543(): int {
    return fact_rec1543(10) == fact_iter1543(10);
}

union IntOrPtr1543 {
    i: int;
    p: int*;
}

// func f1543() {
//    u1 := IntOrPtr1543{i = 42};
//    u2 := IntOrPtr1543{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1543: int;

struct Vector1543 {
    x: int;
    y: int;
}

func fact_iter1543(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1543(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1543(n-1);
    }
}

const n1543 = 1 + sizeof(p1543);

var p1543: T1543*;

struct T1543 {
    a: int[n1543];
}


func example_test1544(): int {
    return fact_rec1544(10) == fact_iter1544(10);
}

union IntOrPtr1544 {
    i: int;
    p: int*;
}

// func f1544() {
//    u1 := IntOrPtr1544{i = 42};
//    u2 := IntOrPtr1544{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1544: int;

struct Vector1544 {
    x: int;
    y: int;
}

func fact_iter1544(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1544(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1544(n-1);
    }
}

const n1544 = 1 + sizeof(p1544);

var p1544: T1544*;

struct T1544 {
    a: int[n1544];
}


func example_test1545(): int {
    return fact_rec1545(10) == fact_iter1545(10);
}

union IntOrPtr1545 {
    i: int;
    p: int*;
}

// func f1545() {
//    u1 := IntOrPtr1545{i = 42};
//    u2 := IntOrPtr1545{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1545: int;

struct Vector1545 {
    x: int;
    y: int;
}

func fact_iter1545(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1545(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1545(n-1);
    }
}

const n1545 = 1 + sizeof(p1545);

var p1545: T1545*;

struct T1545 {
    a: int[n1545];
}


func example_test1546(): int {
    return fact_rec1546(10) == fact_iter1546(10);
}

union IntOrPtr1546 {
    i: int;
    p: int*;
}

// func f1546() {
//    u1 := IntOrPtr1546{i = 42};
//    u2 := IntOrPtr1546{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1546: int;

struct Vector1546 {
    x: int;
    y: int;
}

func fact_iter1546(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1546(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1546(n-1);
    }
}

const n1546 = 1 + sizeof(p1546);

var p1546: T1546*;

struct T1546 {
    a: int[n1546];
}


func example_test1547(): int {
    return fact_rec1547(10) == fact_iter1547(10);
}

union IntOrPtr1547 {
    i: int;
    p: int*;
}

// func f1547() {
//    u1 := IntOrPtr1547{i = 42};
//    u2 := IntOrPtr1547{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1547: int;

struct Vector1547 {
    x: int;
    y: int;
}

func fact_iter1547(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1547(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1547(n-1);
    }
}

const n1547 = 1 + sizeof(p1547);

var p1547: T1547*;

struct T1547 {
    a: int[n1547];
}


func example_test1548(): int {
    return fact_rec1548(10) == fact_iter1548(10);
}

union IntOrPtr1548 {
    i: int;
    p: int*;
}

// func f1548() {
//    u1 := IntOrPtr1548{i = 42};
//    u2 := IntOrPtr1548{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1548: int;

struct Vector1548 {
    x: int;
    y: int;
}

func fact_iter1548(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1548(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1548(n-1);
    }
}

const n1548 = 1 + sizeof(p1548);

var p1548: T1548*;

struct T1548 {
    a: int[n1548];
}


func example_test1549(): int {
    return fact_rec1549(10) == fact_iter1549(10);
}

union IntOrPtr1549 {
    i: int;
    p: int*;
}

// func f1549() {
//    u1 := IntOrPtr1549{i = 42};
//    u2 := IntOrPtr1549{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1549: int;

struct Vector1549 {
    x: int;
    y: int;
}

func fact_iter1549(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1549(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1549(n-1);
    }
}

const n1549 = 1 + sizeof(p1549);

var p1549: T1549*;

struct T1549 {
    a: int[n1549];
}


func example_test1550(): int {
    return fact_rec1550(10) == fact_iter1550(10);
}

union IntOrPtr1550 {
    i: int;
    p: int*;
}

// func f1550() {
//    u1 := IntOrPtr1550{i = 42};
//    u2 := IntOrPtr1550{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1550: int;

struct Vector1550 {
    x: int;
    y: int;
}

func fact_iter1550(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1550(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1550(n-1);
    }
}

const n1550 = 1 + sizeof(p1550);

var p1550: T1550*;

struct T1550 {
    a: int[n1550];
}


func example_test1551(): int {
    return fact_rec1551(10) == fact_iter1551(10);
}

union IntOrPtr1551 {
    i: int;
    p: int*;
}

// func f1551() {
//    u1 := IntOrPtr1551{i = 42};
//    u2 := IntOrPtr1551{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1551: int;

struct Vector1551 {
    x: int;
    y: int;
}

func fact_iter1551(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1551(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1551(n-1);
    }
}

const n1551 = 1 + sizeof(p1551);

var p1551: T1551*;

struct T1551 {
    a: int[n1551];
}


func example_test1552(): int {
    return fact_rec1552(10) == fact_iter1552(10);
}

union IntOrPtr1552 {
    i: int;
    p: int*;
}

// func f1552() {
//    u1 := IntOrPtr1552{i = 42};
//    u2 := IntOrPtr1552{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1552: int;

struct Vector1552 {
    x: int;
    y: int;
}

func fact_iter1552(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1552(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1552(n-1);
    }
}

const n1552 = 1 + sizeof(p1552);

var p1552: T1552*;

struct T1552 {
    a: int[n1552];
}


func example_test1553(): int {
    return fact_rec1553(10) == fact_iter1553(10);
}

union IntOrPtr1553 {
    i: int;
    p: int*;
}

// func f1553() {
//    u1 := IntOrPtr1553{i = 42};
//    u2 := IntOrPtr1553{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1553: int;

struct Vector1553 {
    x: int;
    y: int;
}

func fact_iter1553(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1553(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1553(n-1);
    }
}

const n1553 = 1 + sizeof(p1553);

var p1553: T1553*;

struct T1553 {
    a: int[n1553];
}


func example_test1554(): int {
    return fact_rec1554(10) == fact_iter1554(10);
}

union IntOrPtr1554 {
    i: int;
    p: int*;
}

// func f1554() {
//    u1 := IntOrPtr1554{i = 42};
//    u2 := IntOrPtr1554{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1554: int;

struct Vector1554 {
    x: int;
    y: int;
}

func fact_iter1554(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1554(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1554(n-1);
    }
}

const n1554 = 1 + sizeof(p1554);

var p1554: T1554*;

struct T1554 {
    a: int[n1554];
}


func example_test1555(): int {
    return fact_rec1555(10) == fact_iter1555(10);
}

union IntOrPtr1555 {
    i: int;
    p: int*;
}

// func f1555() {
//    u1 := IntOrPtr1555{i = 42};
//    u2 := IntOrPtr1555{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1555: int;

struct Vector1555 {
    x: int;
    y: int;
}

func fact_iter1555(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1555(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1555(n-1);
    }
}

const n1555 = 1 + sizeof(p1555);

var p1555: T1555*;

struct T1555 {
    a: int[n1555];
}


func example_test1556(): int {
    return fact_rec1556(10) == fact_iter1556(10);
}

union IntOrPtr1556 {
    i: int;
    p: int*;
}

// func f1556() {
//    u1 := IntOrPtr1556{i = 42};
//    u2 := IntOrPtr1556{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1556: int;

struct Vector1556 {
    x: int;
    y: int;
}

func fact_iter1556(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1556(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1556(n-1);
    }
}

const n1556 = 1 + sizeof(p1556);

var p1556: T1556*;

struct T1556 {
    a: int[n1556];
}


func example_test1557(): int {
    return fact_rec1557(10) == fact_iter1557(10);
}

union IntOrPtr1557 {
    i: int;
    p: int*;
}

// func f1557() {
//    u1 := IntOrPtr1557{i = 42};
//    u2 := IntOrPtr1557{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1557: int;

struct Vector1557 {
    x: int;
    y: int;
}

func fact_iter1557(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1557(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1557(n-1);
    }
}

const n1557 = 1 + sizeof(p1557);

var p1557: T1557*;

struct T1557 {
    a: int[n1557];
}


func example_test1558(): int {
    return fact_rec1558(10) == fact_iter1558(10);
}

union IntOrPtr1558 {
    i: int;
    p: int*;
}

// func f1558() {
//    u1 := IntOrPtr1558{i = 42};
//    u2 := IntOrPtr1558{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1558: int;

struct Vector1558 {
    x: int;
    y: int;
}

func fact_iter1558(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1558(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1558(n-1);
    }
}

const n1558 = 1 + sizeof(p1558);

var p1558: T1558*;

struct T1558 {
    a: int[n1558];
}


func example_test1559(): int {
    return fact_rec1559(10) == fact_iter1559(10);
}

union IntOrPtr1559 {
    i: int;
    p: int*;
}

// func f1559() {
//    u1 := IntOrPtr1559{i = 42};
//    u2 := IntOrPtr1559{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1559: int;

struct Vector1559 {
    x: int;
    y: int;
}

func fact_iter1559(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1559(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1559(n-1);
    }
}

const n1559 = 1 + sizeof(p1559);

var p1559: T1559*;

struct T1559 {
    a: int[n1559];
}


func example_test1560(): int {
    return fact_rec1560(10) == fact_iter1560(10);
}

union IntOrPtr1560 {
    i: int;
    p: int*;
}

// func f1560() {
//    u1 := IntOrPtr1560{i = 42};
//    u2 := IntOrPtr1560{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1560: int;

struct Vector1560 {
    x: int;
    y: int;
}

func fact_iter1560(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1560(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1560(n-1);
    }
}

const n1560 = 1 + sizeof(p1560);

var p1560: T1560*;

struct T1560 {
    a: int[n1560];
}


func example_test1561(): int {
    return fact_rec1561(10) == fact_iter1561(10);
}

union IntOrPtr1561 {
    i: int;
    p: int*;
}

// func f1561() {
//    u1 := IntOrPtr1561{i = 42};
//    u2 := IntOrPtr1561{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1561: int;

struct Vector1561 {
    x: int;
    y: int;
}

func fact_iter1561(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1561(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1561(n-1);
    }
}

const n1561 = 1 + sizeof(p1561);

var p1561: T1561*;

struct T1561 {
    a: int[n1561];
}


func example_test1562(): int {
    return fact_rec1562(10) == fact_iter1562(10);
}

union IntOrPtr1562 {
    i: int;
    p: int*;
}

// func f1562() {
//    u1 := IntOrPtr1562{i = 42};
//    u2 := IntOrPtr1562{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1562: int;

struct Vector1562 {
    x: int;
    y: int;
}

func fact_iter1562(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1562(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1562(n-1);
    }
}

const n1562 = 1 + sizeof(p1562);

var p1562: T1562*;

struct T1562 {
    a: int[n1562];
}


func example_test1563(): int {
    return fact_rec1563(10) == fact_iter1563(10);
}

union IntOrPtr1563 {
    i: int;
    p: int*;
}

// func f1563() {
//    u1 := IntOrPtr1563{i = 42};
//    u2 := IntOrPtr1563{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1563: int;

struct Vector1563 {
    x: int;
    y: int;
}

func fact_iter1563(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1563(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1563(n-1);
    }
}

const n1563 = 1 + sizeof(p1563);

var p1563: T1563*;

struct T1563 {
    a: int[n1563];
}


func example_test1564(): int {
    return fact_rec1564(10) == fact_iter1564(10);
}

union IntOrPtr1564 {
    i: int;
    p: int*;
}

// func f1564() {
//    u1 := IntOrPtr1564{i = 42};
//    u2 := IntOrPtr1564{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1564: int;

struct Vector1564 {
    x: int;
    y: int;
}

func fact_iter1564(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1564(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1564(n-1);
    }
}

const n1564 = 1 + sizeof(p1564);

var p1564: T1564*;

struct T1564 {
    a: int[n1564];
}


func example_test1565(): int {
    return fact_rec1565(10) == fact_iter1565(10);
}

union IntOrPtr1565 {
    i: int;
    p: int*;
}

// func f1565() {
//    u1 := IntOrPtr1565{i = 42};
//    u2 := IntOrPtr1565{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1565: int;

struct Vector1565 {
    x: int;
    y: int;
}

func fact_iter1565(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1565(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1565(n-1);
    }
}

const n1565 = 1 + sizeof(p1565);

var p1565: T1565*;

struct T1565 {
    a: int[n1565];
}


func example_test1566(): int {
    return fact_rec1566(10) == fact_iter1566(10);
}

union IntOrPtr1566 {
    i: int;
    p: int*;
}

// func f1566() {
//    u1 := IntOrPtr1566{i = 42};
//    u2 := IntOrPtr1566{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1566: int;

struct Vector1566 {
    x: int;
    y: int;
}

func fact_iter1566(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1566(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1566(n-1);
    }
}

const n1566 = 1 + sizeof(p1566);

var p1566: T1566*;

struct T1566 {
    a: int[n1566];
}


func example_test1567(): int {
    return fact_rec1567(10) == fact_iter1567(10);
}

union IntOrPtr1567 {
    i: int;
    p: int*;
}

// func f1567() {
//    u1 := IntOrPtr1567{i = 42};
//    u2 := IntOrPtr1567{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1567: int;

struct Vector1567 {
    x: int;
    y: int;
}

func fact_iter1567(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1567(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1567(n-1);
    }
}

const n1567 = 1 + sizeof(p1567);

var p1567: T1567*;

struct T1567 {
    a: int[n1567];
}


func example_test1568(): int {
    return fact_rec1568(10) == fact_iter1568(10);
}

union IntOrPtr1568 {
    i: int;
    p: int*;
}

// func f1568() {
//    u1 := IntOrPtr1568{i = 42};
//    u2 := IntOrPtr1568{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1568: int;

struct Vector1568 {
    x: int;
    y: int;
}

func fact_iter1568(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1568(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1568(n-1);
    }
}

const n1568 = 1 + sizeof(p1568);

var p1568: T1568*;

struct T1568 {
    a: int[n1568];
}


func example_test1569(): int {
    return fact_rec1569(10) == fact_iter1569(10);
}

union IntOrPtr1569 {
    i: int;
    p: int*;
}

// func f1569() {
//    u1 := IntOrPtr1569{i = 42};
//    u2 := IntOrPtr1569{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1569: int;

struct Vector1569 {
    x: int;
    y: int;
}

func fact_iter1569(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1569(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1569(n-1);
    }
}

const n1569 = 1 + sizeof(p1569);

var p1569: T1569*;

struct T1569 {
    a: int[n1569];
}


func example_test1570(): int {
    return fact_rec1570(10) == fact_iter1570(10);
}

union IntOrPtr1570 {
    i: int;
    p: int*;
}

// func f1570() {
//    u1 := IntOrPtr1570{i = 42};
//    u2 := IntOrPtr1570{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1570: int;

struct Vector1570 {
    x: int;
    y: int;
}

func fact_iter1570(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1570(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1570(n-1);
    }
}

const n1570 = 1 + sizeof(p1570);

var p1570: T1570*;

struct T1570 {
    a: int[n1570];
}


func example_test1571(): int {
    return fact_rec1571(10) == fact_iter1571(10);
}

union IntOrPtr1571 {
    i: int;
    p: int*;
}

// func f1571() {
//    u1 := IntOrPtr1571{i = 42};
//    u2 := IntOrPtr1571{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1571: int;

struct Vector1571 {
    x: int;
    y: int;
}

func fact_iter1571(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1571(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1571(n-1);
    }
}

const n1571 = 1 + sizeof(p1571);

var p1571: T1571*;

struct T1571 {
    a: int[n1571];
}


func example_test1572(): int {
    return fact_rec1572(10) == fact_iter1572(10);
}

union IntOrPtr1572 {
    i: int;
    p: int*;
}

// func f1572() {
//    u1 := IntOrPtr1572{i = 42};
//    u2 := IntOrPtr1572{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1572: int;

struct Vector1572 {
    x: int;
    y: int;
}

func fact_iter1572(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1572(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1572(n-1);
    }
}

const n1572 = 1 + sizeof(p1572);

var p1572: T1572*;

struct T1572 {
    a: int[n1572];
}


func example_test1573(): int {
    return fact_rec1573(10) == fact_iter1573(10);
}

union IntOrPtr1573 {
    i: int;
    p: int*;
}

// func f1573() {
//    u1 := IntOrPtr1573{i = 42};
//    u2 := IntOrPtr1573{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1573: int;

struct Vector1573 {
    x: int;
    y: int;
}

func fact_iter1573(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1573(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1573(n-1);
    }
}

const n1573 = 1 + sizeof(p1573);

var p1573: T1573*;

struct T1573 {
    a: int[n1573];
}


func example_test1574(): int {
    return fact_rec1574(10) == fact_iter1574(10);
}

union IntOrPtr1574 {
    i: int;
    p: int*;
}

// func f1574() {
//    u1 := IntOrPtr1574{i = 42};
//    u2 := IntOrPtr1574{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1574: int;

struct Vector1574 {
    x: int;
    y: int;
}

func fact_iter1574(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1574(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1574(n-1);
    }
}

const n1574 = 1 + sizeof(p1574);

var p1574: T1574*;

struct T1574 {
    a: int[n1574];
}


func example_test1575(): int {
    return fact_rec1575(10) == fact_iter1575(10);
}

union IntOrPtr1575 {
    i: int;
    p: int*;
}

// func f1575() {
//    u1 := IntOrPtr1575{i = 42};
//    u2 := IntOrPtr1575{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1575: int;

struct Vector1575 {
    x: int;
    y: int;
}

func fact_iter1575(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1575(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1575(n-1);
    }
}

const n1575 = 1 + sizeof(p1575);

var p1575: T1575*;

struct T1575 {
    a: int[n1575];
}


func example_test1576(): int {
    return fact_rec1576(10) == fact_iter1576(10);
}

union IntOrPtr1576 {
    i: int;
    p: int*;
}

// func f1576() {
//    u1 := IntOrPtr1576{i = 42};
//    u2 := IntOrPtr1576{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1576: int;

struct Vector1576 {
    x: int;
    y: int;
}

func fact_iter1576(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1576(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1576(n-1);
    }
}

const n1576 = 1 + sizeof(p1576);

var p1576: T1576*;

struct T1576 {
    a: int[n1576];
}


func example_test1577(): int {
    return fact_rec1577(10) == fact_iter1577(10);
}

union IntOrPtr1577 {
    i: int;
    p: int*;
}

// func f1577() {
//    u1 := IntOrPtr1577{i = 42};
//    u2 := IntOrPtr1577{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1577: int;

struct Vector1577 {
    x: int;
    y: int;
}

func fact_iter1577(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1577(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1577(n-1);
    }
}

const n1577 = 1 + sizeof(p1577);

var p1577: T1577*;

struct T1577 {
    a: int[n1577];
}


func example_test1578(): int {
    return fact_rec1578(10) == fact_iter1578(10);
}

union IntOrPtr1578 {
    i: int;
    p: int*;
}

// func f1578() {
//    u1 := IntOrPtr1578{i = 42};
//    u2 := IntOrPtr1578{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1578: int;

struct Vector1578 {
    x: int;
    y: int;
}

func fact_iter1578(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1578(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1578(n-1);
    }
}

const n1578 = 1 + sizeof(p1578);

var p1578: T1578*;

struct T1578 {
    a: int[n1578];
}


func example_test1579(): int {
    return fact_rec1579(10) == fact_iter1579(10);
}

union IntOrPtr1579 {
    i: int;
    p: int*;
}

// func f1579() {
//    u1 := IntOrPtr1579{i = 42};
//    u2 := IntOrPtr1579{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1579: int;

struct Vector1579 {
    x: int;
    y: int;
}

func fact_iter1579(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1579(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1579(n-1);
    }
}

const n1579 = 1 + sizeof(p1579);

var p1579: T1579*;

struct T1579 {
    a: int[n1579];
}


func example_test1580(): int {
    return fact_rec1580(10) == fact_iter1580(10);
}

union IntOrPtr1580 {
    i: int;
    p: int*;
}

// func f1580() {
//    u1 := IntOrPtr1580{i = 42};
//    u2 := IntOrPtr1580{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1580: int;

struct Vector1580 {
    x: int;
    y: int;
}

func fact_iter1580(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1580(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1580(n-1);
    }
}

const n1580 = 1 + sizeof(p1580);

var p1580: T1580*;

struct T1580 {
    a: int[n1580];
}


func example_test1581(): int {
    return fact_rec1581(10) == fact_iter1581(10);
}

union IntOrPtr1581 {
    i: int;
    p: int*;
}

// func f1581() {
//    u1 := IntOrPtr1581{i = 42};
//    u2 := IntOrPtr1581{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1581: int;

struct Vector1581 {
    x: int;
    y: int;
}

func fact_iter1581(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1581(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1581(n-1);
    }
}

const n1581 = 1 + sizeof(p1581);

var p1581: T1581*;

struct T1581 {
    a: int[n1581];
}


func example_test1582(): int {
    return fact_rec1582(10) == fact_iter1582(10);
}

union IntOrPtr1582 {
    i: int;
    p: int*;
}

// func f1582() {
//    u1 := IntOrPtr1582{i = 42};
//    u2 := IntOrPtr1582{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1582: int;

struct Vector1582 {
    x: int;
    y: int;
}

func fact_iter1582(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1582(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1582(n-1);
    }
}

const n1582 = 1 + sizeof(p1582);

var p1582: T1582*;

struct T1582 {
    a: int[n1582];
}


func example_test1583(): int {
    return fact_rec1583(10) == fact_iter1583(10);
}

union IntOrPtr1583 {
    i: int;
    p: int*;
}

// func f1583() {
//    u1 := IntOrPtr1583{i = 42};
//    u2 := IntOrPtr1583{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1583: int;

struct Vector1583 {
    x: int;
    y: int;
}

func fact_iter1583(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1583(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1583(n-1);
    }
}

const n1583 = 1 + sizeof(p1583);

var p1583: T1583*;

struct T1583 {
    a: int[n1583];
}


func example_test1584(): int {
    return fact_rec1584(10) == fact_iter1584(10);
}

union IntOrPtr1584 {
    i: int;
    p: int*;
}

// func f1584() {
//    u1 := IntOrPtr1584{i = 42};
//    u2 := IntOrPtr1584{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1584: int;

struct Vector1584 {
    x: int;
    y: int;
}

func fact_iter1584(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1584(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1584(n-1);
    }
}

const n1584 = 1 + sizeof(p1584);

var p1584: T1584*;

struct T1584 {
    a: int[n1584];
}


func example_test1585(): int {
    return fact_rec1585(10) == fact_iter1585(10);
}

union IntOrPtr1585 {
    i: int;
    p: int*;
}

// func f1585() {
//    u1 := IntOrPtr1585{i = 42};
//    u2 := IntOrPtr1585{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1585: int;

struct Vector1585 {
    x: int;
    y: int;
}

func fact_iter1585(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1585(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1585(n-1);
    }
}

const n1585 = 1 + sizeof(p1585);

var p1585: T1585*;

struct T1585 {
    a: int[n1585];
}


func example_test1586(): int {
    return fact_rec1586(10) == fact_iter1586(10);
}

union IntOrPtr1586 {
    i: int;
    p: int*;
}

// func f1586() {
//    u1 := IntOrPtr1586{i = 42};
//    u2 := IntOrPtr1586{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1586: int;

struct Vector1586 {
    x: int;
    y: int;
}

func fact_iter1586(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1586(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1586(n-1);
    }
}

const n1586 = 1 + sizeof(p1586);

var p1586: T1586*;

struct T1586 {
    a: int[n1586];
}


func example_test1587(): int {
    return fact_rec1587(10) == fact_iter1587(10);
}

union IntOrPtr1587 {
    i: int;
    p: int*;
}

// func f1587() {
//    u1 := IntOrPtr1587{i = 42};
//    u2 := IntOrPtr1587{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1587: int;

struct Vector1587 {
    x: int;
    y: int;
}

func fact_iter1587(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1587(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1587(n-1);
    }
}

const n1587 = 1 + sizeof(p1587);

var p1587: T1587*;

struct T1587 {
    a: int[n1587];
}


func example_test1588(): int {
    return fact_rec1588(10) == fact_iter1588(10);
}

union IntOrPtr1588 {
    i: int;
    p: int*;
}

// func f1588() {
//    u1 := IntOrPtr1588{i = 42};
//    u2 := IntOrPtr1588{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1588: int;

struct Vector1588 {
    x: int;
    y: int;
}

func fact_iter1588(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1588(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1588(n-1);
    }
}

const n1588 = 1 + sizeof(p1588);

var p1588: T1588*;

struct T1588 {
    a: int[n1588];
}


func example_test1589(): int {
    return fact_rec1589(10) == fact_iter1589(10);
}

union IntOrPtr1589 {
    i: int;
    p: int*;
}

// func f1589() {
//    u1 := IntOrPtr1589{i = 42};
//    u2 := IntOrPtr1589{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1589: int;

struct Vector1589 {
    x: int;
    y: int;
}

func fact_iter1589(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1589(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1589(n-1);
    }
}

const n1589 = 1 + sizeof(p1589);

var p1589: T1589*;

struct T1589 {
    a: int[n1589];
}


func example_test1590(): int {
    return fact_rec1590(10) == fact_iter1590(10);
}

union IntOrPtr1590 {
    i: int;
    p: int*;
}

// func f1590() {
//    u1 := IntOrPtr1590{i = 42};
//    u2 := IntOrPtr1590{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1590: int;

struct Vector1590 {
    x: int;
    y: int;
}

func fact_iter1590(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1590(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1590(n-1);
    }
}

const n1590 = 1 + sizeof(p1590);

var p1590: T1590*;

struct T1590 {
    a: int[n1590];
}


func example_test1591(): int {
    return fact_rec1591(10) == fact_iter1591(10);
}

union IntOrPtr1591 {
    i: int;
    p: int*;
}

// func f1591() {
//    u1 := IntOrPtr1591{i = 42};
//    u2 := IntOrPtr1591{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1591: int;

struct Vector1591 {
    x: int;
    y: int;
}

func fact_iter1591(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1591(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1591(n-1);
    }
}

const n1591 = 1 + sizeof(p1591);

var p1591: T1591*;

struct T1591 {
    a: int[n1591];
}


func example_test1592(): int {
    return fact_rec1592(10) == fact_iter1592(10);
}

union IntOrPtr1592 {
    i: int;
    p: int*;
}

// func f1592() {
//    u1 := IntOrPtr1592{i = 42};
//    u2 := IntOrPtr1592{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1592: int;

struct Vector1592 {
    x: int;
    y: int;
}

func fact_iter1592(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1592(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1592(n-1);
    }
}

const n1592 = 1 + sizeof(p1592);

var p1592: T1592*;

struct T1592 {
    a: int[n1592];
}


func example_test1593(): int {
    return fact_rec1593(10) == fact_iter1593(10);
}

union IntOrPtr1593 {
    i: int;
    p: int*;
}

// func f1593() {
//    u1 := IntOrPtr1593{i = 42};
//    u2 := IntOrPtr1593{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1593: int;

struct Vector1593 {
    x: int;
    y: int;
}

func fact_iter1593(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1593(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1593(n-1);
    }
}

const n1593 = 1 + sizeof(p1593);

var p1593: T1593*;

struct T1593 {
    a: int[n1593];
}


func example_test1594(): int {
    return fact_rec1594(10) == fact_iter1594(10);
}

union IntOrPtr1594 {
    i: int;
    p: int*;
}

// func f1594() {
//    u1 := IntOrPtr1594{i = 42};
//    u2 := IntOrPtr1594{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1594: int;

struct Vector1594 {
    x: int;
    y: int;
}

func fact_iter1594(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1594(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1594(n-1);
    }
}

const n1594 = 1 + sizeof(p1594);

var p1594: T1594*;

struct T1594 {
    a: int[n1594];
}


func example_test1595(): int {
    return fact_rec1595(10) == fact_iter1595(10);
}

union IntOrPtr1595 {
    i: int;
    p: int*;
}

// func f1595() {
//    u1 := IntOrPtr1595{i = 42};
//    u2 := IntOrPtr1595{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1595: int;

struct Vector1595 {
    x: int;
    y: int;
}

func fact_iter1595(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1595(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1595(n-1);
    }
}

const n1595 = 1 + sizeof(p1595);

var p1595: T1595*;

struct T1595 {
    a: int[n1595];
}


func example_test1596(): int {
    return fact_rec1596(10) == fact_iter1596(10);
}

union IntOrPtr1596 {
    i: int;
    p: int*;
}

// func f1596() {
//    u1 := IntOrPtr1596{i = 42};
//    u2 := IntOrPtr1596{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1596: int;

struct Vector1596 {
    x: int;
    y: int;
}

func fact_iter1596(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1596(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1596(n-1);
    }
}

const n1596 = 1 + sizeof(p1596);

var p1596: T1596*;

struct T1596 {
    a: int[n1596];
}


func example_test1597(): int {
    return fact_rec1597(10) == fact_iter1597(10);
}

union IntOrPtr1597 {
    i: int;
    p: int*;
}

// func f1597() {
//    u1 := IntOrPtr1597{i = 42};
//    u2 := IntOrPtr1597{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1597: int;

struct Vector1597 {
    x: int;
    y: int;
}

func fact_iter1597(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1597(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1597(n-1);
    }
}

const n1597 = 1 + sizeof(p1597);

var p1597: T1597*;

struct T1597 {
    a: int[n1597];
}


func example_test1598(): int {
    return fact_rec1598(10) == fact_iter1598(10);
}

union IntOrPtr1598 {
    i: int;
    p: int*;
}

// func f1598() {
//    u1 := IntOrPtr1598{i = 42};
//    u2 := IntOrPtr1598{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1598: int;

struct Vector1598 {
    x: int;
    y: int;
}

func fact_iter1598(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1598(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1598(n-1);
    }
}

const n1598 = 1 + sizeof(p1598);

var p1598: T1598*;

struct T1598 {
    a: int[n1598];
}


func example_test1599(): int {
    return fact_rec1599(10) == fact_iter1599(10);
}

union IntOrPtr1599 {
    i: int;
    p: int*;
}

// func f1599() {
//    u1 := IntOrPtr1599{i = 42};
//    u2 := IntOrPtr1599{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1599: int;

struct Vector1599 {
    x: int;
    y: int;
}

func fact_iter1599(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1599(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1599(n-1);
    }
}

const n1599 = 1 + sizeof(p1599);

var p1599: T1599*;

struct T1599 {
    a: int[n1599];
}


func example_test1600(): int {
    return fact_rec1600(10) == fact_iter1600(10);
}

union IntOrPtr1600 {
    i: int;
    p: int*;
}

// func f1600() {
//    u1 := IntOrPtr1600{i = 42};
//    u2 := IntOrPtr1600{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1600: int;

struct Vector1600 {
    x: int;
    y: int;
}

func fact_iter1600(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1600(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1600(n-1);
    }
}

const n1600 = 1 + sizeof(p1600);

var p1600: T1600*;

struct T1600 {
    a: int[n1600];
}


func example_test1601(): int {
    return fact_rec1601(10) == fact_iter1601(10);
}

union IntOrPtr1601 {
    i: int;
    p: int*;
}

// func f1601() {
//    u1 := IntOrPtr1601{i = 42};
//    u2 := IntOrPtr1601{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1601: int;

struct Vector1601 {
    x: int;
    y: int;
}

func fact_iter1601(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1601(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1601(n-1);
    }
}

const n1601 = 1 + sizeof(p1601);

var p1601: T1601*;

struct T1601 {
    a: int[n1601];
}


func example_test1602(): int {
    return fact_rec1602(10) == fact_iter1602(10);
}

union IntOrPtr1602 {
    i: int;
    p: int*;
}

// func f1602() {
//    u1 := IntOrPtr1602{i = 42};
//    u2 := IntOrPtr1602{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1602: int;

struct Vector1602 {
    x: int;
    y: int;
}

func fact_iter1602(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1602(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1602(n-1);
    }
}

const n1602 = 1 + sizeof(p1602);

var p1602: T1602*;

struct T1602 {
    a: int[n1602];
}


func example_test1603(): int {
    return fact_rec1603(10) == fact_iter1603(10);
}

union IntOrPtr1603 {
    i: int;
    p: int*;
}

// func f1603() {
//    u1 := IntOrPtr1603{i = 42};
//    u2 := IntOrPtr1603{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1603: int;

struct Vector1603 {
    x: int;
    y: int;
}

func fact_iter1603(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1603(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1603(n-1);
    }
}

const n1603 = 1 + sizeof(p1603);

var p1603: T1603*;

struct T1603 {
    a: int[n1603];
}


func example_test1604(): int {
    return fact_rec1604(10) == fact_iter1604(10);
}

union IntOrPtr1604 {
    i: int;
    p: int*;
}

// func f1604() {
//    u1 := IntOrPtr1604{i = 42};
//    u2 := IntOrPtr1604{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1604: int;

struct Vector1604 {
    x: int;
    y: int;
}

func fact_iter1604(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1604(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1604(n-1);
    }
}

const n1604 = 1 + sizeof(p1604);

var p1604: T1604*;

struct T1604 {
    a: int[n1604];
}


func example_test1605(): int {
    return fact_rec1605(10) == fact_iter1605(10);
}

union IntOrPtr1605 {
    i: int;
    p: int*;
}

// func f1605() {
//    u1 := IntOrPtr1605{i = 42};
//    u2 := IntOrPtr1605{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1605: int;

struct Vector1605 {
    x: int;
    y: int;
}

func fact_iter1605(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1605(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1605(n-1);
    }
}

const n1605 = 1 + sizeof(p1605);

var p1605: T1605*;

struct T1605 {
    a: int[n1605];
}


func example_test1606(): int {
    return fact_rec1606(10) == fact_iter1606(10);
}

union IntOrPtr1606 {
    i: int;
    p: int*;
}

// func f1606() {
//    u1 := IntOrPtr1606{i = 42};
//    u2 := IntOrPtr1606{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1606: int;

struct Vector1606 {
    x: int;
    y: int;
}

func fact_iter1606(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1606(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1606(n-1);
    }
}

const n1606 = 1 + sizeof(p1606);

var p1606: T1606*;

struct T1606 {
    a: int[n1606];
}


func example_test1607(): int {
    return fact_rec1607(10) == fact_iter1607(10);
}

union IntOrPtr1607 {
    i: int;
    p: int*;
}

// func f1607() {
//    u1 := IntOrPtr1607{i = 42};
//    u2 := IntOrPtr1607{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1607: int;

struct Vector1607 {
    x: int;
    y: int;
}

func fact_iter1607(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1607(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1607(n-1);
    }
}

const n1607 = 1 + sizeof(p1607);

var p1607: T1607*;

struct T1607 {
    a: int[n1607];
}


func example_test1608(): int {
    return fact_rec1608(10) == fact_iter1608(10);
}

union IntOrPtr1608 {
    i: int;
    p: int*;
}

// func f1608() {
//    u1 := IntOrPtr1608{i = 42};
//    u2 := IntOrPtr1608{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1608: int;

struct Vector1608 {
    x: int;
    y: int;
}

func fact_iter1608(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1608(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1608(n-1);
    }
}

const n1608 = 1 + sizeof(p1608);

var p1608: T1608*;

struct T1608 {
    a: int[n1608];
}


func example_test1609(): int {
    return fact_rec1609(10) == fact_iter1609(10);
}

union IntOrPtr1609 {
    i: int;
    p: int*;
}

// func f1609() {
//    u1 := IntOrPtr1609{i = 42};
//    u2 := IntOrPtr1609{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1609: int;

struct Vector1609 {
    x: int;
    y: int;
}

func fact_iter1609(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1609(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1609(n-1);
    }
}

const n1609 = 1 + sizeof(p1609);

var p1609: T1609*;

struct T1609 {
    a: int[n1609];
}


func example_test1610(): int {
    return fact_rec1610(10) == fact_iter1610(10);
}

union IntOrPtr1610 {
    i: int;
    p: int*;
}

// func f1610() {
//    u1 := IntOrPtr1610{i = 42};
//    u2 := IntOrPtr1610{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1610: int;

struct Vector1610 {
    x: int;
    y: int;
}

func fact_iter1610(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1610(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1610(n-1);
    }
}

const n1610 = 1 + sizeof(p1610);

var p1610: T1610*;

struct T1610 {
    a: int[n1610];
}


func example_test1611(): int {
    return fact_rec1611(10) == fact_iter1611(10);
}

union IntOrPtr1611 {
    i: int;
    p: int*;
}

// func f1611() {
//    u1 := IntOrPtr1611{i = 42};
//    u2 := IntOrPtr1611{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1611: int;

struct Vector1611 {
    x: int;
    y: int;
}

func fact_iter1611(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1611(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1611(n-1);
    }
}

const n1611 = 1 + sizeof(p1611);

var p1611: T1611*;

struct T1611 {
    a: int[n1611];
}


func example_test1612(): int {
    return fact_rec1612(10) == fact_iter1612(10);
}

union IntOrPtr1612 {
    i: int;
    p: int*;
}

// func f1612() {
//    u1 := IntOrPtr1612{i = 42};
//    u2 := IntOrPtr1612{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1612: int;

struct Vector1612 {
    x: int;
    y: int;
}

func fact_iter1612(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1612(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1612(n-1);
    }
}

const n1612 = 1 + sizeof(p1612);

var p1612: T1612*;

struct T1612 {
    a: int[n1612];
}


func example_test1613(): int {
    return fact_rec1613(10) == fact_iter1613(10);
}

union IntOrPtr1613 {
    i: int;
    p: int*;
}

// func f1613() {
//    u1 := IntOrPtr1613{i = 42};
//    u2 := IntOrPtr1613{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1613: int;

struct Vector1613 {
    x: int;
    y: int;
}

func fact_iter1613(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1613(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1613(n-1);
    }
}

const n1613 = 1 + sizeof(p1613);

var p1613: T1613*;

struct T1613 {
    a: int[n1613];
}


func example_test1614(): int {
    return fact_rec1614(10) == fact_iter1614(10);
}

union IntOrPtr1614 {
    i: int;
    p: int*;
}

// func f1614() {
//    u1 := IntOrPtr1614{i = 42};
//    u2 := IntOrPtr1614{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1614: int;

struct Vector1614 {
    x: int;
    y: int;
}

func fact_iter1614(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1614(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1614(n-1);
    }
}

const n1614 = 1 + sizeof(p1614);

var p1614: T1614*;

struct T1614 {
    a: int[n1614];
}


func example_test1615(): int {
    return fact_rec1615(10) == fact_iter1615(10);
}

union IntOrPtr1615 {
    i: int;
    p: int*;
}

// func f1615() {
//    u1 := IntOrPtr1615{i = 42};
//    u2 := IntOrPtr1615{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1615: int;

struct Vector1615 {
    x: int;
    y: int;
}

func fact_iter1615(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1615(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1615(n-1);
    }
}

const n1615 = 1 + sizeof(p1615);

var p1615: T1615*;

struct T1615 {
    a: int[n1615];
}


func example_test1616(): int {
    return fact_rec1616(10) == fact_iter1616(10);
}

union IntOrPtr1616 {
    i: int;
    p: int*;
}

// func f1616() {
//    u1 := IntOrPtr1616{i = 42};
//    u2 := IntOrPtr1616{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1616: int;

struct Vector1616 {
    x: int;
    y: int;
}

func fact_iter1616(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1616(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1616(n-1);
    }
}

const n1616 = 1 + sizeof(p1616);

var p1616: T1616*;

struct T1616 {
    a: int[n1616];
}


func example_test1617(): int {
    return fact_rec1617(10) == fact_iter1617(10);
}

union IntOrPtr1617 {
    i: int;
    p: int*;
}

// func f1617() {
//    u1 := IntOrPtr1617{i = 42};
//    u2 := IntOrPtr1617{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1617: int;

struct Vector1617 {
    x: int;
    y: int;
}

func fact_iter1617(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1617(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1617(n-1);
    }
}

const n1617 = 1 + sizeof(p1617);

var p1617: T1617*;

struct T1617 {
    a: int[n1617];
}


func example_test1618(): int {
    return fact_rec1618(10) == fact_iter1618(10);
}

union IntOrPtr1618 {
    i: int;
    p: int*;
}

// func f1618() {
//    u1 := IntOrPtr1618{i = 42};
//    u2 := IntOrPtr1618{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1618: int;

struct Vector1618 {
    x: int;
    y: int;
}

func fact_iter1618(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1618(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1618(n-1);
    }
}

const n1618 = 1 + sizeof(p1618);

var p1618: T1618*;

struct T1618 {
    a: int[n1618];
}


func example_test1619(): int {
    return fact_rec1619(10) == fact_iter1619(10);
}

union IntOrPtr1619 {
    i: int;
    p: int*;
}

// func f1619() {
//    u1 := IntOrPtr1619{i = 42};
//    u2 := IntOrPtr1619{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1619: int;

struct Vector1619 {
    x: int;
    y: int;
}

func fact_iter1619(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1619(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1619(n-1);
    }
}

const n1619 = 1 + sizeof(p1619);

var p1619: T1619*;

struct T1619 {
    a: int[n1619];
}


func example_test1620(): int {
    return fact_rec1620(10) == fact_iter1620(10);
}

union IntOrPtr1620 {
    i: int;
    p: int*;
}

// func f1620() {
//    u1 := IntOrPtr1620{i = 42};
//    u2 := IntOrPtr1620{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1620: int;

struct Vector1620 {
    x: int;
    y: int;
}

func fact_iter1620(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1620(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1620(n-1);
    }
}

const n1620 = 1 + sizeof(p1620);

var p1620: T1620*;

struct T1620 {
    a: int[n1620];
}


func example_test1621(): int {
    return fact_rec1621(10) == fact_iter1621(10);
}

union IntOrPtr1621 {
    i: int;
    p: int*;
}

// func f1621() {
//    u1 := IntOrPtr1621{i = 42};
//    u2 := IntOrPtr1621{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1621: int;

struct Vector1621 {
    x: int;
    y: int;
}

func fact_iter1621(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1621(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1621(n-1);
    }
}

const n1621 = 1 + sizeof(p1621);

var p1621: T1621*;

struct T1621 {
    a: int[n1621];
}


func example_test1622(): int {
    return fact_rec1622(10) == fact_iter1622(10);
}

union IntOrPtr1622 {
    i: int;
    p: int*;
}

// func f1622() {
//    u1 := IntOrPtr1622{i = 42};
//    u2 := IntOrPtr1622{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1622: int;

struct Vector1622 {
    x: int;
    y: int;
}

func fact_iter1622(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1622(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1622(n-1);
    }
}

const n1622 = 1 + sizeof(p1622);

var p1622: T1622*;

struct T1622 {
    a: int[n1622];
}


func example_test1623(): int {
    return fact_rec1623(10) == fact_iter1623(10);
}

union IntOrPtr1623 {
    i: int;
    p: int*;
}

// func f1623() {
//    u1 := IntOrPtr1623{i = 42};
//    u2 := IntOrPtr1623{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1623: int;

struct Vector1623 {
    x: int;
    y: int;
}

func fact_iter1623(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1623(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1623(n-1);
    }
}

const n1623 = 1 + sizeof(p1623);

var p1623: T1623*;

struct T1623 {
    a: int[n1623];
}


func example_test1624(): int {
    return fact_rec1624(10) == fact_iter1624(10);
}

union IntOrPtr1624 {
    i: int;
    p: int*;
}

// func f1624() {
//    u1 := IntOrPtr1624{i = 42};
//    u2 := IntOrPtr1624{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1624: int;

struct Vector1624 {
    x: int;
    y: int;
}

func fact_iter1624(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1624(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1624(n-1);
    }
}

const n1624 = 1 + sizeof(p1624);

var p1624: T1624*;

struct T1624 {
    a: int[n1624];
}


func example_test1625(): int {
    return fact_rec1625(10) == fact_iter1625(10);
}

union IntOrPtr1625 {
    i: int;
    p: int*;
}

// func f1625() {
//    u1 := IntOrPtr1625{i = 42};
//    u2 := IntOrPtr1625{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1625: int;

struct Vector1625 {
    x: int;
    y: int;
}

func fact_iter1625(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1625(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1625(n-1);
    }
}

const n1625 = 1 + sizeof(p1625);

var p1625: T1625*;

struct T1625 {
    a: int[n1625];
}


func example_test1626(): int {
    return fact_rec1626(10) == fact_iter1626(10);
}

union IntOrPtr1626 {
    i: int;
    p: int*;
}

// func f1626() {
//    u1 := IntOrPtr1626{i = 42};
//    u2 := IntOrPtr1626{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1626: int;

struct Vector1626 {
    x: int;
    y: int;
}

func fact_iter1626(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1626(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1626(n-1);
    }
}

const n1626 = 1 + sizeof(p1626);

var p1626: T1626*;

struct T1626 {
    a: int[n1626];
}


func example_test1627(): int {
    return fact_rec1627(10) == fact_iter1627(10);
}

union IntOrPtr1627 {
    i: int;
    p: int*;
}

// func f1627() {
//    u1 := IntOrPtr1627{i = 42};
//    u2 := IntOrPtr1627{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1627: int;

struct Vector1627 {
    x: int;
    y: int;
}

func fact_iter1627(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1627(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1627(n-1);
    }
}

const n1627 = 1 + sizeof(p1627);

var p1627: T1627*;

struct T1627 {
    a: int[n1627];
}


func example_test1628(): int {
    return fact_rec1628(10) == fact_iter1628(10);
}

union IntOrPtr1628 {
    i: int;
    p: int*;
}

// func f1628() {
//    u1 := IntOrPtr1628{i = 42};
//    u2 := IntOrPtr1628{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1628: int;

struct Vector1628 {
    x: int;
    y: int;
}

func fact_iter1628(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1628(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1628(n-1);
    }
}

const n1628 = 1 + sizeof(p1628);

var p1628: T1628*;

struct T1628 {
    a: int[n1628];
}


func example_test1629(): int {
    return fact_rec1629(10) == fact_iter1629(10);
}

union IntOrPtr1629 {
    i: int;
    p: int*;
}

// func f1629() {
//    u1 := IntOrPtr1629{i = 42};
//    u2 := IntOrPtr1629{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1629: int;

struct Vector1629 {
    x: int;
    y: int;
}

func fact_iter1629(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1629(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1629(n-1);
    }
}

const n1629 = 1 + sizeof(p1629);

var p1629: T1629*;

struct T1629 {
    a: int[n1629];
}


func example_test1630(): int {
    return fact_rec1630(10) == fact_iter1630(10);
}

union IntOrPtr1630 {
    i: int;
    p: int*;
}

// func f1630() {
//    u1 := IntOrPtr1630{i = 42};
//    u2 := IntOrPtr1630{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1630: int;

struct Vector1630 {
    x: int;
    y: int;
}

func fact_iter1630(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1630(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1630(n-1);
    }
}

const n1630 = 1 + sizeof(p1630);

var p1630: T1630*;

struct T1630 {
    a: int[n1630];
}


func example_test1631(): int {
    return fact_rec1631(10) == fact_iter1631(10);
}

union IntOrPtr1631 {
    i: int;
    p: int*;
}

// func f1631() {
//    u1 := IntOrPtr1631{i = 42};
//    u2 := IntOrPtr1631{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1631: int;

struct Vector1631 {
    x: int;
    y: int;
}

func fact_iter1631(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1631(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1631(n-1);
    }
}

const n1631 = 1 + sizeof(p1631);

var p1631: T1631*;

struct T1631 {
    a: int[n1631];
}


func example_test1632(): int {
    return fact_rec1632(10) == fact_iter1632(10);
}

union IntOrPtr1632 {
    i: int;
    p: int*;
}

// func f1632() {
//    u1 := IntOrPtr1632{i = 42};
//    u2 := IntOrPtr1632{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1632: int;

struct Vector1632 {
    x: int;
    y: int;
}

func fact_iter1632(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1632(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1632(n-1);
    }
}

const n1632 = 1 + sizeof(p1632);

var p1632: T1632*;

struct T1632 {
    a: int[n1632];
}


func example_test1633(): int {
    return fact_rec1633(10) == fact_iter1633(10);
}

union IntOrPtr1633 {
    i: int;
    p: int*;
}

// func f1633() {
//    u1 := IntOrPtr1633{i = 42};
//    u2 := IntOrPtr1633{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1633: int;

struct Vector1633 {
    x: int;
    y: int;
}

func fact_iter1633(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1633(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1633(n-1);
    }
}

const n1633 = 1 + sizeof(p1633);

var p1633: T1633*;

struct T1633 {
    a: int[n1633];
}


func example_test1634(): int {
    return fact_rec1634(10) == fact_iter1634(10);
}

union IntOrPtr1634 {
    i: int;
    p: int*;
}

// func f1634() {
//    u1 := IntOrPtr1634{i = 42};
//    u2 := IntOrPtr1634{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1634: int;

struct Vector1634 {
    x: int;
    y: int;
}

func fact_iter1634(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1634(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1634(n-1);
    }
}

const n1634 = 1 + sizeof(p1634);

var p1634: T1634*;

struct T1634 {
    a: int[n1634];
}


func example_test1635(): int {
    return fact_rec1635(10) == fact_iter1635(10);
}

union IntOrPtr1635 {
    i: int;
    p: int*;
}

// func f1635() {
//    u1 := IntOrPtr1635{i = 42};
//    u2 := IntOrPtr1635{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1635: int;

struct Vector1635 {
    x: int;
    y: int;
}

func fact_iter1635(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1635(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1635(n-1);
    }
}

const n1635 = 1 + sizeof(p1635);

var p1635: T1635*;

struct T1635 {
    a: int[n1635];
}


func example_test1636(): int {
    return fact_rec1636(10) == fact_iter1636(10);
}

union IntOrPtr1636 {
    i: int;
    p: int*;
}

// func f1636() {
//    u1 := IntOrPtr1636{i = 42};
//    u2 := IntOrPtr1636{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1636: int;

struct Vector1636 {
    x: int;
    y: int;
}

func fact_iter1636(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1636(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1636(n-1);
    }
}

const n1636 = 1 + sizeof(p1636);

var p1636: T1636*;

struct T1636 {
    a: int[n1636];
}


func example_test1637(): int {
    return fact_rec1637(10) == fact_iter1637(10);
}

union IntOrPtr1637 {
    i: int;
    p: int*;
}

// func f1637() {
//    u1 := IntOrPtr1637{i = 42};
//    u2 := IntOrPtr1637{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1637: int;

struct Vector1637 {
    x: int;
    y: int;
}

func fact_iter1637(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1637(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1637(n-1);
    }
}

const n1637 = 1 + sizeof(p1637);

var p1637: T1637*;

struct T1637 {
    a: int[n1637];
}


func example_test1638(): int {
    return fact_rec1638(10) == fact_iter1638(10);
}

union IntOrPtr1638 {
    i: int;
    p: int*;
}

// func f1638() {
//    u1 := IntOrPtr1638{i = 42};
//    u2 := IntOrPtr1638{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1638: int;

struct Vector1638 {
    x: int;
    y: int;
}

func fact_iter1638(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1638(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1638(n-1);
    }
}

const n1638 = 1 + sizeof(p1638);

var p1638: T1638*;

struct T1638 {
    a: int[n1638];
}


func example_test1639(): int {
    return fact_rec1639(10) == fact_iter1639(10);
}

union IntOrPtr1639 {
    i: int;
    p: int*;
}

// func f1639() {
//    u1 := IntOrPtr1639{i = 42};
//    u2 := IntOrPtr1639{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1639: int;

struct Vector1639 {
    x: int;
    y: int;
}

func fact_iter1639(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1639(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1639(n-1);
    }
}

const n1639 = 1 + sizeof(p1639);

var p1639: T1639*;

struct T1639 {
    a: int[n1639];
}


func example_test1640(): int {
    return fact_rec1640(10) == fact_iter1640(10);
}

union IntOrPtr1640 {
    i: int;
    p: int*;
}

// func f1640() {
//    u1 := IntOrPtr1640{i = 42};
//    u2 := IntOrPtr1640{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1640: int;

struct Vector1640 {
    x: int;
    y: int;
}

func fact_iter1640(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1640(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1640(n-1);
    }
}

const n1640 = 1 + sizeof(p1640);

var p1640: T1640*;

struct T1640 {
    a: int[n1640];
}


func example_test1641(): int {
    return fact_rec1641(10) == fact_iter1641(10);
}

union IntOrPtr1641 {
    i: int;
    p: int*;
}

// func f1641() {
//    u1 := IntOrPtr1641{i = 42};
//    u2 := IntOrPtr1641{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1641: int;

struct Vector1641 {
    x: int;
    y: int;
}

func fact_iter1641(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1641(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1641(n-1);
    }
}

const n1641 = 1 + sizeof(p1641);

var p1641: T1641*;

struct T1641 {
    a: int[n1641];
}


func example_test1642(): int {
    return fact_rec1642(10) == fact_iter1642(10);
}

union IntOrPtr1642 {
    i: int;
    p: int*;
}

// func f1642() {
//    u1 := IntOrPtr1642{i = 42};
//    u2 := IntOrPtr1642{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1642: int;

struct Vector1642 {
    x: int;
    y: int;
}

func fact_iter1642(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1642(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1642(n-1);
    }
}

const n1642 = 1 + sizeof(p1642);

var p1642: T1642*;

struct T1642 {
    a: int[n1642];
}


func example_test1643(): int {
    return fact_rec1643(10) == fact_iter1643(10);
}

union IntOrPtr1643 {
    i: int;
    p: int*;
}

// func f1643() {
//    u1 := IntOrPtr1643{i = 42};
//    u2 := IntOrPtr1643{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1643: int;

struct Vector1643 {
    x: int;
    y: int;
}

func fact_iter1643(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1643(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1643(n-1);
    }
}

const n1643 = 1 + sizeof(p1643);

var p1643: T1643*;

struct T1643 {
    a: int[n1643];
}


func example_test1644(): int {
    return fact_rec1644(10) == fact_iter1644(10);
}

union IntOrPtr1644 {
    i: int;
    p: int*;
}

// func f1644() {
//    u1 := IntOrPtr1644{i = 42};
//    u2 := IntOrPtr1644{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1644: int;

struct Vector1644 {
    x: int;
    y: int;
}

func fact_iter1644(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1644(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1644(n-1);
    }
}

const n1644 = 1 + sizeof(p1644);

var p1644: T1644*;

struct T1644 {
    a: int[n1644];
}


func example_test1645(): int {
    return fact_rec1645(10) == fact_iter1645(10);
}

union IntOrPtr1645 {
    i: int;
    p: int*;
}

// func f1645() {
//    u1 := IntOrPtr1645{i = 42};
//    u2 := IntOrPtr1645{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1645: int;

struct Vector1645 {
    x: int;
    y: int;
}

func fact_iter1645(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1645(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1645(n-1);
    }
}

const n1645 = 1 + sizeof(p1645);

var p1645: T1645*;

struct T1645 {
    a: int[n1645];
}


func example_test1646(): int {
    return fact_rec1646(10) == fact_iter1646(10);
}

union IntOrPtr1646 {
    i: int;
    p: int*;
}

// func f1646() {
//    u1 := IntOrPtr1646{i = 42};
//    u2 := IntOrPtr1646{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1646: int;

struct Vector1646 {
    x: int;
    y: int;
}

func fact_iter1646(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1646(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1646(n-1);
    }
}

const n1646 = 1 + sizeof(p1646);

var p1646: T1646*;

struct T1646 {
    a: int[n1646];
}


func example_test1647(): int {
    return fact_rec1647(10) == fact_iter1647(10);
}

union IntOrPtr1647 {
    i: int;
    p: int*;
}

// func f1647() {
//    u1 := IntOrPtr1647{i = 42};
//    u2 := IntOrPtr1647{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1647: int;

struct Vector1647 {
    x: int;
    y: int;
}

func fact_iter1647(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1647(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1647(n-1);
    }
}

const n1647 = 1 + sizeof(p1647);

var p1647: T1647*;

struct T1647 {
    a: int[n1647];
}


func example_test1648(): int {
    return fact_rec1648(10) == fact_iter1648(10);
}

union IntOrPtr1648 {
    i: int;
    p: int*;
}

// func f1648() {
//    u1 := IntOrPtr1648{i = 42};
//    u2 := IntOrPtr1648{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1648: int;

struct Vector1648 {
    x: int;
    y: int;
}

func fact_iter1648(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1648(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1648(n-1);
    }
}

const n1648 = 1 + sizeof(p1648);

var p1648: T1648*;

struct T1648 {
    a: int[n1648];
}


func example_test1649(): int {
    return fact_rec1649(10) == fact_iter1649(10);
}

union IntOrPtr1649 {
    i: int;
    p: int*;
}

// func f1649() {
//    u1 := IntOrPtr1649{i = 42};
//    u2 := IntOrPtr1649{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1649: int;

struct Vector1649 {
    x: int;
    y: int;
}

func fact_iter1649(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1649(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1649(n-1);
    }
}

const n1649 = 1 + sizeof(p1649);

var p1649: T1649*;

struct T1649 {
    a: int[n1649];
}


func example_test1650(): int {
    return fact_rec1650(10) == fact_iter1650(10);
}

union IntOrPtr1650 {
    i: int;
    p: int*;
}

// func f1650() {
//    u1 := IntOrPtr1650{i = 42};
//    u2 := IntOrPtr1650{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1650: int;

struct Vector1650 {
    x: int;
    y: int;
}

func fact_iter1650(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1650(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1650(n-1);
    }
}

const n1650 = 1 + sizeof(p1650);

var p1650: T1650*;

struct T1650 {
    a: int[n1650];
}


func example_test1651(): int {
    return fact_rec1651(10) == fact_iter1651(10);
}

union IntOrPtr1651 {
    i: int;
    p: int*;
}

// func f1651() {
//    u1 := IntOrPtr1651{i = 42};
//    u2 := IntOrPtr1651{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1651: int;

struct Vector1651 {
    x: int;
    y: int;
}

func fact_iter1651(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1651(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1651(n-1);
    }
}

const n1651 = 1 + sizeof(p1651);

var p1651: T1651*;

struct T1651 {
    a: int[n1651];
}


func example_test1652(): int {
    return fact_rec1652(10) == fact_iter1652(10);
}

union IntOrPtr1652 {
    i: int;
    p: int*;
}

// func f1652() {
//    u1 := IntOrPtr1652{i = 42};
//    u2 := IntOrPtr1652{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1652: int;

struct Vector1652 {
    x: int;
    y: int;
}

func fact_iter1652(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1652(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1652(n-1);
    }
}

const n1652 = 1 + sizeof(p1652);

var p1652: T1652*;

struct T1652 {
    a: int[n1652];
}


func example_test1653(): int {
    return fact_rec1653(10) == fact_iter1653(10);
}

union IntOrPtr1653 {
    i: int;
    p: int*;
}

// func f1653() {
//    u1 := IntOrPtr1653{i = 42};
//    u2 := IntOrPtr1653{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1653: int;

struct Vector1653 {
    x: int;
    y: int;
}

func fact_iter1653(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1653(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1653(n-1);
    }
}

const n1653 = 1 + sizeof(p1653);

var p1653: T1653*;

struct T1653 {
    a: int[n1653];
}


func example_test1654(): int {
    return fact_rec1654(10) == fact_iter1654(10);
}

union IntOrPtr1654 {
    i: int;
    p: int*;
}

// func f1654() {
//    u1 := IntOrPtr1654{i = 42};
//    u2 := IntOrPtr1654{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1654: int;

struct Vector1654 {
    x: int;
    y: int;
}

func fact_iter1654(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1654(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1654(n-1);
    }
}

const n1654 = 1 + sizeof(p1654);

var p1654: T1654*;

struct T1654 {
    a: int[n1654];
}


func example_test1655(): int {
    return fact_rec1655(10) == fact_iter1655(10);
}

union IntOrPtr1655 {
    i: int;
    p: int*;
}

// func f1655() {
//    u1 := IntOrPtr1655{i = 42};
//    u2 := IntOrPtr1655{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1655: int;

struct Vector1655 {
    x: int;
    y: int;
}

func fact_iter1655(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1655(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1655(n-1);
    }
}

const n1655 = 1 + sizeof(p1655);

var p1655: T1655*;

struct T1655 {
    a: int[n1655];
}


func example_test1656(): int {
    return fact_rec1656(10) == fact_iter1656(10);
}

union IntOrPtr1656 {
    i: int;
    p: int*;
}

// func f1656() {
//    u1 := IntOrPtr1656{i = 42};
//    u2 := IntOrPtr1656{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1656: int;

struct Vector1656 {
    x: int;
    y: int;
}

func fact_iter1656(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1656(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1656(n-1);
    }
}

const n1656 = 1 + sizeof(p1656);

var p1656: T1656*;

struct T1656 {
    a: int[n1656];
}


func example_test1657(): int {
    return fact_rec1657(10) == fact_iter1657(10);
}

union IntOrPtr1657 {
    i: int;
    p: int*;
}

// func f1657() {
//    u1 := IntOrPtr1657{i = 42};
//    u2 := IntOrPtr1657{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1657: int;

struct Vector1657 {
    x: int;
    y: int;
}

func fact_iter1657(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1657(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1657(n-1);
    }
}

const n1657 = 1 + sizeof(p1657);

var p1657: T1657*;

struct T1657 {
    a: int[n1657];
}


func example_test1658(): int {
    return fact_rec1658(10) == fact_iter1658(10);
}

union IntOrPtr1658 {
    i: int;
    p: int*;
}

// func f1658() {
//    u1 := IntOrPtr1658{i = 42};
//    u2 := IntOrPtr1658{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1658: int;

struct Vector1658 {
    x: int;
    y: int;
}

func fact_iter1658(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1658(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1658(n-1);
    }
}

const n1658 = 1 + sizeof(p1658);

var p1658: T1658*;

struct T1658 {
    a: int[n1658];
}


func example_test1659(): int {
    return fact_rec1659(10) == fact_iter1659(10);
}

union IntOrPtr1659 {
    i: int;
    p: int*;
}

// func f1659() {
//    u1 := IntOrPtr1659{i = 42};
//    u2 := IntOrPtr1659{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1659: int;

struct Vector1659 {
    x: int;
    y: int;
}

func fact_iter1659(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1659(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1659(n-1);
    }
}

const n1659 = 1 + sizeof(p1659);

var p1659: T1659*;

struct T1659 {
    a: int[n1659];
}


func example_test1660(): int {
    return fact_rec1660(10) == fact_iter1660(10);
}

union IntOrPtr1660 {
    i: int;
    p: int*;
}

// func f1660() {
//    u1 := IntOrPtr1660{i = 42};
//    u2 := IntOrPtr1660{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1660: int;

struct Vector1660 {
    x: int;
    y: int;
}

func fact_iter1660(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1660(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1660(n-1);
    }
}

const n1660 = 1 + sizeof(p1660);

var p1660: T1660*;

struct T1660 {
    a: int[n1660];
}


func example_test1661(): int {
    return fact_rec1661(10) == fact_iter1661(10);
}

union IntOrPtr1661 {
    i: int;
    p: int*;
}

// func f1661() {
//    u1 := IntOrPtr1661{i = 42};
//    u2 := IntOrPtr1661{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1661: int;

struct Vector1661 {
    x: int;
    y: int;
}

func fact_iter1661(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1661(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1661(n-1);
    }
}

const n1661 = 1 + sizeof(p1661);

var p1661: T1661*;

struct T1661 {
    a: int[n1661];
}


func example_test1662(): int {
    return fact_rec1662(10) == fact_iter1662(10);
}

union IntOrPtr1662 {
    i: int;
    p: int*;
}

// func f1662() {
//    u1 := IntOrPtr1662{i = 42};
//    u2 := IntOrPtr1662{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1662: int;

struct Vector1662 {
    x: int;
    y: int;
}

func fact_iter1662(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1662(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1662(n-1);
    }
}

const n1662 = 1 + sizeof(p1662);

var p1662: T1662*;

struct T1662 {
    a: int[n1662];
}


func example_test1663(): int {
    return fact_rec1663(10) == fact_iter1663(10);
}

union IntOrPtr1663 {
    i: int;
    p: int*;
}

// func f1663() {
//    u1 := IntOrPtr1663{i = 42};
//    u2 := IntOrPtr1663{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1663: int;

struct Vector1663 {
    x: int;
    y: int;
}

func fact_iter1663(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1663(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1663(n-1);
    }
}

const n1663 = 1 + sizeof(p1663);

var p1663: T1663*;

struct T1663 {
    a: int[n1663];
}


func example_test1664(): int {
    return fact_rec1664(10) == fact_iter1664(10);
}

union IntOrPtr1664 {
    i: int;
    p: int*;
}

// func f1664() {
//    u1 := IntOrPtr1664{i = 42};
//    u2 := IntOrPtr1664{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1664: int;

struct Vector1664 {
    x: int;
    y: int;
}

func fact_iter1664(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1664(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1664(n-1);
    }
}

const n1664 = 1 + sizeof(p1664);

var p1664: T1664*;

struct T1664 {
    a: int[n1664];
}


func example_test1665(): int {
    return fact_rec1665(10) == fact_iter1665(10);
}

union IntOrPtr1665 {
    i: int;
    p: int*;
}

// func f1665() {
//    u1 := IntOrPtr1665{i = 42};
//    u2 := IntOrPtr1665{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1665: int;

struct Vector1665 {
    x: int;
    y: int;
}

func fact_iter1665(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1665(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1665(n-1);
    }
}

const n1665 = 1 + sizeof(p1665);

var p1665: T1665*;

struct T1665 {
    a: int[n1665];
}


func example_test1666(): int {
    return fact_rec1666(10) == fact_iter1666(10);
}

union IntOrPtr1666 {
    i: int;
    p: int*;
}

// func f1666() {
//    u1 := IntOrPtr1666{i = 42};
//    u2 := IntOrPtr1666{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1666: int;

struct Vector1666 {
    x: int;
    y: int;
}

func fact_iter1666(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1666(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1666(n-1);
    }
}

const n1666 = 1 + sizeof(p1666);

var p1666: T1666*;

struct T1666 {
    a: int[n1666];
}


func example_test1667(): int {
    return fact_rec1667(10) == fact_iter1667(10);
}

union IntOrPtr1667 {
    i: int;
    p: int*;
}

// func f1667() {
//    u1 := IntOrPtr1667{i = 42};
//    u2 := IntOrPtr1667{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1667: int;

struct Vector1667 {
    x: int;
    y: int;
}

func fact_iter1667(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1667(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1667(n-1);
    }
}

const n1667 = 1 + sizeof(p1667);

var p1667: T1667*;

struct T1667 {
    a: int[n1667];
}


func example_test1668(): int {
    return fact_rec1668(10) == fact_iter1668(10);
}

union IntOrPtr1668 {
    i: int;
    p: int*;
}

// func f1668() {
//    u1 := IntOrPtr1668{i = 42};
//    u2 := IntOrPtr1668{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1668: int;

struct Vector1668 {
    x: int;
    y: int;
}

func fact_iter1668(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1668(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1668(n-1);
    }
}

const n1668 = 1 + sizeof(p1668);

var p1668: T1668*;

struct T1668 {
    a: int[n1668];
}


func example_test1669(): int {
    return fact_rec1669(10) == fact_iter1669(10);
}

union IntOrPtr1669 {
    i: int;
    p: int*;
}

// func f1669() {
//    u1 := IntOrPtr1669{i = 42};
//    u2 := IntOrPtr1669{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1669: int;

struct Vector1669 {
    x: int;
    y: int;
}

func fact_iter1669(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1669(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1669(n-1);
    }
}

const n1669 = 1 + sizeof(p1669);

var p1669: T1669*;

struct T1669 {
    a: int[n1669];
}


func example_test1670(): int {
    return fact_rec1670(10) == fact_iter1670(10);
}

union IntOrPtr1670 {
    i: int;
    p: int*;
}

// func f1670() {
//    u1 := IntOrPtr1670{i = 42};
//    u2 := IntOrPtr1670{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1670: int;

struct Vector1670 {
    x: int;
    y: int;
}

func fact_iter1670(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1670(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1670(n-1);
    }
}

const n1670 = 1 + sizeof(p1670);

var p1670: T1670*;

struct T1670 {
    a: int[n1670];
}


func example_test1671(): int {
    return fact_rec1671(10) == fact_iter1671(10);
}

union IntOrPtr1671 {
    i: int;
    p: int*;
}

// func f1671() {
//    u1 := IntOrPtr1671{i = 42};
//    u2 := IntOrPtr1671{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1671: int;

struct Vector1671 {
    x: int;
    y: int;
}

func fact_iter1671(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1671(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1671(n-1);
    }
}

const n1671 = 1 + sizeof(p1671);

var p1671: T1671*;

struct T1671 {
    a: int[n1671];
}


func example_test1672(): int {
    return fact_rec1672(10) == fact_iter1672(10);
}

union IntOrPtr1672 {
    i: int;
    p: int*;
}

// func f1672() {
//    u1 := IntOrPtr1672{i = 42};
//    u2 := IntOrPtr1672{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1672: int;

struct Vector1672 {
    x: int;
    y: int;
}

func fact_iter1672(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1672(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1672(n-1);
    }
}

const n1672 = 1 + sizeof(p1672);

var p1672: T1672*;

struct T1672 {
    a: int[n1672];
}


func example_test1673(): int {
    return fact_rec1673(10) == fact_iter1673(10);
}

union IntOrPtr1673 {
    i: int;
    p: int*;
}

// func f1673() {
//    u1 := IntOrPtr1673{i = 42};
//    u2 := IntOrPtr1673{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1673: int;

struct Vector1673 {
    x: int;
    y: int;
}

func fact_iter1673(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1673(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1673(n-1);
    }
}

const n1673 = 1 + sizeof(p1673);

var p1673: T1673*;

struct T1673 {
    a: int[n1673];
}


func example_test1674(): int {
    return fact_rec1674(10) == fact_iter1674(10);
}

union IntOrPtr1674 {
    i: int;
    p: int*;
}

// func f1674() {
//    u1 := IntOrPtr1674{i = 42};
//    u2 := IntOrPtr1674{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1674: int;

struct Vector1674 {
    x: int;
    y: int;
}

func fact_iter1674(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1674(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1674(n-1);
    }
}

const n1674 = 1 + sizeof(p1674);

var p1674: T1674*;

struct T1674 {
    a: int[n1674];
}


func example_test1675(): int {
    return fact_rec1675(10) == fact_iter1675(10);
}

union IntOrPtr1675 {
    i: int;
    p: int*;
}

// func f1675() {
//    u1 := IntOrPtr1675{i = 42};
//    u2 := IntOrPtr1675{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1675: int;

struct Vector1675 {
    x: int;
    y: int;
}

func fact_iter1675(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1675(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1675(n-1);
    }
}

const n1675 = 1 + sizeof(p1675);

var p1675: T1675*;

struct T1675 {
    a: int[n1675];
}


func example_test1676(): int {
    return fact_rec1676(10) == fact_iter1676(10);
}

union IntOrPtr1676 {
    i: int;
    p: int*;
}

// func f1676() {
//    u1 := IntOrPtr1676{i = 42};
//    u2 := IntOrPtr1676{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1676: int;

struct Vector1676 {
    x: int;
    y: int;
}

func fact_iter1676(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1676(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1676(n-1);
    }
}

const n1676 = 1 + sizeof(p1676);

var p1676: T1676*;

struct T1676 {
    a: int[n1676];
}


func example_test1677(): int {
    return fact_rec1677(10) == fact_iter1677(10);
}

union IntOrPtr1677 {
    i: int;
    p: int*;
}

// func f1677() {
//    u1 := IntOrPtr1677{i = 42};
//    u2 := IntOrPtr1677{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1677: int;

struct Vector1677 {
    x: int;
    y: int;
}

func fact_iter1677(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1677(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1677(n-1);
    }
}

const n1677 = 1 + sizeof(p1677);

var p1677: T1677*;

struct T1677 {
    a: int[n1677];
}


func example_test1678(): int {
    return fact_rec1678(10) == fact_iter1678(10);
}

union IntOrPtr1678 {
    i: int;
    p: int*;
}

// func f1678() {
//    u1 := IntOrPtr1678{i = 42};
//    u2 := IntOrPtr1678{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1678: int;

struct Vector1678 {
    x: int;
    y: int;
}

func fact_iter1678(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1678(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1678(n-1);
    }
}

const n1678 = 1 + sizeof(p1678);

var p1678: T1678*;

struct T1678 {
    a: int[n1678];
}


func example_test1679(): int {
    return fact_rec1679(10) == fact_iter1679(10);
}

union IntOrPtr1679 {
    i: int;
    p: int*;
}

// func f1679() {
//    u1 := IntOrPtr1679{i = 42};
//    u2 := IntOrPtr1679{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1679: int;

struct Vector1679 {
    x: int;
    y: int;
}

func fact_iter1679(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1679(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1679(n-1);
    }
}

const n1679 = 1 + sizeof(p1679);

var p1679: T1679*;

struct T1679 {
    a: int[n1679];
}


func example_test1680(): int {
    return fact_rec1680(10) == fact_iter1680(10);
}

union IntOrPtr1680 {
    i: int;
    p: int*;
}

// func f1680() {
//    u1 := IntOrPtr1680{i = 42};
//    u2 := IntOrPtr1680{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1680: int;

struct Vector1680 {
    x: int;
    y: int;
}

func fact_iter1680(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1680(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1680(n-1);
    }
}

const n1680 = 1 + sizeof(p1680);

var p1680: T1680*;

struct T1680 {
    a: int[n1680];
}


func example_test1681(): int {
    return fact_rec1681(10) == fact_iter1681(10);
}

union IntOrPtr1681 {
    i: int;
    p: int*;
}

// func f1681() {
//    u1 := IntOrPtr1681{i = 42};
//    u2 := IntOrPtr1681{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1681: int;

struct Vector1681 {
    x: int;
    y: int;
}

func fact_iter1681(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1681(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1681(n-1);
    }
}

const n1681 = 1 + sizeof(p1681);

var p1681: T1681*;

struct T1681 {
    a: int[n1681];
}


func example_test1682(): int {
    return fact_rec1682(10) == fact_iter1682(10);
}

union IntOrPtr1682 {
    i: int;
    p: int*;
}

// func f1682() {
//    u1 := IntOrPtr1682{i = 42};
//    u2 := IntOrPtr1682{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1682: int;

struct Vector1682 {
    x: int;
    y: int;
}

func fact_iter1682(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1682(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1682(n-1);
    }
}

const n1682 = 1 + sizeof(p1682);

var p1682: T1682*;

struct T1682 {
    a: int[n1682];
}


func example_test1683(): int {
    return fact_rec1683(10) == fact_iter1683(10);
}

union IntOrPtr1683 {
    i: int;
    p: int*;
}

// func f1683() {
//    u1 := IntOrPtr1683{i = 42};
//    u2 := IntOrPtr1683{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1683: int;

struct Vector1683 {
    x: int;
    y: int;
}

func fact_iter1683(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1683(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1683(n-1);
    }
}

const n1683 = 1 + sizeof(p1683);

var p1683: T1683*;

struct T1683 {
    a: int[n1683];
}


func example_test1684(): int {
    return fact_rec1684(10) == fact_iter1684(10);
}

union IntOrPtr1684 {
    i: int;
    p: int*;
}

// func f1684() {
//    u1 := IntOrPtr1684{i = 42};
//    u2 := IntOrPtr1684{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1684: int;

struct Vector1684 {
    x: int;
    y: int;
}

func fact_iter1684(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1684(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1684(n-1);
    }
}

const n1684 = 1 + sizeof(p1684);

var p1684: T1684*;

struct T1684 {
    a: int[n1684];
}


func example_test1685(): int {
    return fact_rec1685(10) == fact_iter1685(10);
}

union IntOrPtr1685 {
    i: int;
    p: int*;
}

// func f1685() {
//    u1 := IntOrPtr1685{i = 42};
//    u2 := IntOrPtr1685{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1685: int;

struct Vector1685 {
    x: int;
    y: int;
}

func fact_iter1685(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1685(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1685(n-1);
    }
}

const n1685 = 1 + sizeof(p1685);

var p1685: T1685*;

struct T1685 {
    a: int[n1685];
}


func example_test1686(): int {
    return fact_rec1686(10) == fact_iter1686(10);
}

union IntOrPtr1686 {
    i: int;
    p: int*;
}

// func f1686() {
//    u1 := IntOrPtr1686{i = 42};
//    u2 := IntOrPtr1686{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1686: int;

struct Vector1686 {
    x: int;
    y: int;
}

func fact_iter1686(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1686(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1686(n-1);
    }
}

const n1686 = 1 + sizeof(p1686);

var p1686: T1686*;

struct T1686 {
    a: int[n1686];
}


func example_test1687(): int {
    return fact_rec1687(10) == fact_iter1687(10);
}

union IntOrPtr1687 {
    i: int;
    p: int*;
}

// func f1687() {
//    u1 := IntOrPtr1687{i = 42};
//    u2 := IntOrPtr1687{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1687: int;

struct Vector1687 {
    x: int;
    y: int;
}

func fact_iter1687(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1687(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1687(n-1);
    }
}

const n1687 = 1 + sizeof(p1687);

var p1687: T1687*;

struct T1687 {
    a: int[n1687];
}


func example_test1688(): int {
    return fact_rec1688(10) == fact_iter1688(10);
}

union IntOrPtr1688 {
    i: int;
    p: int*;
}

// func f1688() {
//    u1 := IntOrPtr1688{i = 42};
//    u2 := IntOrPtr1688{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1688: int;

struct Vector1688 {
    x: int;
    y: int;
}

func fact_iter1688(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1688(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1688(n-1);
    }
}

const n1688 = 1 + sizeof(p1688);

var p1688: T1688*;

struct T1688 {
    a: int[n1688];
}


func example_test1689(): int {
    return fact_rec1689(10) == fact_iter1689(10);
}

union IntOrPtr1689 {
    i: int;
    p: int*;
}

// func f1689() {
//    u1 := IntOrPtr1689{i = 42};
//    u2 := IntOrPtr1689{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1689: int;

struct Vector1689 {
    x: int;
    y: int;
}

func fact_iter1689(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1689(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1689(n-1);
    }
}

const n1689 = 1 + sizeof(p1689);

var p1689: T1689*;

struct T1689 {
    a: int[n1689];
}


func example_test1690(): int {
    return fact_rec1690(10) == fact_iter1690(10);
}

union IntOrPtr1690 {
    i: int;
    p: int*;
}

// func f1690() {
//    u1 := IntOrPtr1690{i = 42};
//    u2 := IntOrPtr1690{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1690: int;

struct Vector1690 {
    x: int;
    y: int;
}

func fact_iter1690(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1690(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1690(n-1);
    }
}

const n1690 = 1 + sizeof(p1690);

var p1690: T1690*;

struct T1690 {
    a: int[n1690];
}


func example_test1691(): int {
    return fact_rec1691(10) == fact_iter1691(10);
}

union IntOrPtr1691 {
    i: int;
    p: int*;
}

// func f1691() {
//    u1 := IntOrPtr1691{i = 42};
//    u2 := IntOrPtr1691{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1691: int;

struct Vector1691 {
    x: int;
    y: int;
}

func fact_iter1691(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1691(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1691(n-1);
    }
}

const n1691 = 1 + sizeof(p1691);

var p1691: T1691*;

struct T1691 {
    a: int[n1691];
}


func example_test1692(): int {
    return fact_rec1692(10) == fact_iter1692(10);
}

union IntOrPtr1692 {
    i: int;
    p: int*;
}

// func f1692() {
//    u1 := IntOrPtr1692{i = 42};
//    u2 := IntOrPtr1692{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1692: int;

struct Vector1692 {
    x: int;
    y: int;
}

func fact_iter1692(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1692(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1692(n-1);
    }
}

const n1692 = 1 + sizeof(p1692);

var p1692: T1692*;

struct T1692 {
    a: int[n1692];
}


func example_test1693(): int {
    return fact_rec1693(10) == fact_iter1693(10);
}

union IntOrPtr1693 {
    i: int;
    p: int*;
}

// func f1693() {
//    u1 := IntOrPtr1693{i = 42};
//    u2 := IntOrPtr1693{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1693: int;

struct Vector1693 {
    x: int;
    y: int;
}

func fact_iter1693(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1693(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1693(n-1);
    }
}

const n1693 = 1 + sizeof(p1693);

var p1693: T1693*;

struct T1693 {
    a: int[n1693];
}


func example_test1694(): int {
    return fact_rec1694(10) == fact_iter1694(10);
}

union IntOrPtr1694 {
    i: int;
    p: int*;
}

// func f1694() {
//    u1 := IntOrPtr1694{i = 42};
//    u2 := IntOrPtr1694{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1694: int;

struct Vector1694 {
    x: int;
    y: int;
}

func fact_iter1694(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1694(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1694(n-1);
    }
}

const n1694 = 1 + sizeof(p1694);

var p1694: T1694*;

struct T1694 {
    a: int[n1694];
}


func example_test1695(): int {
    return fact_rec1695(10) == fact_iter1695(10);
}

union IntOrPtr1695 {
    i: int;
    p: int*;
}

// func f1695() {
//    u1 := IntOrPtr1695{i = 42};
//    u2 := IntOrPtr1695{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1695: int;

struct Vector1695 {
    x: int;
    y: int;
}

func fact_iter1695(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1695(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1695(n-1);
    }
}

const n1695 = 1 + sizeof(p1695);

var p1695: T1695*;

struct T1695 {
    a: int[n1695];
}


func example_test1696(): int {
    return fact_rec1696(10) == fact_iter1696(10);
}

union IntOrPtr1696 {
    i: int;
    p: int*;
}

// func f1696() {
//    u1 := IntOrPtr1696{i = 42};
//    u2 := IntOrPtr1696{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1696: int;

struct Vector1696 {
    x: int;
    y: int;
}

func fact_iter1696(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1696(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1696(n-1);
    }
}

const n1696 = 1 + sizeof(p1696);

var p1696: T1696*;

struct T1696 {
    a: int[n1696];
}


func example_test1697(): int {
    return fact_rec1697(10) == fact_iter1697(10);
}

union IntOrPtr1697 {
    i: int;
    p: int*;
}

// func f1697() {
//    u1 := IntOrPtr1697{i = 42};
//    u2 := IntOrPtr1697{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1697: int;

struct Vector1697 {
    x: int;
    y: int;
}

func fact_iter1697(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1697(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1697(n-1);
    }
}

const n1697 = 1 + sizeof(p1697);

var p1697: T1697*;

struct T1697 {
    a: int[n1697];
}


func example_test1698(): int {
    return fact_rec1698(10) == fact_iter1698(10);
}

union IntOrPtr1698 {
    i: int;
    p: int*;
}

// func f1698() {
//    u1 := IntOrPtr1698{i = 42};
//    u2 := IntOrPtr1698{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1698: int;

struct Vector1698 {
    x: int;
    y: int;
}

func fact_iter1698(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1698(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1698(n-1);
    }
}

const n1698 = 1 + sizeof(p1698);

var p1698: T1698*;

struct T1698 {
    a: int[n1698];
}


func example_test1699(): int {
    return fact_rec1699(10) == fact_iter1699(10);
}

union IntOrPtr1699 {
    i: int;
    p: int*;
}

// func f1699() {
//    u1 := IntOrPtr1699{i = 42};
//    u2 := IntOrPtr1699{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1699: int;

struct Vector1699 {
    x: int;
    y: int;
}

func fact_iter1699(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1699(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1699(n-1);
    }
}

const n1699 = 1 + sizeof(p1699);

var p1699: T1699*;

struct T1699 {
    a: int[n1699];
}


func example_test1700(): int {
    return fact_rec1700(10) == fact_iter1700(10);
}

union IntOrPtr1700 {
    i: int;
    p: int*;
}

// func f1700() {
//    u1 := IntOrPtr1700{i = 42};
//    u2 := IntOrPtr1700{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1700: int;

struct Vector1700 {
    x: int;
    y: int;
}

func fact_iter1700(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1700(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1700(n-1);
    }
}

const n1700 = 1 + sizeof(p1700);

var p1700: T1700*;

struct T1700 {
    a: int[n1700];
}


func example_test1701(): int {
    return fact_rec1701(10) == fact_iter1701(10);
}

union IntOrPtr1701 {
    i: int;
    p: int*;
}

// func f1701() {
//    u1 := IntOrPtr1701{i = 42};
//    u2 := IntOrPtr1701{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1701: int;

struct Vector1701 {
    x: int;
    y: int;
}

func fact_iter1701(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1701(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1701(n-1);
    }
}

const n1701 = 1 + sizeof(p1701);

var p1701: T1701*;

struct T1701 {
    a: int[n1701];
}


func example_test1702(): int {
    return fact_rec1702(10) == fact_iter1702(10);
}

union IntOrPtr1702 {
    i: int;
    p: int*;
}

// func f1702() {
//    u1 := IntOrPtr1702{i = 42};
//    u2 := IntOrPtr1702{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1702: int;

struct Vector1702 {
    x: int;
    y: int;
}

func fact_iter1702(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1702(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1702(n-1);
    }
}

const n1702 = 1 + sizeof(p1702);

var p1702: T1702*;

struct T1702 {
    a: int[n1702];
}


func example_test1703(): int {
    return fact_rec1703(10) == fact_iter1703(10);
}

union IntOrPtr1703 {
    i: int;
    p: int*;
}

// func f1703() {
//    u1 := IntOrPtr1703{i = 42};
//    u2 := IntOrPtr1703{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1703: int;

struct Vector1703 {
    x: int;
    y: int;
}

func fact_iter1703(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1703(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1703(n-1);
    }
}

const n1703 = 1 + sizeof(p1703);

var p1703: T1703*;

struct T1703 {
    a: int[n1703];
}


func example_test1704(): int {
    return fact_rec1704(10) == fact_iter1704(10);
}

union IntOrPtr1704 {
    i: int;
    p: int*;
}

// func f1704() {
//    u1 := IntOrPtr1704{i = 42};
//    u2 := IntOrPtr1704{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1704: int;

struct Vector1704 {
    x: int;
    y: int;
}

func fact_iter1704(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1704(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1704(n-1);
    }
}

const n1704 = 1 + sizeof(p1704);

var p1704: T1704*;

struct T1704 {
    a: int[n1704];
}


func example_test1705(): int {
    return fact_rec1705(10) == fact_iter1705(10);
}

union IntOrPtr1705 {
    i: int;
    p: int*;
}

// func f1705() {
//    u1 := IntOrPtr1705{i = 42};
//    u2 := IntOrPtr1705{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1705: int;

struct Vector1705 {
    x: int;
    y: int;
}

func fact_iter1705(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1705(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1705(n-1);
    }
}

const n1705 = 1 + sizeof(p1705);

var p1705: T1705*;

struct T1705 {
    a: int[n1705];
}


func example_test1706(): int {
    return fact_rec1706(10) == fact_iter1706(10);
}

union IntOrPtr1706 {
    i: int;
    p: int*;
}

// func f1706() {
//    u1 := IntOrPtr1706{i = 42};
//    u2 := IntOrPtr1706{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1706: int;

struct Vector1706 {
    x: int;
    y: int;
}

func fact_iter1706(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1706(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1706(n-1);
    }
}

const n1706 = 1 + sizeof(p1706);

var p1706: T1706*;

struct T1706 {
    a: int[n1706];
}


func example_test1707(): int {
    return fact_rec1707(10) == fact_iter1707(10);
}

union IntOrPtr1707 {
    i: int;
    p: int*;
}

// func f1707() {
//    u1 := IntOrPtr1707{i = 42};
//    u2 := IntOrPtr1707{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1707: int;

struct Vector1707 {
    x: int;
    y: int;
}

func fact_iter1707(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1707(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1707(n-1);
    }
}

const n1707 = 1 + sizeof(p1707);

var p1707: T1707*;

struct T1707 {
    a: int[n1707];
}


func example_test1708(): int {
    return fact_rec1708(10) == fact_iter1708(10);
}

union IntOrPtr1708 {
    i: int;
    p: int*;
}

// func f1708() {
//    u1 := IntOrPtr1708{i = 42};
//    u2 := IntOrPtr1708{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1708: int;

struct Vector1708 {
    x: int;
    y: int;
}

func fact_iter1708(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1708(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1708(n-1);
    }
}

const n1708 = 1 + sizeof(p1708);

var p1708: T1708*;

struct T1708 {
    a: int[n1708];
}


func example_test1709(): int {
    return fact_rec1709(10) == fact_iter1709(10);
}

union IntOrPtr1709 {
    i: int;
    p: int*;
}

// func f1709() {
//    u1 := IntOrPtr1709{i = 42};
//    u2 := IntOrPtr1709{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1709: int;

struct Vector1709 {
    x: int;
    y: int;
}

func fact_iter1709(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1709(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1709(n-1);
    }
}

const n1709 = 1 + sizeof(p1709);

var p1709: T1709*;

struct T1709 {
    a: int[n1709];
}


func example_test1710(): int {
    return fact_rec1710(10) == fact_iter1710(10);
}

union IntOrPtr1710 {
    i: int;
    p: int*;
}

// func f1710() {
//    u1 := IntOrPtr1710{i = 42};
//    u2 := IntOrPtr1710{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1710: int;

struct Vector1710 {
    x: int;
    y: int;
}

func fact_iter1710(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1710(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1710(n-1);
    }
}

const n1710 = 1 + sizeof(p1710);

var p1710: T1710*;

struct T1710 {
    a: int[n1710];
}


func example_test1711(): int {
    return fact_rec1711(10) == fact_iter1711(10);
}

union IntOrPtr1711 {
    i: int;
    p: int*;
}

// func f1711() {
//    u1 := IntOrPtr1711{i = 42};
//    u2 := IntOrPtr1711{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1711: int;

struct Vector1711 {
    x: int;
    y: int;
}

func fact_iter1711(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1711(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1711(n-1);
    }
}

const n1711 = 1 + sizeof(p1711);

var p1711: T1711*;

struct T1711 {
    a: int[n1711];
}


func example_test1712(): int {
    return fact_rec1712(10) == fact_iter1712(10);
}

union IntOrPtr1712 {
    i: int;
    p: int*;
}

// func f1712() {
//    u1 := IntOrPtr1712{i = 42};
//    u2 := IntOrPtr1712{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1712: int;

struct Vector1712 {
    x: int;
    y: int;
}

func fact_iter1712(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1712(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1712(n-1);
    }
}

const n1712 = 1 + sizeof(p1712);

var p1712: T1712*;

struct T1712 {
    a: int[n1712];
}


func example_test1713(): int {
    return fact_rec1713(10) == fact_iter1713(10);
}

union IntOrPtr1713 {
    i: int;
    p: int*;
}

// func f1713() {
//    u1 := IntOrPtr1713{i = 42};
//    u2 := IntOrPtr1713{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1713: int;

struct Vector1713 {
    x: int;
    y: int;
}

func fact_iter1713(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1713(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1713(n-1);
    }
}

const n1713 = 1 + sizeof(p1713);

var p1713: T1713*;

struct T1713 {
    a: int[n1713];
}


func example_test1714(): int {
    return fact_rec1714(10) == fact_iter1714(10);
}

union IntOrPtr1714 {
    i: int;
    p: int*;
}

// func f1714() {
//    u1 := IntOrPtr1714{i = 42};
//    u2 := IntOrPtr1714{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1714: int;

struct Vector1714 {
    x: int;
    y: int;
}

func fact_iter1714(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1714(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1714(n-1);
    }
}

const n1714 = 1 + sizeof(p1714);

var p1714: T1714*;

struct T1714 {
    a: int[n1714];
}


func example_test1715(): int {
    return fact_rec1715(10) == fact_iter1715(10);
}

union IntOrPtr1715 {
    i: int;
    p: int*;
}

// func f1715() {
//    u1 := IntOrPtr1715{i = 42};
//    u2 := IntOrPtr1715{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1715: int;

struct Vector1715 {
    x: int;
    y: int;
}

func fact_iter1715(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1715(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1715(n-1);
    }
}

const n1715 = 1 + sizeof(p1715);

var p1715: T1715*;

struct T1715 {
    a: int[n1715];
}


func example_test1716(): int {
    return fact_rec1716(10) == fact_iter1716(10);
}

union IntOrPtr1716 {
    i: int;
    p: int*;
}

// func f1716() {
//    u1 := IntOrPtr1716{i = 42};
//    u2 := IntOrPtr1716{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1716: int;

struct Vector1716 {
    x: int;
    y: int;
}

func fact_iter1716(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1716(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1716(n-1);
    }
}

const n1716 = 1 + sizeof(p1716);

var p1716: T1716*;

struct T1716 {
    a: int[n1716];
}


func example_test1717(): int {
    return fact_rec1717(10) == fact_iter1717(10);
}

union IntOrPtr1717 {
    i: int;
    p: int*;
}

// func f1717() {
//    u1 := IntOrPtr1717{i = 42};
//    u2 := IntOrPtr1717{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1717: int;

struct Vector1717 {
    x: int;
    y: int;
}

func fact_iter1717(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1717(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1717(n-1);
    }
}

const n1717 = 1 + sizeof(p1717);

var p1717: T1717*;

struct T1717 {
    a: int[n1717];
}


func example_test1718(): int {
    return fact_rec1718(10) == fact_iter1718(10);
}

union IntOrPtr1718 {
    i: int;
    p: int*;
}

// func f1718() {
//    u1 := IntOrPtr1718{i = 42};
//    u2 := IntOrPtr1718{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1718: int;

struct Vector1718 {
    x: int;
    y: int;
}

func fact_iter1718(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1718(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1718(n-1);
    }
}

const n1718 = 1 + sizeof(p1718);

var p1718: T1718*;

struct T1718 {
    a: int[n1718];
}


func example_test1719(): int {
    return fact_rec1719(10) == fact_iter1719(10);
}

union IntOrPtr1719 {
    i: int;
    p: int*;
}

// func f1719() {
//    u1 := IntOrPtr1719{i = 42};
//    u2 := IntOrPtr1719{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1719: int;

struct Vector1719 {
    x: int;
    y: int;
}

func fact_iter1719(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1719(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1719(n-1);
    }
}

const n1719 = 1 + sizeof(p1719);

var p1719: T1719*;

struct T1719 {
    a: int[n1719];
}


func example_test1720(): int {
    return fact_rec1720(10) == fact_iter1720(10);
}

union IntOrPtr1720 {
    i: int;
    p: int*;
}

// func f1720() {
//    u1 := IntOrPtr1720{i = 42};
//    u2 := IntOrPtr1720{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1720: int;

struct Vector1720 {
    x: int;
    y: int;
}

func fact_iter1720(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1720(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1720(n-1);
    }
}

const n1720 = 1 + sizeof(p1720);

var p1720: T1720*;

struct T1720 {
    a: int[n1720];
}


func example_test1721(): int {
    return fact_rec1721(10) == fact_iter1721(10);
}

union IntOrPtr1721 {
    i: int;
    p: int*;
}

// func f1721() {
//    u1 := IntOrPtr1721{i = 42};
//    u2 := IntOrPtr1721{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1721: int;

struct Vector1721 {
    x: int;
    y: int;
}

func fact_iter1721(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1721(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1721(n-1);
    }
}

const n1721 = 1 + sizeof(p1721);

var p1721: T1721*;

struct T1721 {
    a: int[n1721];
}


func example_test1722(): int {
    return fact_rec1722(10) == fact_iter1722(10);
}

union IntOrPtr1722 {
    i: int;
    p: int*;
}

// func f1722() {
//    u1 := IntOrPtr1722{i = 42};
//    u2 := IntOrPtr1722{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1722: int;

struct Vector1722 {
    x: int;
    y: int;
}

func fact_iter1722(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1722(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1722(n-1);
    }
}

const n1722 = 1 + sizeof(p1722);

var p1722: T1722*;

struct T1722 {
    a: int[n1722];
}


func example_test1723(): int {
    return fact_rec1723(10) == fact_iter1723(10);
}

union IntOrPtr1723 {
    i: int;
    p: int*;
}

// func f1723() {
//    u1 := IntOrPtr1723{i = 42};
//    u2 := IntOrPtr1723{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1723: int;

struct Vector1723 {
    x: int;
    y: int;
}

func fact_iter1723(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1723(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1723(n-1);
    }
}

const n1723 = 1 + sizeof(p1723);

var p1723: T1723*;

struct T1723 {
    a: int[n1723];
}


func example_test1724(): int {
    return fact_rec1724(10) == fact_iter1724(10);
}

union IntOrPtr1724 {
    i: int;
    p: int*;
}

// func f1724() {
//    u1 := IntOrPtr1724{i = 42};
//    u2 := IntOrPtr1724{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1724: int;

struct Vector1724 {
    x: int;
    y: int;
}

func fact_iter1724(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1724(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1724(n-1);
    }
}

const n1724 = 1 + sizeof(p1724);

var p1724: T1724*;

struct T1724 {
    a: int[n1724];
}


func example_test1725(): int {
    return fact_rec1725(10) == fact_iter1725(10);
}

union IntOrPtr1725 {
    i: int;
    p: int*;
}

// func f1725() {
//    u1 := IntOrPtr1725{i = 42};
//    u2 := IntOrPtr1725{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1725: int;

struct Vector1725 {
    x: int;
    y: int;
}

func fact_iter1725(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1725(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1725(n-1);
    }
}

const n1725 = 1 + sizeof(p1725);

var p1725: T1725*;

struct T1725 {
    a: int[n1725];
}


func example_test1726(): int {
    return fact_rec1726(10) == fact_iter1726(10);
}

union IntOrPtr1726 {
    i: int;
    p: int*;
}

// func f1726() {
//    u1 := IntOrPtr1726{i = 42};
//    u2 := IntOrPtr1726{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1726: int;

struct Vector1726 {
    x: int;
    y: int;
}

func fact_iter1726(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1726(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1726(n-1);
    }
}

const n1726 = 1 + sizeof(p1726);

var p1726: T1726*;

struct T1726 {
    a: int[n1726];
}


func example_test1727(): int {
    return fact_rec1727(10) == fact_iter1727(10);
}

union IntOrPtr1727 {
    i: int;
    p: int*;
}

// func f1727() {
//    u1 := IntOrPtr1727{i = 42};
//    u2 := IntOrPtr1727{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1727: int;

struct Vector1727 {
    x: int;
    y: int;
}

func fact_iter1727(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1727(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1727(n-1);
    }
}

const n1727 = 1 + sizeof(p1727);

var p1727: T1727*;

struct T1727 {
    a: int[n1727];
}


func example_test1728(): int {
    return fact_rec1728(10) == fact_iter1728(10);
}

union IntOrPtr1728 {
    i: int;
    p: int*;
}

// func f1728() {
//    u1 := IntOrPtr1728{i = 42};
//    u2 := IntOrPtr1728{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1728: int;

struct Vector1728 {
    x: int;
    y: int;
}

func fact_iter1728(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1728(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1728(n-1);
    }
}

const n1728 = 1 + sizeof(p1728);

var p1728: T1728*;

struct T1728 {
    a: int[n1728];
}


func example_test1729(): int {
    return fact_rec1729(10) == fact_iter1729(10);
}

union IntOrPtr1729 {
    i: int;
    p: int*;
}

// func f1729() {
//    u1 := IntOrPtr1729{i = 42};
//    u2 := IntOrPtr1729{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1729: int;

struct Vector1729 {
    x: int;
    y: int;
}

func fact_iter1729(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1729(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1729(n-1);
    }
}

const n1729 = 1 + sizeof(p1729);

var p1729: T1729*;

struct T1729 {
    a: int[n1729];
}


func example_test1730(): int {
    return fact_rec1730(10) == fact_iter1730(10);
}

union IntOrPtr1730 {
    i: int;
    p: int*;
}

// func f1730() {
//    u1 := IntOrPtr1730{i = 42};
//    u2 := IntOrPtr1730{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1730: int;

struct Vector1730 {
    x: int;
    y: int;
}

func fact_iter1730(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1730(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1730(n-1);
    }
}

const n1730 = 1 + sizeof(p1730);

var p1730: T1730*;

struct T1730 {
    a: int[n1730];
}


func example_test1731(): int {
    return fact_rec1731(10) == fact_iter1731(10);
}

union IntOrPtr1731 {
    i: int;
    p: int*;
}

// func f1731() {
//    u1 := IntOrPtr1731{i = 42};
//    u2 := IntOrPtr1731{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1731: int;

struct Vector1731 {
    x: int;
    y: int;
}

func fact_iter1731(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1731(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1731(n-1);
    }
}

const n1731 = 1 + sizeof(p1731);

var p1731: T1731*;

struct T1731 {
    a: int[n1731];
}


func example_test1732(): int {
    return fact_rec1732(10) == fact_iter1732(10);
}

union IntOrPtr1732 {
    i: int;
    p: int*;
}

// func f1732() {
//    u1 := IntOrPtr1732{i = 42};
//    u2 := IntOrPtr1732{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1732: int;

struct Vector1732 {
    x: int;
    y: int;
}

func fact_iter1732(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1732(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1732(n-1);
    }
}

const n1732 = 1 + sizeof(p1732);

var p1732: T1732*;

struct T1732 {
    a: int[n1732];
}


func example_test1733(): int {
    return fact_rec1733(10) == fact_iter1733(10);
}

union IntOrPtr1733 {
    i: int;
    p: int*;
}

// func f1733() {
//    u1 := IntOrPtr1733{i = 42};
//    u2 := IntOrPtr1733{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1733: int;

struct Vector1733 {
    x: int;
    y: int;
}

func fact_iter1733(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1733(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1733(n-1);
    }
}

const n1733 = 1 + sizeof(p1733);

var p1733: T1733*;

struct T1733 {
    a: int[n1733];
}


func example_test1734(): int {
    return fact_rec1734(10) == fact_iter1734(10);
}

union IntOrPtr1734 {
    i: int;
    p: int*;
}

// func f1734() {
//    u1 := IntOrPtr1734{i = 42};
//    u2 := IntOrPtr1734{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1734: int;

struct Vector1734 {
    x: int;
    y: int;
}

func fact_iter1734(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1734(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1734(n-1);
    }
}

const n1734 = 1 + sizeof(p1734);

var p1734: T1734*;

struct T1734 {
    a: int[n1734];
}


func example_test1735(): int {
    return fact_rec1735(10) == fact_iter1735(10);
}

union IntOrPtr1735 {
    i: int;
    p: int*;
}

// func f1735() {
//    u1 := IntOrPtr1735{i = 42};
//    u2 := IntOrPtr1735{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1735: int;

struct Vector1735 {
    x: int;
    y: int;
}

func fact_iter1735(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1735(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1735(n-1);
    }
}

const n1735 = 1 + sizeof(p1735);

var p1735: T1735*;

struct T1735 {
    a: int[n1735];
}


func example_test1736(): int {
    return fact_rec1736(10) == fact_iter1736(10);
}

union IntOrPtr1736 {
    i: int;
    p: int*;
}

// func f1736() {
//    u1 := IntOrPtr1736{i = 42};
//    u2 := IntOrPtr1736{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1736: int;

struct Vector1736 {
    x: int;
    y: int;
}

func fact_iter1736(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1736(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1736(n-1);
    }
}

const n1736 = 1 + sizeof(p1736);

var p1736: T1736*;

struct T1736 {
    a: int[n1736];
}


func example_test1737(): int {
    return fact_rec1737(10) == fact_iter1737(10);
}

union IntOrPtr1737 {
    i: int;
    p: int*;
}

// func f1737() {
//    u1 := IntOrPtr1737{i = 42};
//    u2 := IntOrPtr1737{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1737: int;

struct Vector1737 {
    x: int;
    y: int;
}

func fact_iter1737(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1737(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1737(n-1);
    }
}

const n1737 = 1 + sizeof(p1737);

var p1737: T1737*;

struct T1737 {
    a: int[n1737];
}


func example_test1738(): int {
    return fact_rec1738(10) == fact_iter1738(10);
}

union IntOrPtr1738 {
    i: int;
    p: int*;
}

// func f1738() {
//    u1 := IntOrPtr1738{i = 42};
//    u2 := IntOrPtr1738{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1738: int;

struct Vector1738 {
    x: int;
    y: int;
}

func fact_iter1738(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1738(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1738(n-1);
    }
}

const n1738 = 1 + sizeof(p1738);

var p1738: T1738*;

struct T1738 {
    a: int[n1738];
}


func example_test1739(): int {
    return fact_rec1739(10) == fact_iter1739(10);
}

union IntOrPtr1739 {
    i: int;
    p: int*;
}

// func f1739() {
//    u1 := IntOrPtr1739{i = 42};
//    u2 := IntOrPtr1739{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1739: int;

struct Vector1739 {
    x: int;
    y: int;
}

func fact_iter1739(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1739(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1739(n-1);
    }
}

const n1739 = 1 + sizeof(p1739);

var p1739: T1739*;

struct T1739 {
    a: int[n1739];
}


func example_test1740(): int {
    return fact_rec1740(10) == fact_iter1740(10);
}

union IntOrPtr1740 {
    i: int;
    p: int*;
}

// func f1740() {
//    u1 := IntOrPtr1740{i = 42};
//    u2 := IntOrPtr1740{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1740: int;

struct Vector1740 {
    x: int;
    y: int;
}

func fact_iter1740(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1740(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1740(n-1);
    }
}

const n1740 = 1 + sizeof(p1740);

var p1740: T1740*;

struct T1740 {
    a: int[n1740];
}


func example_test1741(): int {
    return fact_rec1741(10) == fact_iter1741(10);
}

union IntOrPtr1741 {
    i: int;
    p: int*;
}

// func f1741() {
//    u1 := IntOrPtr1741{i = 42};
//    u2 := IntOrPtr1741{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1741: int;

struct Vector1741 {
    x: int;
    y: int;
}

func fact_iter1741(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1741(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1741(n-1);
    }
}

const n1741 = 1 + sizeof(p1741);

var p1741: T1741*;

struct T1741 {
    a: int[n1741];
}


func example_test1742(): int {
    return fact_rec1742(10) == fact_iter1742(10);
}

union IntOrPtr1742 {
    i: int;
    p: int*;
}

// func f1742() {
//    u1 := IntOrPtr1742{i = 42};
//    u2 := IntOrPtr1742{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1742: int;

struct Vector1742 {
    x: int;
    y: int;
}

func fact_iter1742(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1742(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1742(n-1);
    }
}

const n1742 = 1 + sizeof(p1742);

var p1742: T1742*;

struct T1742 {
    a: int[n1742];
}


func example_test1743(): int {
    return fact_rec1743(10) == fact_iter1743(10);
}

union IntOrPtr1743 {
    i: int;
    p: int*;
}

// func f1743() {
//    u1 := IntOrPtr1743{i = 42};
//    u2 := IntOrPtr1743{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1743: int;

struct Vector1743 {
    x: int;
    y: int;
}

func fact_iter1743(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1743(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1743(n-1);
    }
}

const n1743 = 1 + sizeof(p1743);

var p1743: T1743*;

struct T1743 {
    a: int[n1743];
}


func example_test1744(): int {
    return fact_rec1744(10) == fact_iter1744(10);
}

union IntOrPtr1744 {
    i: int;
    p: int*;
}

// func f1744() {
//    u1 := IntOrPtr1744{i = 42};
//    u2 := IntOrPtr1744{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1744: int;

struct Vector1744 {
    x: int;
    y: int;
}

func fact_iter1744(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1744(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1744(n-1);
    }
}

const n1744 = 1 + sizeof(p1744);

var p1744: T1744*;

struct T1744 {
    a: int[n1744];
}


func example_test1745(): int {
    return fact_rec1745(10) == fact_iter1745(10);
}

union IntOrPtr1745 {
    i: int;
    p: int*;
}

// func f1745() {
//    u1 := IntOrPtr1745{i = 42};
//    u2 := IntOrPtr1745{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1745: int;

struct Vector1745 {
    x: int;
    y: int;
}

func fact_iter1745(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1745(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1745(n-1);
    }
}

const n1745 = 1 + sizeof(p1745);

var p1745: T1745*;

struct T1745 {
    a: int[n1745];
}


func example_test1746(): int {
    return fact_rec1746(10) == fact_iter1746(10);
}

union IntOrPtr1746 {
    i: int;
    p: int*;
}

// func f1746() {
//    u1 := IntOrPtr1746{i = 42};
//    u2 := IntOrPtr1746{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1746: int;

struct Vector1746 {
    x: int;
    y: int;
}

func fact_iter1746(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1746(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1746(n-1);
    }
}

const n1746 = 1 + sizeof(p1746);

var p1746: T1746*;

struct T1746 {
    a: int[n1746];
}


func example_test1747(): int {
    return fact_rec1747(10) == fact_iter1747(10);
}

union IntOrPtr1747 {
    i: int;
    p: int*;
}

// func f1747() {
//    u1 := IntOrPtr1747{i = 42};
//    u2 := IntOrPtr1747{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1747: int;

struct Vector1747 {
    x: int;
    y: int;
}

func fact_iter1747(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1747(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1747(n-1);
    }
}

const n1747 = 1 + sizeof(p1747);

var p1747: T1747*;

struct T1747 {
    a: int[n1747];
}


func example_test1748(): int {
    return fact_rec1748(10) == fact_iter1748(10);
}

union IntOrPtr1748 {
    i: int;
    p: int*;
}

// func f1748() {
//    u1 := IntOrPtr1748{i = 42};
//    u2 := IntOrPtr1748{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1748: int;

struct Vector1748 {
    x: int;
    y: int;
}

func fact_iter1748(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1748(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1748(n-1);
    }
}

const n1748 = 1 + sizeof(p1748);

var p1748: T1748*;

struct T1748 {
    a: int[n1748];
}


func example_test1749(): int {
    return fact_rec1749(10) == fact_iter1749(10);
}

union IntOrPtr1749 {
    i: int;
    p: int*;
}

// func f1749() {
//    u1 := IntOrPtr1749{i = 42};
//    u2 := IntOrPtr1749{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1749: int;

struct Vector1749 {
    x: int;
    y: int;
}

func fact_iter1749(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1749(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1749(n-1);
    }
}

const n1749 = 1 + sizeof(p1749);

var p1749: T1749*;

struct T1749 {
    a: int[n1749];
}


func example_test1750(): int {
    return fact_rec1750(10) == fact_iter1750(10);
}

union IntOrPtr1750 {
    i: int;
    p: int*;
}

// func f1750() {
//    u1 := IntOrPtr1750{i = 42};
//    u2 := IntOrPtr1750{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1750: int;

struct Vector1750 {
    x: int;
    y: int;
}

func fact_iter1750(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1750(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1750(n-1);
    }
}

const n1750 = 1 + sizeof(p1750);

var p1750: T1750*;

struct T1750 {
    a: int[n1750];
}


func example_test1751(): int {
    return fact_rec1751(10) == fact_iter1751(10);
}

union IntOrPtr1751 {
    i: int;
    p: int*;
}

// func f1751() {
//    u1 := IntOrPtr1751{i = 42};
//    u2 := IntOrPtr1751{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1751: int;

struct Vector1751 {
    x: int;
    y: int;
}

func fact_iter1751(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1751(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1751(n-1);
    }
}

const n1751 = 1 + sizeof(p1751);

var p1751: T1751*;

struct T1751 {
    a: int[n1751];
}


func example_test1752(): int {
    return fact_rec1752(10) == fact_iter1752(10);
}

union IntOrPtr1752 {
    i: int;
    p: int*;
}

// func f1752() {
//    u1 := IntOrPtr1752{i = 42};
//    u2 := IntOrPtr1752{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1752: int;

struct Vector1752 {
    x: int;
    y: int;
}

func fact_iter1752(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1752(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1752(n-1);
    }
}

const n1752 = 1 + sizeof(p1752);

var p1752: T1752*;

struct T1752 {
    a: int[n1752];
}


func example_test1753(): int {
    return fact_rec1753(10) == fact_iter1753(10);
}

union IntOrPtr1753 {
    i: int;
    p: int*;
}

// func f1753() {
//    u1 := IntOrPtr1753{i = 42};
//    u2 := IntOrPtr1753{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1753: int;

struct Vector1753 {
    x: int;
    y: int;
}

func fact_iter1753(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1753(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1753(n-1);
    }
}

const n1753 = 1 + sizeof(p1753);

var p1753: T1753*;

struct T1753 {
    a: int[n1753];
}


func example_test1754(): int {
    return fact_rec1754(10) == fact_iter1754(10);
}

union IntOrPtr1754 {
    i: int;
    p: int*;
}

// func f1754() {
//    u1 := IntOrPtr1754{i = 42};
//    u2 := IntOrPtr1754{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1754: int;

struct Vector1754 {
    x: int;
    y: int;
}

func fact_iter1754(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1754(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1754(n-1);
    }
}

const n1754 = 1 + sizeof(p1754);

var p1754: T1754*;

struct T1754 {
    a: int[n1754];
}


func example_test1755(): int {
    return fact_rec1755(10) == fact_iter1755(10);
}

union IntOrPtr1755 {
    i: int;
    p: int*;
}

// func f1755() {
//    u1 := IntOrPtr1755{i = 42};
//    u2 := IntOrPtr1755{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1755: int;

struct Vector1755 {
    x: int;
    y: int;
}

func fact_iter1755(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1755(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1755(n-1);
    }
}

const n1755 = 1 + sizeof(p1755);

var p1755: T1755*;

struct T1755 {
    a: int[n1755];
}


func example_test1756(): int {
    return fact_rec1756(10) == fact_iter1756(10);
}

union IntOrPtr1756 {
    i: int;
    p: int*;
}

// func f1756() {
//    u1 := IntOrPtr1756{i = 42};
//    u2 := IntOrPtr1756{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1756: int;

struct Vector1756 {
    x: int;
    y: int;
}

func fact_iter1756(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1756(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1756(n-1);
    }
}

const n1756 = 1 + sizeof(p1756);

var p1756: T1756*;

struct T1756 {
    a: int[n1756];
}


func example_test1757(): int {
    return fact_rec1757(10) == fact_iter1757(10);
}

union IntOrPtr1757 {
    i: int;
    p: int*;
}

// func f1757() {
//    u1 := IntOrPtr1757{i = 42};
//    u2 := IntOrPtr1757{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1757: int;

struct Vector1757 {
    x: int;
    y: int;
}

func fact_iter1757(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1757(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1757(n-1);
    }
}

const n1757 = 1 + sizeof(p1757);

var p1757: T1757*;

struct T1757 {
    a: int[n1757];
}


func example_test1758(): int {
    return fact_rec1758(10) == fact_iter1758(10);
}

union IntOrPtr1758 {
    i: int;
    p: int*;
}

// func f1758() {
//    u1 := IntOrPtr1758{i = 42};
//    u2 := IntOrPtr1758{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1758: int;

struct Vector1758 {
    x: int;
    y: int;
}

func fact_iter1758(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1758(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1758(n-1);
    }
}

const n1758 = 1 + sizeof(p1758);

var p1758: T1758*;

struct T1758 {
    a: int[n1758];
}


func example_test1759(): int {
    return fact_rec1759(10) == fact_iter1759(10);
}

union IntOrPtr1759 {
    i: int;
    p: int*;
}

// func f1759() {
//    u1 := IntOrPtr1759{i = 42};
//    u2 := IntOrPtr1759{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1759: int;

struct Vector1759 {
    x: int;
    y: int;
}

func fact_iter1759(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1759(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1759(n-1);
    }
}

const n1759 = 1 + sizeof(p1759);

var p1759: T1759*;

struct T1759 {
    a: int[n1759];
}


func example_test1760(): int {
    return fact_rec1760(10) == fact_iter1760(10);
}

union IntOrPtr1760 {
    i: int;
    p: int*;
}

// func f1760() {
//    u1 := IntOrPtr1760{i = 42};
//    u2 := IntOrPtr1760{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1760: int;

struct Vector1760 {
    x: int;
    y: int;
}

func fact_iter1760(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1760(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1760(n-1);
    }
}

const n1760 = 1 + sizeof(p1760);

var p1760: T1760*;

struct T1760 {
    a: int[n1760];
}


func example_test1761(): int {
    return fact_rec1761(10) == fact_iter1761(10);
}

union IntOrPtr1761 {
    i: int;
    p: int*;
}

// func f1761() {
//    u1 := IntOrPtr1761{i = 42};
//    u2 := IntOrPtr1761{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1761: int;

struct Vector1761 {
    x: int;
    y: int;
}

func fact_iter1761(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1761(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1761(n-1);
    }
}

const n1761 = 1 + sizeof(p1761);

var p1761: T1761*;

struct T1761 {
    a: int[n1761];
}


func example_test1762(): int {
    return fact_rec1762(10) == fact_iter1762(10);
}

union IntOrPtr1762 {
    i: int;
    p: int*;
}

// func f1762() {
//    u1 := IntOrPtr1762{i = 42};
//    u2 := IntOrPtr1762{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1762: int;

struct Vector1762 {
    x: int;
    y: int;
}

func fact_iter1762(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1762(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1762(n-1);
    }
}

const n1762 = 1 + sizeof(p1762);

var p1762: T1762*;

struct T1762 {
    a: int[n1762];
}


func example_test1763(): int {
    return fact_rec1763(10) == fact_iter1763(10);
}

union IntOrPtr1763 {
    i: int;
    p: int*;
}

// func f1763() {
//    u1 := IntOrPtr1763{i = 42};
//    u2 := IntOrPtr1763{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1763: int;

struct Vector1763 {
    x: int;
    y: int;
}

func fact_iter1763(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1763(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1763(n-1);
    }
}

const n1763 = 1 + sizeof(p1763);

var p1763: T1763*;

struct T1763 {
    a: int[n1763];
}


func example_test1764(): int {
    return fact_rec1764(10) == fact_iter1764(10);
}

union IntOrPtr1764 {
    i: int;
    p: int*;
}

// func f1764() {
//    u1 := IntOrPtr1764{i = 42};
//    u2 := IntOrPtr1764{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1764: int;

struct Vector1764 {
    x: int;
    y: int;
}

func fact_iter1764(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1764(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1764(n-1);
    }
}

const n1764 = 1 + sizeof(p1764);

var p1764: T1764*;

struct T1764 {
    a: int[n1764];
}


func example_test1765(): int {
    return fact_rec1765(10) == fact_iter1765(10);
}

union IntOrPtr1765 {
    i: int;
    p: int*;
}

// func f1765() {
//    u1 := IntOrPtr1765{i = 42};
//    u2 := IntOrPtr1765{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1765: int;

struct Vector1765 {
    x: int;
    y: int;
}

func fact_iter1765(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1765(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1765(n-1);
    }
}

const n1765 = 1 + sizeof(p1765);

var p1765: T1765*;

struct T1765 {
    a: int[n1765];
}


func example_test1766(): int {
    return fact_rec1766(10) == fact_iter1766(10);
}

union IntOrPtr1766 {
    i: int;
    p: int*;
}

// func f1766() {
//    u1 := IntOrPtr1766{i = 42};
//    u2 := IntOrPtr1766{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1766: int;

struct Vector1766 {
    x: int;
    y: int;
}

func fact_iter1766(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1766(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1766(n-1);
    }
}

const n1766 = 1 + sizeof(p1766);

var p1766: T1766*;

struct T1766 {
    a: int[n1766];
}


func example_test1767(): int {
    return fact_rec1767(10) == fact_iter1767(10);
}

union IntOrPtr1767 {
    i: int;
    p: int*;
}

// func f1767() {
//    u1 := IntOrPtr1767{i = 42};
//    u2 := IntOrPtr1767{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1767: int;

struct Vector1767 {
    x: int;
    y: int;
}

func fact_iter1767(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1767(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1767(n-1);
    }
}

const n1767 = 1 + sizeof(p1767);

var p1767: T1767*;

struct T1767 {
    a: int[n1767];
}


func example_test1768(): int {
    return fact_rec1768(10) == fact_iter1768(10);
}

union IntOrPtr1768 {
    i: int;
    p: int*;
}

// func f1768() {
//    u1 := IntOrPtr1768{i = 42};
//    u2 := IntOrPtr1768{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1768: int;

struct Vector1768 {
    x: int;
    y: int;
}

func fact_iter1768(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1768(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1768(n-1);
    }
}

const n1768 = 1 + sizeof(p1768);

var p1768: T1768*;

struct T1768 {
    a: int[n1768];
}


func example_test1769(): int {
    return fact_rec1769(10) == fact_iter1769(10);
}

union IntOrPtr1769 {
    i: int;
    p: int*;
}

// func f1769() {
//    u1 := IntOrPtr1769{i = 42};
//    u2 := IntOrPtr1769{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1769: int;

struct Vector1769 {
    x: int;
    y: int;
}

func fact_iter1769(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1769(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1769(n-1);
    }
}

const n1769 = 1 + sizeof(p1769);

var p1769: T1769*;

struct T1769 {
    a: int[n1769];
}


func example_test1770(): int {
    return fact_rec1770(10) == fact_iter1770(10);
}

union IntOrPtr1770 {
    i: int;
    p: int*;
}

// func f1770() {
//    u1 := IntOrPtr1770{i = 42};
//    u2 := IntOrPtr1770{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1770: int;

struct Vector1770 {
    x: int;
    y: int;
}

func fact_iter1770(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1770(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1770(n-1);
    }
}

const n1770 = 1 + sizeof(p1770);

var p1770: T1770*;

struct T1770 {
    a: int[n1770];
}


func example_test1771(): int {
    return fact_rec1771(10) == fact_iter1771(10);
}

union IntOrPtr1771 {
    i: int;
    p: int*;
}

// func f1771() {
//    u1 := IntOrPtr1771{i = 42};
//    u2 := IntOrPtr1771{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1771: int;

struct Vector1771 {
    x: int;
    y: int;
}

func fact_iter1771(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1771(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1771(n-1);
    }
}

const n1771 = 1 + sizeof(p1771);

var p1771: T1771*;

struct T1771 {
    a: int[n1771];
}


func example_test1772(): int {
    return fact_rec1772(10) == fact_iter1772(10);
}

union IntOrPtr1772 {
    i: int;
    p: int*;
}

// func f1772() {
//    u1 := IntOrPtr1772{i = 42};
//    u2 := IntOrPtr1772{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1772: int;

struct Vector1772 {
    x: int;
    y: int;
}

func fact_iter1772(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1772(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1772(n-1);
    }
}

const n1772 = 1 + sizeof(p1772);

var p1772: T1772*;

struct T1772 {
    a: int[n1772];
}


func example_test1773(): int {
    return fact_rec1773(10) == fact_iter1773(10);
}

union IntOrPtr1773 {
    i: int;
    p: int*;
}

// func f1773() {
//    u1 := IntOrPtr1773{i = 42};
//    u2 := IntOrPtr1773{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1773: int;

struct Vector1773 {
    x: int;
    y: int;
}

func fact_iter1773(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1773(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1773(n-1);
    }
}

const n1773 = 1 + sizeof(p1773);

var p1773: T1773*;

struct T1773 {
    a: int[n1773];
}


func example_test1774(): int {
    return fact_rec1774(10) == fact_iter1774(10);
}

union IntOrPtr1774 {
    i: int;
    p: int*;
}

// func f1774() {
//    u1 := IntOrPtr1774{i = 42};
//    u2 := IntOrPtr1774{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1774: int;

struct Vector1774 {
    x: int;
    y: int;
}

func fact_iter1774(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1774(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1774(n-1);
    }
}

const n1774 = 1 + sizeof(p1774);

var p1774: T1774*;

struct T1774 {
    a: int[n1774];
}


func example_test1775(): int {
    return fact_rec1775(10) == fact_iter1775(10);
}

union IntOrPtr1775 {
    i: int;
    p: int*;
}

// func f1775() {
//    u1 := IntOrPtr1775{i = 42};
//    u2 := IntOrPtr1775{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1775: int;

struct Vector1775 {
    x: int;
    y: int;
}

func fact_iter1775(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1775(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1775(n-1);
    }
}

const n1775 = 1 + sizeof(p1775);

var p1775: T1775*;

struct T1775 {
    a: int[n1775];
}


func example_test1776(): int {
    return fact_rec1776(10) == fact_iter1776(10);
}

union IntOrPtr1776 {
    i: int;
    p: int*;
}

// func f1776() {
//    u1 := IntOrPtr1776{i = 42};
//    u2 := IntOrPtr1776{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1776: int;

struct Vector1776 {
    x: int;
    y: int;
}

func fact_iter1776(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1776(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1776(n-1);
    }
}

const n1776 = 1 + sizeof(p1776);

var p1776: T1776*;

struct T1776 {
    a: int[n1776];
}


func example_test1777(): int {
    return fact_rec1777(10) == fact_iter1777(10);
}

union IntOrPtr1777 {
    i: int;
    p: int*;
}

// func f1777() {
//    u1 := IntOrPtr1777{i = 42};
//    u2 := IntOrPtr1777{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1777: int;

struct Vector1777 {
    x: int;
    y: int;
}

func fact_iter1777(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1777(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1777(n-1);
    }
}

const n1777 = 1 + sizeof(p1777);

var p1777: T1777*;

struct T1777 {
    a: int[n1777];
}


func example_test1778(): int {
    return fact_rec1778(10) == fact_iter1778(10);
}

union IntOrPtr1778 {
    i: int;
    p: int*;
}

// func f1778() {
//    u1 := IntOrPtr1778{i = 42};
//    u2 := IntOrPtr1778{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1778: int;

struct Vector1778 {
    x: int;
    y: int;
}

func fact_iter1778(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1778(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1778(n-1);
    }
}

const n1778 = 1 + sizeof(p1778);

var p1778: T1778*;

struct T1778 {
    a: int[n1778];
}


func example_test1779(): int {
    return fact_rec1779(10) == fact_iter1779(10);
}

union IntOrPtr1779 {
    i: int;
    p: int*;
}

// func f1779() {
//    u1 := IntOrPtr1779{i = 42};
//    u2 := IntOrPtr1779{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1779: int;

struct Vector1779 {
    x: int;
    y: int;
}

func fact_iter1779(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1779(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1779(n-1);
    }
}

const n1779 = 1 + sizeof(p1779);

var p1779: T1779*;

struct T1779 {
    a: int[n1779];
}


func example_test1780(): int {
    return fact_rec1780(10) == fact_iter1780(10);
}

union IntOrPtr1780 {
    i: int;
    p: int*;
}

// func f1780() {
//    u1 := IntOrPtr1780{i = 42};
//    u2 := IntOrPtr1780{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1780: int;

struct Vector1780 {
    x: int;
    y: int;
}

func fact_iter1780(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1780(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1780(n-1);
    }
}

const n1780 = 1 + sizeof(p1780);

var p1780: T1780*;

struct T1780 {
    a: int[n1780];
}


func example_test1781(): int {
    return fact_rec1781(10) == fact_iter1781(10);
}

union IntOrPtr1781 {
    i: int;
    p: int*;
}

// func f1781() {
//    u1 := IntOrPtr1781{i = 42};
//    u2 := IntOrPtr1781{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1781: int;

struct Vector1781 {
    x: int;
    y: int;
}

func fact_iter1781(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1781(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1781(n-1);
    }
}

const n1781 = 1 + sizeof(p1781);

var p1781: T1781*;

struct T1781 {
    a: int[n1781];
}


func example_test1782(): int {
    return fact_rec1782(10) == fact_iter1782(10);
}

union IntOrPtr1782 {
    i: int;
    p: int*;
}

// func f1782() {
//    u1 := IntOrPtr1782{i = 42};
//    u2 := IntOrPtr1782{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1782: int;

struct Vector1782 {
    x: int;
    y: int;
}

func fact_iter1782(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1782(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1782(n-1);
    }
}

const n1782 = 1 + sizeof(p1782);

var p1782: T1782*;

struct T1782 {
    a: int[n1782];
}


func example_test1783(): int {
    return fact_rec1783(10) == fact_iter1783(10);
}

union IntOrPtr1783 {
    i: int;
    p: int*;
}

// func f1783() {
//    u1 := IntOrPtr1783{i = 42};
//    u2 := IntOrPtr1783{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1783: int;

struct Vector1783 {
    x: int;
    y: int;
}

func fact_iter1783(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1783(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1783(n-1);
    }
}

const n1783 = 1 + sizeof(p1783);

var p1783: T1783*;

struct T1783 {
    a: int[n1783];
}


func example_test1784(): int {
    return fact_rec1784(10) == fact_iter1784(10);
}

union IntOrPtr1784 {
    i: int;
    p: int*;
}

// func f1784() {
//    u1 := IntOrPtr1784{i = 42};
//    u2 := IntOrPtr1784{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1784: int;

struct Vector1784 {
    x: int;
    y: int;
}

func fact_iter1784(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1784(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1784(n-1);
    }
}

const n1784 = 1 + sizeof(p1784);

var p1784: T1784*;

struct T1784 {
    a: int[n1784];
}


func example_test1785(): int {
    return fact_rec1785(10) == fact_iter1785(10);
}

union IntOrPtr1785 {
    i: int;
    p: int*;
}

// func f1785() {
//    u1 := IntOrPtr1785{i = 42};
//    u2 := IntOrPtr1785{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1785: int;

struct Vector1785 {
    x: int;
    y: int;
}

func fact_iter1785(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1785(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1785(n-1);
    }
}

const n1785 = 1 + sizeof(p1785);

var p1785: T1785*;

struct T1785 {
    a: int[n1785];
}


func example_test1786(): int {
    return fact_rec1786(10) == fact_iter1786(10);
}

union IntOrPtr1786 {
    i: int;
    p: int*;
}

// func f1786() {
//    u1 := IntOrPtr1786{i = 42};
//    u2 := IntOrPtr1786{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1786: int;

struct Vector1786 {
    x: int;
    y: int;
}

func fact_iter1786(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1786(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1786(n-1);
    }
}

const n1786 = 1 + sizeof(p1786);

var p1786: T1786*;

struct T1786 {
    a: int[n1786];
}


func example_test1787(): int {
    return fact_rec1787(10) == fact_iter1787(10);
}

union IntOrPtr1787 {
    i: int;
    p: int*;
}

// func f1787() {
//    u1 := IntOrPtr1787{i = 42};
//    u2 := IntOrPtr1787{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1787: int;

struct Vector1787 {
    x: int;
    y: int;
}

func fact_iter1787(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1787(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1787(n-1);
    }
}

const n1787 = 1 + sizeof(p1787);

var p1787: T1787*;

struct T1787 {
    a: int[n1787];
}


func example_test1788(): int {
    return fact_rec1788(10) == fact_iter1788(10);
}

union IntOrPtr1788 {
    i: int;
    p: int*;
}

// func f1788() {
//    u1 := IntOrPtr1788{i = 42};
//    u2 := IntOrPtr1788{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1788: int;

struct Vector1788 {
    x: int;
    y: int;
}

func fact_iter1788(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1788(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1788(n-1);
    }
}

const n1788 = 1 + sizeof(p1788);

var p1788: T1788*;

struct T1788 {
    a: int[n1788];
}


func example_test1789(): int {
    return fact_rec1789(10) == fact_iter1789(10);
}

union IntOrPtr1789 {
    i: int;
    p: int*;
}

// func f1789() {
//    u1 := IntOrPtr1789{i = 42};
//    u2 := IntOrPtr1789{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1789: int;

struct Vector1789 {
    x: int;
    y: int;
}

func fact_iter1789(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1789(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1789(n-1);
    }
}

const n1789 = 1 + sizeof(p1789);

var p1789: T1789*;

struct T1789 {
    a: int[n1789];
}


func example_test1790(): int {
    return fact_rec1790(10) == fact_iter1790(10);
}

union IntOrPtr1790 {
    i: int;
    p: int*;
}

// func f1790() {
//    u1 := IntOrPtr1790{i = 42};
//    u2 := IntOrPtr1790{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1790: int;

struct Vector1790 {
    x: int;
    y: int;
}

func fact_iter1790(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1790(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1790(n-1);
    }
}

const n1790 = 1 + sizeof(p1790);

var p1790: T1790*;

struct T1790 {
    a: int[n1790];
}


func example_test1791(): int {
    return fact_rec1791(10) == fact_iter1791(10);
}

union IntOrPtr1791 {
    i: int;
    p: int*;
}

// func f1791() {
//    u1 := IntOrPtr1791{i = 42};
//    u2 := IntOrPtr1791{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1791: int;

struct Vector1791 {
    x: int;
    y: int;
}

func fact_iter1791(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1791(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1791(n-1);
    }
}

const n1791 = 1 + sizeof(p1791);

var p1791: T1791*;

struct T1791 {
    a: int[n1791];
}


func example_test1792(): int {
    return fact_rec1792(10) == fact_iter1792(10);
}

union IntOrPtr1792 {
    i: int;
    p: int*;
}

// func f1792() {
//    u1 := IntOrPtr1792{i = 42};
//    u2 := IntOrPtr1792{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1792: int;

struct Vector1792 {
    x: int;
    y: int;
}

func fact_iter1792(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1792(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1792(n-1);
    }
}

const n1792 = 1 + sizeof(p1792);

var p1792: T1792*;

struct T1792 {
    a: int[n1792];
}


func example_test1793(): int {
    return fact_rec1793(10) == fact_iter1793(10);
}

union IntOrPtr1793 {
    i: int;
    p: int*;
}

// func f1793() {
//    u1 := IntOrPtr1793{i = 42};
//    u2 := IntOrPtr1793{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1793: int;

struct Vector1793 {
    x: int;
    y: int;
}

func fact_iter1793(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1793(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1793(n-1);
    }
}

const n1793 = 1 + sizeof(p1793);

var p1793: T1793*;

struct T1793 {
    a: int[n1793];
}


func example_test1794(): int {
    return fact_rec1794(10) == fact_iter1794(10);
}

union IntOrPtr1794 {
    i: int;
    p: int*;
}

// func f1794() {
//    u1 := IntOrPtr1794{i = 42};
//    u2 := IntOrPtr1794{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1794: int;

struct Vector1794 {
    x: int;
    y: int;
}

func fact_iter1794(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1794(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1794(n-1);
    }
}

const n1794 = 1 + sizeof(p1794);

var p1794: T1794*;

struct T1794 {
    a: int[n1794];
}


func example_test1795(): int {
    return fact_rec1795(10) == fact_iter1795(10);
}

union IntOrPtr1795 {
    i: int;
    p: int*;
}

// func f1795() {
//    u1 := IntOrPtr1795{i = 42};
//    u2 := IntOrPtr1795{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1795: int;

struct Vector1795 {
    x: int;
    y: int;
}

func fact_iter1795(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1795(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1795(n-1);
    }
}

const n1795 = 1 + sizeof(p1795);

var p1795: T1795*;

struct T1795 {
    a: int[n1795];
}


func example_test1796(): int {
    return fact_rec1796(10) == fact_iter1796(10);
}

union IntOrPtr1796 {
    i: int;
    p: int*;
}

// func f1796() {
//    u1 := IntOrPtr1796{i = 42};
//    u2 := IntOrPtr1796{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1796: int;

struct Vector1796 {
    x: int;
    y: int;
}

func fact_iter1796(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1796(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1796(n-1);
    }
}

const n1796 = 1 + sizeof(p1796);

var p1796: T1796*;

struct T1796 {
    a: int[n1796];
}


func example_test1797(): int {
    return fact_rec1797(10) == fact_iter1797(10);
}

union IntOrPtr1797 {
    i: int;
    p: int*;
}

// func f1797() {
//    u1 := IntOrPtr1797{i = 42};
//    u2 := IntOrPtr1797{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1797: int;

struct Vector1797 {
    x: int;
    y: int;
}

func fact_iter1797(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1797(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1797(n-1);
    }
}

const n1797 = 1 + sizeof(p1797);

var p1797: T1797*;

struct T1797 {
    a: int[n1797];
}


func example_test1798(): int {
    return fact_rec1798(10) == fact_iter1798(10);
}

union IntOrPtr1798 {
    i: int;
    p: int*;
}

// func f1798() {
//    u1 := IntOrPtr1798{i = 42};
//    u2 := IntOrPtr1798{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1798: int;

struct Vector1798 {
    x: int;
    y: int;
}

func fact_iter1798(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1798(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1798(n-1);
    }
}

const n1798 = 1 + sizeof(p1798);

var p1798: T1798*;

struct T1798 {
    a: int[n1798];
}


func example_test1799(): int {
    return fact_rec1799(10) == fact_iter1799(10);
}

union IntOrPtr1799 {
    i: int;
    p: int*;
}

// func f1799() {
//    u1 := IntOrPtr1799{i = 42};
//    u2 := IntOrPtr1799{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1799: int;

struct Vector1799 {
    x: int;
    y: int;
}

func fact_iter1799(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1799(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1799(n-1);
    }
}

const n1799 = 1 + sizeof(p1799);

var p1799: T1799*;

struct T1799 {
    a: int[n1799];
}


func example_test1800(): int {
    return fact_rec1800(10) == fact_iter1800(10);
}

union IntOrPtr1800 {
    i: int;
    p: int*;
}

// func f1800() {
//    u1 := IntOrPtr1800{i = 42};
//    u2 := IntOrPtr1800{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1800: int;

struct Vector1800 {
    x: int;
    y: int;
}

func fact_iter1800(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1800(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1800(n-1);
    }
}

const n1800 = 1 + sizeof(p1800);

var p1800: T1800*;

struct T1800 {
    a: int[n1800];
}


func example_test1801(): int {
    return fact_rec1801(10) == fact_iter1801(10);
}

union IntOrPtr1801 {
    i: int;
    p: int*;
}

// func f1801() {
//    u1 := IntOrPtr1801{i = 42};
//    u2 := IntOrPtr1801{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1801: int;

struct Vector1801 {
    x: int;
    y: int;
}

func fact_iter1801(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1801(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1801(n-1);
    }
}

const n1801 = 1 + sizeof(p1801);

var p1801: T1801*;

struct T1801 {
    a: int[n1801];
}


func example_test1802(): int {
    return fact_rec1802(10) == fact_iter1802(10);
}

union IntOrPtr1802 {
    i: int;
    p: int*;
}

// func f1802() {
//    u1 := IntOrPtr1802{i = 42};
//    u2 := IntOrPtr1802{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1802: int;

struct Vector1802 {
    x: int;
    y: int;
}

func fact_iter1802(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1802(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1802(n-1);
    }
}

const n1802 = 1 + sizeof(p1802);

var p1802: T1802*;

struct T1802 {
    a: int[n1802];
}


func example_test1803(): int {
    return fact_rec1803(10) == fact_iter1803(10);
}

union IntOrPtr1803 {
    i: int;
    p: int*;
}

// func f1803() {
//    u1 := IntOrPtr1803{i = 42};
//    u2 := IntOrPtr1803{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1803: int;

struct Vector1803 {
    x: int;
    y: int;
}

func fact_iter1803(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1803(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1803(n-1);
    }
}

const n1803 = 1 + sizeof(p1803);

var p1803: T1803*;

struct T1803 {
    a: int[n1803];
}


func example_test1804(): int {
    return fact_rec1804(10) == fact_iter1804(10);
}

union IntOrPtr1804 {
    i: int;
    p: int*;
}

// func f1804() {
//    u1 := IntOrPtr1804{i = 42};
//    u2 := IntOrPtr1804{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1804: int;

struct Vector1804 {
    x: int;
    y: int;
}

func fact_iter1804(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1804(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1804(n-1);
    }
}

const n1804 = 1 + sizeof(p1804);

var p1804: T1804*;

struct T1804 {
    a: int[n1804];
}


func example_test1805(): int {
    return fact_rec1805(10) == fact_iter1805(10);
}

union IntOrPtr1805 {
    i: int;
    p: int*;
}

// func f1805() {
//    u1 := IntOrPtr1805{i = 42};
//    u2 := IntOrPtr1805{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1805: int;

struct Vector1805 {
    x: int;
    y: int;
}

func fact_iter1805(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1805(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1805(n-1);
    }
}

const n1805 = 1 + sizeof(p1805);

var p1805: T1805*;

struct T1805 {
    a: int[n1805];
}


func example_test1806(): int {
    return fact_rec1806(10) == fact_iter1806(10);
}

union IntOrPtr1806 {
    i: int;
    p: int*;
}

// func f1806() {
//    u1 := IntOrPtr1806{i = 42};
//    u2 := IntOrPtr1806{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1806: int;

struct Vector1806 {
    x: int;
    y: int;
}

func fact_iter1806(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1806(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1806(n-1);
    }
}

const n1806 = 1 + sizeof(p1806);

var p1806: T1806*;

struct T1806 {
    a: int[n1806];
}


func example_test1807(): int {
    return fact_rec1807(10) == fact_iter1807(10);
}

union IntOrPtr1807 {
    i: int;
    p: int*;
}

// func f1807() {
//    u1 := IntOrPtr1807{i = 42};
//    u2 := IntOrPtr1807{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1807: int;

struct Vector1807 {
    x: int;
    y: int;
}

func fact_iter1807(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1807(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1807(n-1);
    }
}

const n1807 = 1 + sizeof(p1807);

var p1807: T1807*;

struct T1807 {
    a: int[n1807];
}


func example_test1808(): int {
    return fact_rec1808(10) == fact_iter1808(10);
}

union IntOrPtr1808 {
    i: int;
    p: int*;
}

// func f1808() {
//    u1 := IntOrPtr1808{i = 42};
//    u2 := IntOrPtr1808{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1808: int;

struct Vector1808 {
    x: int;
    y: int;
}

func fact_iter1808(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1808(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1808(n-1);
    }
}

const n1808 = 1 + sizeof(p1808);

var p1808: T1808*;

struct T1808 {
    a: int[n1808];
}


func example_test1809(): int {
    return fact_rec1809(10) == fact_iter1809(10);
}

union IntOrPtr1809 {
    i: int;
    p: int*;
}

// func f1809() {
//    u1 := IntOrPtr1809{i = 42};
//    u2 := IntOrPtr1809{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1809: int;

struct Vector1809 {
    x: int;
    y: int;
}

func fact_iter1809(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1809(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1809(n-1);
    }
}

const n1809 = 1 + sizeof(p1809);

var p1809: T1809*;

struct T1809 {
    a: int[n1809];
}


func example_test1810(): int {
    return fact_rec1810(10) == fact_iter1810(10);
}

union IntOrPtr1810 {
    i: int;
    p: int*;
}

// func f1810() {
//    u1 := IntOrPtr1810{i = 42};
//    u2 := IntOrPtr1810{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1810: int;

struct Vector1810 {
    x: int;
    y: int;
}

func fact_iter1810(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1810(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1810(n-1);
    }
}

const n1810 = 1 + sizeof(p1810);

var p1810: T1810*;

struct T1810 {
    a: int[n1810];
}


func example_test1811(): int {
    return fact_rec1811(10) == fact_iter1811(10);
}

union IntOrPtr1811 {
    i: int;
    p: int*;
}

// func f1811() {
//    u1 := IntOrPtr1811{i = 42};
//    u2 := IntOrPtr1811{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1811: int;

struct Vector1811 {
    x: int;
    y: int;
}

func fact_iter1811(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1811(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1811(n-1);
    }
}

const n1811 = 1 + sizeof(p1811);

var p1811: T1811*;

struct T1811 {
    a: int[n1811];
}


func example_test1812(): int {
    return fact_rec1812(10) == fact_iter1812(10);
}

union IntOrPtr1812 {
    i: int;
    p: int*;
}

// func f1812() {
//    u1 := IntOrPtr1812{i = 42};
//    u2 := IntOrPtr1812{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1812: int;

struct Vector1812 {
    x: int;
    y: int;
}

func fact_iter1812(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1812(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1812(n-1);
    }
}

const n1812 = 1 + sizeof(p1812);

var p1812: T1812*;

struct T1812 {
    a: int[n1812];
}


func example_test1813(): int {
    return fact_rec1813(10) == fact_iter1813(10);
}

union IntOrPtr1813 {
    i: int;
    p: int*;
}

// func f1813() {
//    u1 := IntOrPtr1813{i = 42};
//    u2 := IntOrPtr1813{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1813: int;

struct Vector1813 {
    x: int;
    y: int;
}

func fact_iter1813(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1813(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1813(n-1);
    }
}

const n1813 = 1 + sizeof(p1813);

var p1813: T1813*;

struct T1813 {
    a: int[n1813];
}


func example_test1814(): int {
    return fact_rec1814(10) == fact_iter1814(10);
}

union IntOrPtr1814 {
    i: int;
    p: int*;
}

// func f1814() {
//    u1 := IntOrPtr1814{i = 42};
//    u2 := IntOrPtr1814{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1814: int;

struct Vector1814 {
    x: int;
    y: int;
}

func fact_iter1814(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1814(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1814(n-1);
    }
}

const n1814 = 1 + sizeof(p1814);

var p1814: T1814*;

struct T1814 {
    a: int[n1814];
}


func example_test1815(): int {
    return fact_rec1815(10) == fact_iter1815(10);
}

union IntOrPtr1815 {
    i: int;
    p: int*;
}

// func f1815() {
//    u1 := IntOrPtr1815{i = 42};
//    u2 := IntOrPtr1815{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1815: int;

struct Vector1815 {
    x: int;
    y: int;
}

func fact_iter1815(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1815(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1815(n-1);
    }
}

const n1815 = 1 + sizeof(p1815);

var p1815: T1815*;

struct T1815 {
    a: int[n1815];
}


func example_test1816(): int {
    return fact_rec1816(10) == fact_iter1816(10);
}

union IntOrPtr1816 {
    i: int;
    p: int*;
}

// func f1816() {
//    u1 := IntOrPtr1816{i = 42};
//    u2 := IntOrPtr1816{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1816: int;

struct Vector1816 {
    x: int;
    y: int;
}

func fact_iter1816(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1816(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1816(n-1);
    }
}

const n1816 = 1 + sizeof(p1816);

var p1816: T1816*;

struct T1816 {
    a: int[n1816];
}


func example_test1817(): int {
    return fact_rec1817(10) == fact_iter1817(10);
}

union IntOrPtr1817 {
    i: int;
    p: int*;
}

// func f1817() {
//    u1 := IntOrPtr1817{i = 42};
//    u2 := IntOrPtr1817{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1817: int;

struct Vector1817 {
    x: int;
    y: int;
}

func fact_iter1817(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1817(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1817(n-1);
    }
}

const n1817 = 1 + sizeof(p1817);

var p1817: T1817*;

struct T1817 {
    a: int[n1817];
}


func example_test1818(): int {
    return fact_rec1818(10) == fact_iter1818(10);
}

union IntOrPtr1818 {
    i: int;
    p: int*;
}

// func f1818() {
//    u1 := IntOrPtr1818{i = 42};
//    u2 := IntOrPtr1818{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1818: int;

struct Vector1818 {
    x: int;
    y: int;
}

func fact_iter1818(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1818(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1818(n-1);
    }
}

const n1818 = 1 + sizeof(p1818);

var p1818: T1818*;

struct T1818 {
    a: int[n1818];
}


func example_test1819(): int {
    return fact_rec1819(10) == fact_iter1819(10);
}

union IntOrPtr1819 {
    i: int;
    p: int*;
}

// func f1819() {
//    u1 := IntOrPtr1819{i = 42};
//    u2 := IntOrPtr1819{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1819: int;

struct Vector1819 {
    x: int;
    y: int;
}

func fact_iter1819(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1819(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1819(n-1);
    }
}

const n1819 = 1 + sizeof(p1819);

var p1819: T1819*;

struct T1819 {
    a: int[n1819];
}


func example_test1820(): int {
    return fact_rec1820(10) == fact_iter1820(10);
}

union IntOrPtr1820 {
    i: int;
    p: int*;
}

// func f1820() {
//    u1 := IntOrPtr1820{i = 42};
//    u2 := IntOrPtr1820{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1820: int;

struct Vector1820 {
    x: int;
    y: int;
}

func fact_iter1820(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1820(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1820(n-1);
    }
}

const n1820 = 1 + sizeof(p1820);

var p1820: T1820*;

struct T1820 {
    a: int[n1820];
}


func example_test1821(): int {
    return fact_rec1821(10) == fact_iter1821(10);
}

union IntOrPtr1821 {
    i: int;
    p: int*;
}

// func f1821() {
//    u1 := IntOrPtr1821{i = 42};
//    u2 := IntOrPtr1821{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1821: int;

struct Vector1821 {
    x: int;
    y: int;
}

func fact_iter1821(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1821(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1821(n-1);
    }
}

const n1821 = 1 + sizeof(p1821);

var p1821: T1821*;

struct T1821 {
    a: int[n1821];
}


func example_test1822(): int {
    return fact_rec1822(10) == fact_iter1822(10);
}

union IntOrPtr1822 {
    i: int;
    p: int*;
}

// func f1822() {
//    u1 := IntOrPtr1822{i = 42};
//    u2 := IntOrPtr1822{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1822: int;

struct Vector1822 {
    x: int;
    y: int;
}

func fact_iter1822(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1822(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1822(n-1);
    }
}

const n1822 = 1 + sizeof(p1822);

var p1822: T1822*;

struct T1822 {
    a: int[n1822];
}


func example_test1823(): int {
    return fact_rec1823(10) == fact_iter1823(10);
}

union IntOrPtr1823 {
    i: int;
    p: int*;
}

// func f1823() {
//    u1 := IntOrPtr1823{i = 42};
//    u2 := IntOrPtr1823{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1823: int;

struct Vector1823 {
    x: int;
    y: int;
}

func fact_iter1823(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1823(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1823(n-1);
    }
}

const n1823 = 1 + sizeof(p1823);

var p1823: T1823*;

struct T1823 {
    a: int[n1823];
}


func example_test1824(): int {
    return fact_rec1824(10) == fact_iter1824(10);
}

union IntOrPtr1824 {
    i: int;
    p: int*;
}

// func f1824() {
//    u1 := IntOrPtr1824{i = 42};
//    u2 := IntOrPtr1824{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1824: int;

struct Vector1824 {
    x: int;
    y: int;
}

func fact_iter1824(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1824(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1824(n-1);
    }
}

const n1824 = 1 + sizeof(p1824);

var p1824: T1824*;

struct T1824 {
    a: int[n1824];
}


func example_test1825(): int {
    return fact_rec1825(10) == fact_iter1825(10);
}

union IntOrPtr1825 {
    i: int;
    p: int*;
}

// func f1825() {
//    u1 := IntOrPtr1825{i = 42};
//    u2 := IntOrPtr1825{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1825: int;

struct Vector1825 {
    x: int;
    y: int;
}

func fact_iter1825(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1825(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1825(n-1);
    }
}

const n1825 = 1 + sizeof(p1825);

var p1825: T1825*;

struct T1825 {
    a: int[n1825];
}


func example_test1826(): int {
    return fact_rec1826(10) == fact_iter1826(10);
}

union IntOrPtr1826 {
    i: int;
    p: int*;
}

// func f1826() {
//    u1 := IntOrPtr1826{i = 42};
//    u2 := IntOrPtr1826{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1826: int;

struct Vector1826 {
    x: int;
    y: int;
}

func fact_iter1826(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1826(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1826(n-1);
    }
}

const n1826 = 1 + sizeof(p1826);

var p1826: T1826*;

struct T1826 {
    a: int[n1826];
}


func example_test1827(): int {
    return fact_rec1827(10) == fact_iter1827(10);
}

union IntOrPtr1827 {
    i: int;
    p: int*;
}

// func f1827() {
//    u1 := IntOrPtr1827{i = 42};
//    u2 := IntOrPtr1827{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1827: int;

struct Vector1827 {
    x: int;
    y: int;
}

func fact_iter1827(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1827(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1827(n-1);
    }
}

const n1827 = 1 + sizeof(p1827);

var p1827: T1827*;

struct T1827 {
    a: int[n1827];
}


func example_test1828(): int {
    return fact_rec1828(10) == fact_iter1828(10);
}

union IntOrPtr1828 {
    i: int;
    p: int*;
}

// func f1828() {
//    u1 := IntOrPtr1828{i = 42};
//    u2 := IntOrPtr1828{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1828: int;

struct Vector1828 {
    x: int;
    y: int;
}

func fact_iter1828(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1828(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1828(n-1);
    }
}

const n1828 = 1 + sizeof(p1828);

var p1828: T1828*;

struct T1828 {
    a: int[n1828];
}


func example_test1829(): int {
    return fact_rec1829(10) == fact_iter1829(10);
}

union IntOrPtr1829 {
    i: int;
    p: int*;
}

// func f1829() {
//    u1 := IntOrPtr1829{i = 42};
//    u2 := IntOrPtr1829{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1829: int;

struct Vector1829 {
    x: int;
    y: int;
}

func fact_iter1829(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1829(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1829(n-1);
    }
}

const n1829 = 1 + sizeof(p1829);

var p1829: T1829*;

struct T1829 {
    a: int[n1829];
}


func example_test1830(): int {
    return fact_rec1830(10) == fact_iter1830(10);
}

union IntOrPtr1830 {
    i: int;
    p: int*;
}

// func f1830() {
//    u1 := IntOrPtr1830{i = 42};
//    u2 := IntOrPtr1830{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1830: int;

struct Vector1830 {
    x: int;
    y: int;
}

func fact_iter1830(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1830(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1830(n-1);
    }
}

const n1830 = 1 + sizeof(p1830);

var p1830: T1830*;

struct T1830 {
    a: int[n1830];
}


func example_test1831(): int {
    return fact_rec1831(10) == fact_iter1831(10);
}

union IntOrPtr1831 {
    i: int;
    p: int*;
}

// func f1831() {
//    u1 := IntOrPtr1831{i = 42};
//    u2 := IntOrPtr1831{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1831: int;

struct Vector1831 {
    x: int;
    y: int;
}

func fact_iter1831(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1831(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1831(n-1);
    }
}

const n1831 = 1 + sizeof(p1831);

var p1831: T1831*;

struct T1831 {
    a: int[n1831];
}


func example_test1832(): int {
    return fact_rec1832(10) == fact_iter1832(10);
}

union IntOrPtr1832 {
    i: int;
    p: int*;
}

// func f1832() {
//    u1 := IntOrPtr1832{i = 42};
//    u2 := IntOrPtr1832{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1832: int;

struct Vector1832 {
    x: int;
    y: int;
}

func fact_iter1832(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1832(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1832(n-1);
    }
}

const n1832 = 1 + sizeof(p1832);

var p1832: T1832*;

struct T1832 {
    a: int[n1832];
}


func example_test1833(): int {
    return fact_rec1833(10) == fact_iter1833(10);
}

union IntOrPtr1833 {
    i: int;
    p: int*;
}

// func f1833() {
//    u1 := IntOrPtr1833{i = 42};
//    u2 := IntOrPtr1833{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1833: int;

struct Vector1833 {
    x: int;
    y: int;
}

func fact_iter1833(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1833(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1833(n-1);
    }
}

const n1833 = 1 + sizeof(p1833);

var p1833: T1833*;

struct T1833 {
    a: int[n1833];
}


func example_test1834(): int {
    return fact_rec1834(10) == fact_iter1834(10);
}

union IntOrPtr1834 {
    i: int;
    p: int*;
}

// func f1834() {
//    u1 := IntOrPtr1834{i = 42};
//    u2 := IntOrPtr1834{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1834: int;

struct Vector1834 {
    x: int;
    y: int;
}

func fact_iter1834(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1834(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1834(n-1);
    }
}

const n1834 = 1 + sizeof(p1834);

var p1834: T1834*;

struct T1834 {
    a: int[n1834];
}


func example_test1835(): int {
    return fact_rec1835(10) == fact_iter1835(10);
}

union IntOrPtr1835 {
    i: int;
    p: int*;
}

// func f1835() {
//    u1 := IntOrPtr1835{i = 42};
//    u2 := IntOrPtr1835{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1835: int;

struct Vector1835 {
    x: int;
    y: int;
}

func fact_iter1835(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1835(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1835(n-1);
    }
}

const n1835 = 1 + sizeof(p1835);

var p1835: T1835*;

struct T1835 {
    a: int[n1835];
}


func example_test1836(): int {
    return fact_rec1836(10) == fact_iter1836(10);
}

union IntOrPtr1836 {
    i: int;
    p: int*;
}

// func f1836() {
//    u1 := IntOrPtr1836{i = 42};
//    u2 := IntOrPtr1836{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1836: int;

struct Vector1836 {
    x: int;
    y: int;
}

func fact_iter1836(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1836(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1836(n-1);
    }
}

const n1836 = 1 + sizeof(p1836);

var p1836: T1836*;

struct T1836 {
    a: int[n1836];
}


func example_test1837(): int {
    return fact_rec1837(10) == fact_iter1837(10);
}

union IntOrPtr1837 {
    i: int;
    p: int*;
}

// func f1837() {
//    u1 := IntOrPtr1837{i = 42};
//    u2 := IntOrPtr1837{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1837: int;

struct Vector1837 {
    x: int;
    y: int;
}

func fact_iter1837(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1837(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1837(n-1);
    }
}

const n1837 = 1 + sizeof(p1837);

var p1837: T1837*;

struct T1837 {
    a: int[n1837];
}


func example_test1838(): int {
    return fact_rec1838(10) == fact_iter1838(10);
}

union IntOrPtr1838 {
    i: int;
    p: int*;
}

// func f1838() {
//    u1 := IntOrPtr1838{i = 42};
//    u2 := IntOrPtr1838{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1838: int;

struct Vector1838 {
    x: int;
    y: int;
}

func fact_iter1838(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1838(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1838(n-1);
    }
}

const n1838 = 1 + sizeof(p1838);

var p1838: T1838*;

struct T1838 {
    a: int[n1838];
}


func example_test1839(): int {
    return fact_rec1839(10) == fact_iter1839(10);
}

union IntOrPtr1839 {
    i: int;
    p: int*;
}

// func f1839() {
//    u1 := IntOrPtr1839{i = 42};
//    u2 := IntOrPtr1839{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1839: int;

struct Vector1839 {
    x: int;
    y: int;
}

func fact_iter1839(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1839(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1839(n-1);
    }
}

const n1839 = 1 + sizeof(p1839);

var p1839: T1839*;

struct T1839 {
    a: int[n1839];
}


func example_test1840(): int {
    return fact_rec1840(10) == fact_iter1840(10);
}

union IntOrPtr1840 {
    i: int;
    p: int*;
}

// func f1840() {
//    u1 := IntOrPtr1840{i = 42};
//    u2 := IntOrPtr1840{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1840: int;

struct Vector1840 {
    x: int;
    y: int;
}

func fact_iter1840(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1840(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1840(n-1);
    }
}

const n1840 = 1 + sizeof(p1840);

var p1840: T1840*;

struct T1840 {
    a: int[n1840];
}


func example_test1841(): int {
    return fact_rec1841(10) == fact_iter1841(10);
}

union IntOrPtr1841 {
    i: int;
    p: int*;
}

// func f1841() {
//    u1 := IntOrPtr1841{i = 42};
//    u2 := IntOrPtr1841{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1841: int;

struct Vector1841 {
    x: int;
    y: int;
}

func fact_iter1841(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1841(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1841(n-1);
    }
}

const n1841 = 1 + sizeof(p1841);

var p1841: T1841*;

struct T1841 {
    a: int[n1841];
}


func example_test1842(): int {
    return fact_rec1842(10) == fact_iter1842(10);
}

union IntOrPtr1842 {
    i: int;
    p: int*;
}

// func f1842() {
//    u1 := IntOrPtr1842{i = 42};
//    u2 := IntOrPtr1842{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1842: int;

struct Vector1842 {
    x: int;
    y: int;
}

func fact_iter1842(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1842(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1842(n-1);
    }
}

const n1842 = 1 + sizeof(p1842);

var p1842: T1842*;

struct T1842 {
    a: int[n1842];
}


func example_test1843(): int {
    return fact_rec1843(10) == fact_iter1843(10);
}

union IntOrPtr1843 {
    i: int;
    p: int*;
}

// func f1843() {
//    u1 := IntOrPtr1843{i = 42};
//    u2 := IntOrPtr1843{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1843: int;

struct Vector1843 {
    x: int;
    y: int;
}

func fact_iter1843(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1843(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1843(n-1);
    }
}

const n1843 = 1 + sizeof(p1843);

var p1843: T1843*;

struct T1843 {
    a: int[n1843];
}


func example_test1844(): int {
    return fact_rec1844(10) == fact_iter1844(10);
}

union IntOrPtr1844 {
    i: int;
    p: int*;
}

// func f1844() {
//    u1 := IntOrPtr1844{i = 42};
//    u2 := IntOrPtr1844{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1844: int;

struct Vector1844 {
    x: int;
    y: int;
}

func fact_iter1844(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1844(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1844(n-1);
    }
}

const n1844 = 1 + sizeof(p1844);

var p1844: T1844*;

struct T1844 {
    a: int[n1844];
}


func example_test1845(): int {
    return fact_rec1845(10) == fact_iter1845(10);
}

union IntOrPtr1845 {
    i: int;
    p: int*;
}

// func f1845() {
//    u1 := IntOrPtr1845{i = 42};
//    u2 := IntOrPtr1845{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1845: int;

struct Vector1845 {
    x: int;
    y: int;
}

func fact_iter1845(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1845(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1845(n-1);
    }
}

const n1845 = 1 + sizeof(p1845);

var p1845: T1845*;

struct T1845 {
    a: int[n1845];
}


func example_test1846(): int {
    return fact_rec1846(10) == fact_iter1846(10);
}

union IntOrPtr1846 {
    i: int;
    p: int*;
}

// func f1846() {
//    u1 := IntOrPtr1846{i = 42};
//    u2 := IntOrPtr1846{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1846: int;

struct Vector1846 {
    x: int;
    y: int;
}

func fact_iter1846(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1846(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1846(n-1);
    }
}

const n1846 = 1 + sizeof(p1846);

var p1846: T1846*;

struct T1846 {
    a: int[n1846];
}


func example_test1847(): int {
    return fact_rec1847(10) == fact_iter1847(10);
}

union IntOrPtr1847 {
    i: int;
    p: int*;
}

// func f1847() {
//    u1 := IntOrPtr1847{i = 42};
//    u2 := IntOrPtr1847{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1847: int;

struct Vector1847 {
    x: int;
    y: int;
}

func fact_iter1847(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1847(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1847(n-1);
    }
}

const n1847 = 1 + sizeof(p1847);

var p1847: T1847*;

struct T1847 {
    a: int[n1847];
}


func example_test1848(): int {
    return fact_rec1848(10) == fact_iter1848(10);
}

union IntOrPtr1848 {
    i: int;
    p: int*;
}

// func f1848() {
//    u1 := IntOrPtr1848{i = 42};
//    u2 := IntOrPtr1848{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1848: int;

struct Vector1848 {
    x: int;
    y: int;
}

func fact_iter1848(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1848(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1848(n-1);
    }
}

const n1848 = 1 + sizeof(p1848);

var p1848: T1848*;

struct T1848 {
    a: int[n1848];
}


func example_test1849(): int {
    return fact_rec1849(10) == fact_iter1849(10);
}

union IntOrPtr1849 {
    i: int;
    p: int*;
}

// func f1849() {
//    u1 := IntOrPtr1849{i = 42};
//    u2 := IntOrPtr1849{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1849: int;

struct Vector1849 {
    x: int;
    y: int;
}

func fact_iter1849(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1849(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1849(n-1);
    }
}

const n1849 = 1 + sizeof(p1849);

var p1849: T1849*;

struct T1849 {
    a: int[n1849];
}


func example_test1850(): int {
    return fact_rec1850(10) == fact_iter1850(10);
}

union IntOrPtr1850 {
    i: int;
    p: int*;
}

// func f1850() {
//    u1 := IntOrPtr1850{i = 42};
//    u2 := IntOrPtr1850{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1850: int;

struct Vector1850 {
    x: int;
    y: int;
}

func fact_iter1850(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1850(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1850(n-1);
    }
}

const n1850 = 1 + sizeof(p1850);

var p1850: T1850*;

struct T1850 {
    a: int[n1850];
}


func example_test1851(): int {
    return fact_rec1851(10) == fact_iter1851(10);
}

union IntOrPtr1851 {
    i: int;
    p: int*;
}

// func f1851() {
//    u1 := IntOrPtr1851{i = 42};
//    u2 := IntOrPtr1851{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1851: int;

struct Vector1851 {
    x: int;
    y: int;
}

func fact_iter1851(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1851(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1851(n-1);
    }
}

const n1851 = 1 + sizeof(p1851);

var p1851: T1851*;

struct T1851 {
    a: int[n1851];
}


func example_test1852(): int {
    return fact_rec1852(10) == fact_iter1852(10);
}

union IntOrPtr1852 {
    i: int;
    p: int*;
}

// func f1852() {
//    u1 := IntOrPtr1852{i = 42};
//    u2 := IntOrPtr1852{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1852: int;

struct Vector1852 {
    x: int;
    y: int;
}

func fact_iter1852(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1852(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1852(n-1);
    }
}

const n1852 = 1 + sizeof(p1852);

var p1852: T1852*;

struct T1852 {
    a: int[n1852];
}


func example_test1853(): int {
    return fact_rec1853(10) == fact_iter1853(10);
}

union IntOrPtr1853 {
    i: int;
    p: int*;
}

// func f1853() {
//    u1 := IntOrPtr1853{i = 42};
//    u2 := IntOrPtr1853{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1853: int;

struct Vector1853 {
    x: int;
    y: int;
}

func fact_iter1853(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1853(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1853(n-1);
    }
}

const n1853 = 1 + sizeof(p1853);

var p1853: T1853*;

struct T1853 {
    a: int[n1853];
}


func example_test1854(): int {
    return fact_rec1854(10) == fact_iter1854(10);
}

union IntOrPtr1854 {
    i: int;
    p: int*;
}

// func f1854() {
//    u1 := IntOrPtr1854{i = 42};
//    u2 := IntOrPtr1854{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1854: int;

struct Vector1854 {
    x: int;
    y: int;
}

func fact_iter1854(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1854(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1854(n-1);
    }
}

const n1854 = 1 + sizeof(p1854);

var p1854: T1854*;

struct T1854 {
    a: int[n1854];
}


func example_test1855(): int {
    return fact_rec1855(10) == fact_iter1855(10);
}

union IntOrPtr1855 {
    i: int;
    p: int*;
}

// func f1855() {
//    u1 := IntOrPtr1855{i = 42};
//    u2 := IntOrPtr1855{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1855: int;

struct Vector1855 {
    x: int;
    y: int;
}

func fact_iter1855(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1855(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1855(n-1);
    }
}

const n1855 = 1 + sizeof(p1855);

var p1855: T1855*;

struct T1855 {
    a: int[n1855];
}


func example_test1856(): int {
    return fact_rec1856(10) == fact_iter1856(10);
}

union IntOrPtr1856 {
    i: int;
    p: int*;
}

// func f1856() {
//    u1 := IntOrPtr1856{i = 42};
//    u2 := IntOrPtr1856{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1856: int;

struct Vector1856 {
    x: int;
    y: int;
}

func fact_iter1856(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1856(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1856(n-1);
    }
}

const n1856 = 1 + sizeof(p1856);

var p1856: T1856*;

struct T1856 {
    a: int[n1856];
}


func example_test1857(): int {
    return fact_rec1857(10) == fact_iter1857(10);
}

union IntOrPtr1857 {
    i: int;
    p: int*;
}

// func f1857() {
//    u1 := IntOrPtr1857{i = 42};
//    u2 := IntOrPtr1857{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1857: int;

struct Vector1857 {
    x: int;
    y: int;
}

func fact_iter1857(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1857(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1857(n-1);
    }
}

const n1857 = 1 + sizeof(p1857);

var p1857: T1857*;

struct T1857 {
    a: int[n1857];
}


func example_test1858(): int {
    return fact_rec1858(10) == fact_iter1858(10);
}

union IntOrPtr1858 {
    i: int;
    p: int*;
}

// func f1858() {
//    u1 := IntOrPtr1858{i = 42};
//    u2 := IntOrPtr1858{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1858: int;

struct Vector1858 {
    x: int;
    y: int;
}

func fact_iter1858(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1858(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1858(n-1);
    }
}

const n1858 = 1 + sizeof(p1858);

var p1858: T1858*;

struct T1858 {
    a: int[n1858];
}


func example_test1859(): int {
    return fact_rec1859(10) == fact_iter1859(10);
}

union IntOrPtr1859 {
    i: int;
    p: int*;
}

// func f1859() {
//    u1 := IntOrPtr1859{i = 42};
//    u2 := IntOrPtr1859{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1859: int;

struct Vector1859 {
    x: int;
    y: int;
}

func fact_iter1859(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1859(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1859(n-1);
    }
}

const n1859 = 1 + sizeof(p1859);

var p1859: T1859*;

struct T1859 {
    a: int[n1859];
}


func example_test1860(): int {
    return fact_rec1860(10) == fact_iter1860(10);
}

union IntOrPtr1860 {
    i: int;
    p: int*;
}

// func f1860() {
//    u1 := IntOrPtr1860{i = 42};
//    u2 := IntOrPtr1860{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1860: int;

struct Vector1860 {
    x: int;
    y: int;
}

func fact_iter1860(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1860(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1860(n-1);
    }
}

const n1860 = 1 + sizeof(p1860);

var p1860: T1860*;

struct T1860 {
    a: int[n1860];
}


func example_test1861(): int {
    return fact_rec1861(10) == fact_iter1861(10);
}

union IntOrPtr1861 {
    i: int;
    p: int*;
}

// func f1861() {
//    u1 := IntOrPtr1861{i = 42};
//    u2 := IntOrPtr1861{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1861: int;

struct Vector1861 {
    x: int;
    y: int;
}

func fact_iter1861(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1861(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1861(n-1);
    }
}

const n1861 = 1 + sizeof(p1861);

var p1861: T1861*;

struct T1861 {
    a: int[n1861];
}


func example_test1862(): int {
    return fact_rec1862(10) == fact_iter1862(10);
}

union IntOrPtr1862 {
    i: int;
    p: int*;
}

// func f1862() {
//    u1 := IntOrPtr1862{i = 42};
//    u2 := IntOrPtr1862{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1862: int;

struct Vector1862 {
    x: int;
    y: int;
}

func fact_iter1862(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1862(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1862(n-1);
    }
}

const n1862 = 1 + sizeof(p1862);

var p1862: T1862*;

struct T1862 {
    a: int[n1862];
}


func example_test1863(): int {
    return fact_rec1863(10) == fact_iter1863(10);
}

union IntOrPtr1863 {
    i: int;
    p: int*;
}

// func f1863() {
//    u1 := IntOrPtr1863{i = 42};
//    u2 := IntOrPtr1863{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1863: int;

struct Vector1863 {
    x: int;
    y: int;
}

func fact_iter1863(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1863(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1863(n-1);
    }
}

const n1863 = 1 + sizeof(p1863);

var p1863: T1863*;

struct T1863 {
    a: int[n1863];
}


func example_test1864(): int {
    return fact_rec1864(10) == fact_iter1864(10);
}

union IntOrPtr1864 {
    i: int;
    p: int*;
}

// func f1864() {
//    u1 := IntOrPtr1864{i = 42};
//    u2 := IntOrPtr1864{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1864: int;

struct Vector1864 {
    x: int;
    y: int;
}

func fact_iter1864(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1864(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1864(n-1);
    }
}

const n1864 = 1 + sizeof(p1864);

var p1864: T1864*;

struct T1864 {
    a: int[n1864];
}


func example_test1865(): int {
    return fact_rec1865(10) == fact_iter1865(10);
}

union IntOrPtr1865 {
    i: int;
    p: int*;
}

// func f1865() {
//    u1 := IntOrPtr1865{i = 42};
//    u2 := IntOrPtr1865{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1865: int;

struct Vector1865 {
    x: int;
    y: int;
}

func fact_iter1865(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1865(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1865(n-1);
    }
}

const n1865 = 1 + sizeof(p1865);

var p1865: T1865*;

struct T1865 {
    a: int[n1865];
}


func example_test1866(): int {
    return fact_rec1866(10) == fact_iter1866(10);
}

union IntOrPtr1866 {
    i: int;
    p: int*;
}

// func f1866() {
//    u1 := IntOrPtr1866{i = 42};
//    u2 := IntOrPtr1866{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1866: int;

struct Vector1866 {
    x: int;
    y: int;
}

func fact_iter1866(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1866(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1866(n-1);
    }
}

const n1866 = 1 + sizeof(p1866);

var p1866: T1866*;

struct T1866 {
    a: int[n1866];
}


func example_test1867(): int {
    return fact_rec1867(10) == fact_iter1867(10);
}

union IntOrPtr1867 {
    i: int;
    p: int*;
}

// func f1867() {
//    u1 := IntOrPtr1867{i = 42};
//    u2 := IntOrPtr1867{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1867: int;

struct Vector1867 {
    x: int;
    y: int;
}

func fact_iter1867(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1867(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1867(n-1);
    }
}

const n1867 = 1 + sizeof(p1867);

var p1867: T1867*;

struct T1867 {
    a: int[n1867];
}


func example_test1868(): int {
    return fact_rec1868(10) == fact_iter1868(10);
}

union IntOrPtr1868 {
    i: int;
    p: int*;
}

// func f1868() {
//    u1 := IntOrPtr1868{i = 42};
//    u2 := IntOrPtr1868{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1868: int;

struct Vector1868 {
    x: int;
    y: int;
}

func fact_iter1868(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1868(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1868(n-1);
    }
}

const n1868 = 1 + sizeof(p1868);

var p1868: T1868*;

struct T1868 {
    a: int[n1868];
}


func example_test1869(): int {
    return fact_rec1869(10) == fact_iter1869(10);
}

union IntOrPtr1869 {
    i: int;
    p: int*;
}

// func f1869() {
//    u1 := IntOrPtr1869{i = 42};
//    u2 := IntOrPtr1869{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1869: int;

struct Vector1869 {
    x: int;
    y: int;
}

func fact_iter1869(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1869(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1869(n-1);
    }
}

const n1869 = 1 + sizeof(p1869);

var p1869: T1869*;

struct T1869 {
    a: int[n1869];
}


func example_test1870(): int {
    return fact_rec1870(10) == fact_iter1870(10);
}

union IntOrPtr1870 {
    i: int;
    p: int*;
}

// func f1870() {
//    u1 := IntOrPtr1870{i = 42};
//    u2 := IntOrPtr1870{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1870: int;

struct Vector1870 {
    x: int;
    y: int;
}

func fact_iter1870(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1870(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1870(n-1);
    }
}

const n1870 = 1 + sizeof(p1870);

var p1870: T1870*;

struct T1870 {
    a: int[n1870];
}


func example_test1871(): int {
    return fact_rec1871(10) == fact_iter1871(10);
}

union IntOrPtr1871 {
    i: int;
    p: int*;
}

// func f1871() {
//    u1 := IntOrPtr1871{i = 42};
//    u2 := IntOrPtr1871{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1871: int;

struct Vector1871 {
    x: int;
    y: int;
}

func fact_iter1871(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1871(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1871(n-1);
    }
}

const n1871 = 1 + sizeof(p1871);

var p1871: T1871*;

struct T1871 {
    a: int[n1871];
}


func example_test1872(): int {
    return fact_rec1872(10) == fact_iter1872(10);
}

union IntOrPtr1872 {
    i: int;
    p: int*;
}

// func f1872() {
//    u1 := IntOrPtr1872{i = 42};
//    u2 := IntOrPtr1872{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1872: int;

struct Vector1872 {
    x: int;
    y: int;
}

func fact_iter1872(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1872(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1872(n-1);
    }
}

const n1872 = 1 + sizeof(p1872);

var p1872: T1872*;

struct T1872 {
    a: int[n1872];
}


func example_test1873(): int {
    return fact_rec1873(10) == fact_iter1873(10);
}

union IntOrPtr1873 {
    i: int;
    p: int*;
}

// func f1873() {
//    u1 := IntOrPtr1873{i = 42};
//    u2 := IntOrPtr1873{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1873: int;

struct Vector1873 {
    x: int;
    y: int;
}

func fact_iter1873(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1873(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1873(n-1);
    }
}

const n1873 = 1 + sizeof(p1873);

var p1873: T1873*;

struct T1873 {
    a: int[n1873];
}


func example_test1874(): int {
    return fact_rec1874(10) == fact_iter1874(10);
}

union IntOrPtr1874 {
    i: int;
    p: int*;
}

// func f1874() {
//    u1 := IntOrPtr1874{i = 42};
//    u2 := IntOrPtr1874{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1874: int;

struct Vector1874 {
    x: int;
    y: int;
}

func fact_iter1874(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1874(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1874(n-1);
    }
}

const n1874 = 1 + sizeof(p1874);

var p1874: T1874*;

struct T1874 {
    a: int[n1874];
}


func example_test1875(): int {
    return fact_rec1875(10) == fact_iter1875(10);
}

union IntOrPtr1875 {
    i: int;
    p: int*;
}

// func f1875() {
//    u1 := IntOrPtr1875{i = 42};
//    u2 := IntOrPtr1875{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1875: int;

struct Vector1875 {
    x: int;
    y: int;
}

func fact_iter1875(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1875(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1875(n-1);
    }
}

const n1875 = 1 + sizeof(p1875);

var p1875: T1875*;

struct T1875 {
    a: int[n1875];
}


func example_test1876(): int {
    return fact_rec1876(10) == fact_iter1876(10);
}

union IntOrPtr1876 {
    i: int;
    p: int*;
}

// func f1876() {
//    u1 := IntOrPtr1876{i = 42};
//    u2 := IntOrPtr1876{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1876: int;

struct Vector1876 {
    x: int;
    y: int;
}

func fact_iter1876(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1876(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1876(n-1);
    }
}

const n1876 = 1 + sizeof(p1876);

var p1876: T1876*;

struct T1876 {
    a: int[n1876];
}


func example_test1877(): int {
    return fact_rec1877(10) == fact_iter1877(10);
}

union IntOrPtr1877 {
    i: int;
    p: int*;
}

// func f1877() {
//    u1 := IntOrPtr1877{i = 42};
//    u2 := IntOrPtr1877{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1877: int;

struct Vector1877 {
    x: int;
    y: int;
}

func fact_iter1877(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1877(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1877(n-1);
    }
}

const n1877 = 1 + sizeof(p1877);

var p1877: T1877*;

struct T1877 {
    a: int[n1877];
}


func example_test1878(): int {
    return fact_rec1878(10) == fact_iter1878(10);
}

union IntOrPtr1878 {
    i: int;
    p: int*;
}

// func f1878() {
//    u1 := IntOrPtr1878{i = 42};
//    u2 := IntOrPtr1878{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1878: int;

struct Vector1878 {
    x: int;
    y: int;
}

func fact_iter1878(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1878(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1878(n-1);
    }
}

const n1878 = 1 + sizeof(p1878);

var p1878: T1878*;

struct T1878 {
    a: int[n1878];
}


func example_test1879(): int {
    return fact_rec1879(10) == fact_iter1879(10);
}

union IntOrPtr1879 {
    i: int;
    p: int*;
}

// func f1879() {
//    u1 := IntOrPtr1879{i = 42};
//    u2 := IntOrPtr1879{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1879: int;

struct Vector1879 {
    x: int;
    y: int;
}

func fact_iter1879(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1879(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1879(n-1);
    }
}

const n1879 = 1 + sizeof(p1879);

var p1879: T1879*;

struct T1879 {
    a: int[n1879];
}


func example_test1880(): int {
    return fact_rec1880(10) == fact_iter1880(10);
}

union IntOrPtr1880 {
    i: int;
    p: int*;
}

// func f1880() {
//    u1 := IntOrPtr1880{i = 42};
//    u2 := IntOrPtr1880{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1880: int;

struct Vector1880 {
    x: int;
    y: int;
}

func fact_iter1880(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1880(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1880(n-1);
    }
}

const n1880 = 1 + sizeof(p1880);

var p1880: T1880*;

struct T1880 {
    a: int[n1880];
}


func example_test1881(): int {
    return fact_rec1881(10) == fact_iter1881(10);
}

union IntOrPtr1881 {
    i: int;
    p: int*;
}

// func f1881() {
//    u1 := IntOrPtr1881{i = 42};
//    u2 := IntOrPtr1881{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1881: int;

struct Vector1881 {
    x: int;
    y: int;
}

func fact_iter1881(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1881(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1881(n-1);
    }
}

const n1881 = 1 + sizeof(p1881);

var p1881: T1881*;

struct T1881 {
    a: int[n1881];
}


func example_test1882(): int {
    return fact_rec1882(10) == fact_iter1882(10);
}

union IntOrPtr1882 {
    i: int;
    p: int*;
}

// func f1882() {
//    u1 := IntOrPtr1882{i = 42};
//    u2 := IntOrPtr1882{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1882: int;

struct Vector1882 {
    x: int;
    y: int;
}

func fact_iter1882(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1882(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1882(n-1);
    }
}

const n1882 = 1 + sizeof(p1882);

var p1882: T1882*;

struct T1882 {
    a: int[n1882];
}


func example_test1883(): int {
    return fact_rec1883(10) == fact_iter1883(10);
}

union IntOrPtr1883 {
    i: int;
    p: int*;
}

// func f1883() {
//    u1 := IntOrPtr1883{i = 42};
//    u2 := IntOrPtr1883{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1883: int;

struct Vector1883 {
    x: int;
    y: int;
}

func fact_iter1883(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1883(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1883(n-1);
    }
}

const n1883 = 1 + sizeof(p1883);

var p1883: T1883*;

struct T1883 {
    a: int[n1883];
}


func example_test1884(): int {
    return fact_rec1884(10) == fact_iter1884(10);
}

union IntOrPtr1884 {
    i: int;
    p: int*;
}

// func f1884() {
//    u1 := IntOrPtr1884{i = 42};
//    u2 := IntOrPtr1884{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1884: int;

struct Vector1884 {
    x: int;
    y: int;
}

func fact_iter1884(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1884(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1884(n-1);
    }
}

const n1884 = 1 + sizeof(p1884);

var p1884: T1884*;

struct T1884 {
    a: int[n1884];
}


func example_test1885(): int {
    return fact_rec1885(10) == fact_iter1885(10);
}

union IntOrPtr1885 {
    i: int;
    p: int*;
}

// func f1885() {
//    u1 := IntOrPtr1885{i = 42};
//    u2 := IntOrPtr1885{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1885: int;

struct Vector1885 {
    x: int;
    y: int;
}

func fact_iter1885(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1885(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1885(n-1);
    }
}

const n1885 = 1 + sizeof(p1885);

var p1885: T1885*;

struct T1885 {
    a: int[n1885];
}


func example_test1886(): int {
    return fact_rec1886(10) == fact_iter1886(10);
}

union IntOrPtr1886 {
    i: int;
    p: int*;
}

// func f1886() {
//    u1 := IntOrPtr1886{i = 42};
//    u2 := IntOrPtr1886{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1886: int;

struct Vector1886 {
    x: int;
    y: int;
}

func fact_iter1886(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1886(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1886(n-1);
    }
}

const n1886 = 1 + sizeof(p1886);

var p1886: T1886*;

struct T1886 {
    a: int[n1886];
}


func example_test1887(): int {
    return fact_rec1887(10) == fact_iter1887(10);
}

union IntOrPtr1887 {
    i: int;
    p: int*;
}

// func f1887() {
//    u1 := IntOrPtr1887{i = 42};
//    u2 := IntOrPtr1887{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1887: int;

struct Vector1887 {
    x: int;
    y: int;
}

func fact_iter1887(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1887(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1887(n-1);
    }
}

const n1887 = 1 + sizeof(p1887);

var p1887: T1887*;

struct T1887 {
    a: int[n1887];
}


func example_test1888(): int {
    return fact_rec1888(10) == fact_iter1888(10);
}

union IntOrPtr1888 {
    i: int;
    p: int*;
}

// func f1888() {
//    u1 := IntOrPtr1888{i = 42};
//    u2 := IntOrPtr1888{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1888: int;

struct Vector1888 {
    x: int;
    y: int;
}

func fact_iter1888(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1888(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1888(n-1);
    }
}

const n1888 = 1 + sizeof(p1888);

var p1888: T1888*;

struct T1888 {
    a: int[n1888];
}


func example_test1889(): int {
    return fact_rec1889(10) == fact_iter1889(10);
}

union IntOrPtr1889 {
    i: int;
    p: int*;
}

// func f1889() {
//    u1 := IntOrPtr1889{i = 42};
//    u2 := IntOrPtr1889{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1889: int;

struct Vector1889 {
    x: int;
    y: int;
}

func fact_iter1889(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1889(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1889(n-1);
    }
}

const n1889 = 1 + sizeof(p1889);

var p1889: T1889*;

struct T1889 {
    a: int[n1889];
}


func example_test1890(): int {
    return fact_rec1890(10) == fact_iter1890(10);
}

union IntOrPtr1890 {
    i: int;
    p: int*;
}

// func f1890() {
//    u1 := IntOrPtr1890{i = 42};
//    u2 := IntOrPtr1890{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1890: int;

struct Vector1890 {
    x: int;
    y: int;
}

func fact_iter1890(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1890(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1890(n-1);
    }
}

const n1890 = 1 + sizeof(p1890);

var p1890: T1890*;

struct T1890 {
    a: int[n1890];
}


func example_test1891(): int {
    return fact_rec1891(10) == fact_iter1891(10);
}

union IntOrPtr1891 {
    i: int;
    p: int*;
}

// func f1891() {
//    u1 := IntOrPtr1891{i = 42};
//    u2 := IntOrPtr1891{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1891: int;

struct Vector1891 {
    x: int;
    y: int;
}

func fact_iter1891(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1891(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1891(n-1);
    }
}

const n1891 = 1 + sizeof(p1891);

var p1891: T1891*;

struct T1891 {
    a: int[n1891];
}


func example_test1892(): int {
    return fact_rec1892(10) == fact_iter1892(10);
}

union IntOrPtr1892 {
    i: int;
    p: int*;
}

// func f1892() {
//    u1 := IntOrPtr1892{i = 42};
//    u2 := IntOrPtr1892{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1892: int;

struct Vector1892 {
    x: int;
    y: int;
}

func fact_iter1892(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1892(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1892(n-1);
    }
}

const n1892 = 1 + sizeof(p1892);

var p1892: T1892*;

struct T1892 {
    a: int[n1892];
}


func example_test1893(): int {
    return fact_rec1893(10) == fact_iter1893(10);
}

union IntOrPtr1893 {
    i: int;
    p: int*;
}

// func f1893() {
//    u1 := IntOrPtr1893{i = 42};
//    u2 := IntOrPtr1893{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1893: int;

struct Vector1893 {
    x: int;
    y: int;
}

func fact_iter1893(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1893(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1893(n-1);
    }
}

const n1893 = 1 + sizeof(p1893);

var p1893: T1893*;

struct T1893 {
    a: int[n1893];
}


func example_test1894(): int {
    return fact_rec1894(10) == fact_iter1894(10);
}

union IntOrPtr1894 {
    i: int;
    p: int*;
}

// func f1894() {
//    u1 := IntOrPtr1894{i = 42};
//    u2 := IntOrPtr1894{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1894: int;

struct Vector1894 {
    x: int;
    y: int;
}

func fact_iter1894(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1894(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1894(n-1);
    }
}

const n1894 = 1 + sizeof(p1894);

var p1894: T1894*;

struct T1894 {
    a: int[n1894];
}


func example_test1895(): int {
    return fact_rec1895(10) == fact_iter1895(10);
}

union IntOrPtr1895 {
    i: int;
    p: int*;
}

// func f1895() {
//    u1 := IntOrPtr1895{i = 42};
//    u2 := IntOrPtr1895{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1895: int;

struct Vector1895 {
    x: int;
    y: int;
}

func fact_iter1895(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1895(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1895(n-1);
    }
}

const n1895 = 1 + sizeof(p1895);

var p1895: T1895*;

struct T1895 {
    a: int[n1895];
}


func example_test1896(): int {
    return fact_rec1896(10) == fact_iter1896(10);
}

union IntOrPtr1896 {
    i: int;
    p: int*;
}

// func f1896() {
//    u1 := IntOrPtr1896{i = 42};
//    u2 := IntOrPtr1896{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1896: int;

struct Vector1896 {
    x: int;
    y: int;
}

func fact_iter1896(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1896(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1896(n-1);
    }
}

const n1896 = 1 + sizeof(p1896);

var p1896: T1896*;

struct T1896 {
    a: int[n1896];
}


func example_test1897(): int {
    return fact_rec1897(10) == fact_iter1897(10);
}

union IntOrPtr1897 {
    i: int;
    p: int*;
}

// func f1897() {
//    u1 := IntOrPtr1897{i = 42};
//    u2 := IntOrPtr1897{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1897: int;

struct Vector1897 {
    x: int;
    y: int;
}

func fact_iter1897(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1897(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1897(n-1);
    }
}

const n1897 = 1 + sizeof(p1897);

var p1897: T1897*;

struct T1897 {
    a: int[n1897];
}


func example_test1898(): int {
    return fact_rec1898(10) == fact_iter1898(10);
}

union IntOrPtr1898 {
    i: int;
    p: int*;
}

// func f1898() {
//    u1 := IntOrPtr1898{i = 42};
//    u2 := IntOrPtr1898{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1898: int;

struct Vector1898 {
    x: int;
    y: int;
}

func fact_iter1898(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1898(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1898(n-1);
    }
}

const n1898 = 1 + sizeof(p1898);

var p1898: T1898*;

struct T1898 {
    a: int[n1898];
}


func example_test1899(): int {
    return fact_rec1899(10) == fact_iter1899(10);
}

union IntOrPtr1899 {
    i: int;
    p: int*;
}

// func f1899() {
//    u1 := IntOrPtr1899{i = 42};
//    u2 := IntOrPtr1899{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1899: int;

struct Vector1899 {
    x: int;
    y: int;
}

func fact_iter1899(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1899(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1899(n-1);
    }
}

const n1899 = 1 + sizeof(p1899);

var p1899: T1899*;

struct T1899 {
    a: int[n1899];
}


func example_test1900(): int {
    return fact_rec1900(10) == fact_iter1900(10);
}

union IntOrPtr1900 {
    i: int;
    p: int*;
}

// func f1900() {
//    u1 := IntOrPtr1900{i = 42};
//    u2 := IntOrPtr1900{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1900: int;

struct Vector1900 {
    x: int;
    y: int;
}

func fact_iter1900(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1900(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1900(n-1);
    }
}

const n1900 = 1 + sizeof(p1900);

var p1900: T1900*;

struct T1900 {
    a: int[n1900];
}


func example_test1901(): int {
    return fact_rec1901(10) == fact_iter1901(10);
}

union IntOrPtr1901 {
    i: int;
    p: int*;
}

// func f1901() {
//    u1 := IntOrPtr1901{i = 42};
//    u2 := IntOrPtr1901{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1901: int;

struct Vector1901 {
    x: int;
    y: int;
}

func fact_iter1901(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1901(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1901(n-1);
    }
}

const n1901 = 1 + sizeof(p1901);

var p1901: T1901*;

struct T1901 {
    a: int[n1901];
}


func example_test1902(): int {
    return fact_rec1902(10) == fact_iter1902(10);
}

union IntOrPtr1902 {
    i: int;
    p: int*;
}

// func f1902() {
//    u1 := IntOrPtr1902{i = 42};
//    u2 := IntOrPtr1902{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1902: int;

struct Vector1902 {
    x: int;
    y: int;
}

func fact_iter1902(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1902(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1902(n-1);
    }
}

const n1902 = 1 + sizeof(p1902);

var p1902: T1902*;

struct T1902 {
    a: int[n1902];
}


func example_test1903(): int {
    return fact_rec1903(10) == fact_iter1903(10);
}

union IntOrPtr1903 {
    i: int;
    p: int*;
}

// func f1903() {
//    u1 := IntOrPtr1903{i = 42};
//    u2 := IntOrPtr1903{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1903: int;

struct Vector1903 {
    x: int;
    y: int;
}

func fact_iter1903(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1903(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1903(n-1);
    }
}

const n1903 = 1 + sizeof(p1903);

var p1903: T1903*;

struct T1903 {
    a: int[n1903];
}


func example_test1904(): int {
    return fact_rec1904(10) == fact_iter1904(10);
}

union IntOrPtr1904 {
    i: int;
    p: int*;
}

// func f1904() {
//    u1 := IntOrPtr1904{i = 42};
//    u2 := IntOrPtr1904{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1904: int;

struct Vector1904 {
    x: int;
    y: int;
}

func fact_iter1904(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1904(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1904(n-1);
    }
}

const n1904 = 1 + sizeof(p1904);

var p1904: T1904*;

struct T1904 {
    a: int[n1904];
}


func example_test1905(): int {
    return fact_rec1905(10) == fact_iter1905(10);
}

union IntOrPtr1905 {
    i: int;
    p: int*;
}

// func f1905() {
//    u1 := IntOrPtr1905{i = 42};
//    u2 := IntOrPtr1905{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1905: int;

struct Vector1905 {
    x: int;
    y: int;
}

func fact_iter1905(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1905(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1905(n-1);
    }
}

const n1905 = 1 + sizeof(p1905);

var p1905: T1905*;

struct T1905 {
    a: int[n1905];
}


func example_test1906(): int {
    return fact_rec1906(10) == fact_iter1906(10);
}

union IntOrPtr1906 {
    i: int;
    p: int*;
}

// func f1906() {
//    u1 := IntOrPtr1906{i = 42};
//    u2 := IntOrPtr1906{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1906: int;

struct Vector1906 {
    x: int;
    y: int;
}

func fact_iter1906(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1906(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1906(n-1);
    }
}

const n1906 = 1 + sizeof(p1906);

var p1906: T1906*;

struct T1906 {
    a: int[n1906];
}


func example_test1907(): int {
    return fact_rec1907(10) == fact_iter1907(10);
}

union IntOrPtr1907 {
    i: int;
    p: int*;
}

// func f1907() {
//    u1 := IntOrPtr1907{i = 42};
//    u2 := IntOrPtr1907{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1907: int;

struct Vector1907 {
    x: int;
    y: int;
}

func fact_iter1907(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1907(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1907(n-1);
    }
}

const n1907 = 1 + sizeof(p1907);

var p1907: T1907*;

struct T1907 {
    a: int[n1907];
}


func example_test1908(): int {
    return fact_rec1908(10) == fact_iter1908(10);
}

union IntOrPtr1908 {
    i: int;
    p: int*;
}

// func f1908() {
//    u1 := IntOrPtr1908{i = 42};
//    u2 := IntOrPtr1908{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1908: int;

struct Vector1908 {
    x: int;
    y: int;
}

func fact_iter1908(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1908(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1908(n-1);
    }
}

const n1908 = 1 + sizeof(p1908);

var p1908: T1908*;

struct T1908 {
    a: int[n1908];
}


func example_test1909(): int {
    return fact_rec1909(10) == fact_iter1909(10);
}

union IntOrPtr1909 {
    i: int;
    p: int*;
}

// func f1909() {
//    u1 := IntOrPtr1909{i = 42};
//    u2 := IntOrPtr1909{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1909: int;

struct Vector1909 {
    x: int;
    y: int;
}

func fact_iter1909(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1909(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1909(n-1);
    }
}

const n1909 = 1 + sizeof(p1909);

var p1909: T1909*;

struct T1909 {
    a: int[n1909];
}


func example_test1910(): int {
    return fact_rec1910(10) == fact_iter1910(10);
}

union IntOrPtr1910 {
    i: int;
    p: int*;
}

// func f1910() {
//    u1 := IntOrPtr1910{i = 42};
//    u2 := IntOrPtr1910{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1910: int;

struct Vector1910 {
    x: int;
    y: int;
}

func fact_iter1910(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1910(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1910(n-1);
    }
}

const n1910 = 1 + sizeof(p1910);

var p1910: T1910*;

struct T1910 {
    a: int[n1910];
}


func example_test1911(): int {
    return fact_rec1911(10) == fact_iter1911(10);
}

union IntOrPtr1911 {
    i: int;
    p: int*;
}

// func f1911() {
//    u1 := IntOrPtr1911{i = 42};
//    u2 := IntOrPtr1911{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1911: int;

struct Vector1911 {
    x: int;
    y: int;
}

func fact_iter1911(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1911(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1911(n-1);
    }
}

const n1911 = 1 + sizeof(p1911);

var p1911: T1911*;

struct T1911 {
    a: int[n1911];
}


func example_test1912(): int {
    return fact_rec1912(10) == fact_iter1912(10);
}

union IntOrPtr1912 {
    i: int;
    p: int*;
}

// func f1912() {
//    u1 := IntOrPtr1912{i = 42};
//    u2 := IntOrPtr1912{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1912: int;

struct Vector1912 {
    x: int;
    y: int;
}

func fact_iter1912(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1912(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1912(n-1);
    }
}

const n1912 = 1 + sizeof(p1912);

var p1912: T1912*;

struct T1912 {
    a: int[n1912];
}


func example_test1913(): int {
    return fact_rec1913(10) == fact_iter1913(10);
}

union IntOrPtr1913 {
    i: int;
    p: int*;
}

// func f1913() {
//    u1 := IntOrPtr1913{i = 42};
//    u2 := IntOrPtr1913{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1913: int;

struct Vector1913 {
    x: int;
    y: int;
}

func fact_iter1913(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1913(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1913(n-1);
    }
}

const n1913 = 1 + sizeof(p1913);

var p1913: T1913*;

struct T1913 {
    a: int[n1913];
}


func example_test1914(): int {
    return fact_rec1914(10) == fact_iter1914(10);
}

union IntOrPtr1914 {
    i: int;
    p: int*;
}

// func f1914() {
//    u1 := IntOrPtr1914{i = 42};
//    u2 := IntOrPtr1914{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1914: int;

struct Vector1914 {
    x: int;
    y: int;
}

func fact_iter1914(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1914(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1914(n-1);
    }
}

const n1914 = 1 + sizeof(p1914);

var p1914: T1914*;

struct T1914 {
    a: int[n1914];
}


func example_test1915(): int {
    return fact_rec1915(10) == fact_iter1915(10);
}

union IntOrPtr1915 {
    i: int;
    p: int*;
}

// func f1915() {
//    u1 := IntOrPtr1915{i = 42};
//    u2 := IntOrPtr1915{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1915: int;

struct Vector1915 {
    x: int;
    y: int;
}

func fact_iter1915(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1915(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1915(n-1);
    }
}

const n1915 = 1 + sizeof(p1915);

var p1915: T1915*;

struct T1915 {
    a: int[n1915];
}


func example_test1916(): int {
    return fact_rec1916(10) == fact_iter1916(10);
}

union IntOrPtr1916 {
    i: int;
    p: int*;
}

// func f1916() {
//    u1 := IntOrPtr1916{i = 42};
//    u2 := IntOrPtr1916{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1916: int;

struct Vector1916 {
    x: int;
    y: int;
}

func fact_iter1916(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1916(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1916(n-1);
    }
}

const n1916 = 1 + sizeof(p1916);

var p1916: T1916*;

struct T1916 {
    a: int[n1916];
}


func example_test1917(): int {
    return fact_rec1917(10) == fact_iter1917(10);
}

union IntOrPtr1917 {
    i: int;
    p: int*;
}

// func f1917() {
//    u1 := IntOrPtr1917{i = 42};
//    u2 := IntOrPtr1917{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1917: int;

struct Vector1917 {
    x: int;
    y: int;
}

func fact_iter1917(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1917(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1917(n-1);
    }
}

const n1917 = 1 + sizeof(p1917);

var p1917: T1917*;

struct T1917 {
    a: int[n1917];
}


func example_test1918(): int {
    return fact_rec1918(10) == fact_iter1918(10);
}

union IntOrPtr1918 {
    i: int;
    p: int*;
}

// func f1918() {
//    u1 := IntOrPtr1918{i = 42};
//    u2 := IntOrPtr1918{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1918: int;

struct Vector1918 {
    x: int;
    y: int;
}

func fact_iter1918(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1918(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1918(n-1);
    }
}

const n1918 = 1 + sizeof(p1918);

var p1918: T1918*;

struct T1918 {
    a: int[n1918];
}


func example_test1919(): int {
    return fact_rec1919(10) == fact_iter1919(10);
}

union IntOrPtr1919 {
    i: int;
    p: int*;
}

// func f1919() {
//    u1 := IntOrPtr1919{i = 42};
//    u2 := IntOrPtr1919{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1919: int;

struct Vector1919 {
    x: int;
    y: int;
}

func fact_iter1919(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1919(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1919(n-1);
    }
}

const n1919 = 1 + sizeof(p1919);

var p1919: T1919*;

struct T1919 {
    a: int[n1919];
}


func example_test1920(): int {
    return fact_rec1920(10) == fact_iter1920(10);
}

union IntOrPtr1920 {
    i: int;
    p: int*;
}

// func f1920() {
//    u1 := IntOrPtr1920{i = 42};
//    u2 := IntOrPtr1920{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1920: int;

struct Vector1920 {
    x: int;
    y: int;
}

func fact_iter1920(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1920(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1920(n-1);
    }
}

const n1920 = 1 + sizeof(p1920);

var p1920: T1920*;

struct T1920 {
    a: int[n1920];
}


func example_test1921(): int {
    return fact_rec1921(10) == fact_iter1921(10);
}

union IntOrPtr1921 {
    i: int;
    p: int*;
}

// func f1921() {
//    u1 := IntOrPtr1921{i = 42};
//    u2 := IntOrPtr1921{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1921: int;

struct Vector1921 {
    x: int;
    y: int;
}

func fact_iter1921(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1921(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1921(n-1);
    }
}

const n1921 = 1 + sizeof(p1921);

var p1921: T1921*;

struct T1921 {
    a: int[n1921];
}


func example_test1922(): int {
    return fact_rec1922(10) == fact_iter1922(10);
}

union IntOrPtr1922 {
    i: int;
    p: int*;
}

// func f1922() {
//    u1 := IntOrPtr1922{i = 42};
//    u2 := IntOrPtr1922{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1922: int;

struct Vector1922 {
    x: int;
    y: int;
}

func fact_iter1922(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1922(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1922(n-1);
    }
}

const n1922 = 1 + sizeof(p1922);

var p1922: T1922*;

struct T1922 {
    a: int[n1922];
}


func example_test1923(): int {
    return fact_rec1923(10) == fact_iter1923(10);
}

union IntOrPtr1923 {
    i: int;
    p: int*;
}

// func f1923() {
//    u1 := IntOrPtr1923{i = 42};
//    u2 := IntOrPtr1923{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1923: int;

struct Vector1923 {
    x: int;
    y: int;
}

func fact_iter1923(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1923(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1923(n-1);
    }
}

const n1923 = 1 + sizeof(p1923);

var p1923: T1923*;

struct T1923 {
    a: int[n1923];
}


func example_test1924(): int {
    return fact_rec1924(10) == fact_iter1924(10);
}

union IntOrPtr1924 {
    i: int;
    p: int*;
}

// func f1924() {
//    u1 := IntOrPtr1924{i = 42};
//    u2 := IntOrPtr1924{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1924: int;

struct Vector1924 {
    x: int;
    y: int;
}

func fact_iter1924(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1924(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1924(n-1);
    }
}

const n1924 = 1 + sizeof(p1924);

var p1924: T1924*;

struct T1924 {
    a: int[n1924];
}


func example_test1925(): int {
    return fact_rec1925(10) == fact_iter1925(10);
}

union IntOrPtr1925 {
    i: int;
    p: int*;
}

// func f1925() {
//    u1 := IntOrPtr1925{i = 42};
//    u2 := IntOrPtr1925{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1925: int;

struct Vector1925 {
    x: int;
    y: int;
}

func fact_iter1925(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1925(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1925(n-1);
    }
}

const n1925 = 1 + sizeof(p1925);

var p1925: T1925*;

struct T1925 {
    a: int[n1925];
}


func example_test1926(): int {
    return fact_rec1926(10) == fact_iter1926(10);
}

union IntOrPtr1926 {
    i: int;
    p: int*;
}

// func f1926() {
//    u1 := IntOrPtr1926{i = 42};
//    u2 := IntOrPtr1926{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1926: int;

struct Vector1926 {
    x: int;
    y: int;
}

func fact_iter1926(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1926(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1926(n-1);
    }
}

const n1926 = 1 + sizeof(p1926);

var p1926: T1926*;

struct T1926 {
    a: int[n1926];
}


func example_test1927(): int {
    return fact_rec1927(10) == fact_iter1927(10);
}

union IntOrPtr1927 {
    i: int;
    p: int*;
}

// func f1927() {
//    u1 := IntOrPtr1927{i = 42};
//    u2 := IntOrPtr1927{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1927: int;

struct Vector1927 {
    x: int;
    y: int;
}

func fact_iter1927(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1927(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1927(n-1);
    }
}

const n1927 = 1 + sizeof(p1927);

var p1927: T1927*;

struct T1927 {
    a: int[n1927];
}


func example_test1928(): int {
    return fact_rec1928(10) == fact_iter1928(10);
}

union IntOrPtr1928 {
    i: int;
    p: int*;
}

// func f1928() {
//    u1 := IntOrPtr1928{i = 42};
//    u2 := IntOrPtr1928{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1928: int;

struct Vector1928 {
    x: int;
    y: int;
}

func fact_iter1928(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1928(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1928(n-1);
    }
}

const n1928 = 1 + sizeof(p1928);

var p1928: T1928*;

struct T1928 {
    a: int[n1928];
}


func example_test1929(): int {
    return fact_rec1929(10) == fact_iter1929(10);
}

union IntOrPtr1929 {
    i: int;
    p: int*;
}

// func f1929() {
//    u1 := IntOrPtr1929{i = 42};
//    u2 := IntOrPtr1929{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1929: int;

struct Vector1929 {
    x: int;
    y: int;
}

func fact_iter1929(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1929(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1929(n-1);
    }
}

const n1929 = 1 + sizeof(p1929);

var p1929: T1929*;

struct T1929 {
    a: int[n1929];
}


func example_test1930(): int {
    return fact_rec1930(10) == fact_iter1930(10);
}

union IntOrPtr1930 {
    i: int;
    p: int*;
}

// func f1930() {
//    u1 := IntOrPtr1930{i = 42};
//    u2 := IntOrPtr1930{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1930: int;

struct Vector1930 {
    x: int;
    y: int;
}

func fact_iter1930(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1930(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1930(n-1);
    }
}

const n1930 = 1 + sizeof(p1930);

var p1930: T1930*;

struct T1930 {
    a: int[n1930];
}


func example_test1931(): int {
    return fact_rec1931(10) == fact_iter1931(10);
}

union IntOrPtr1931 {
    i: int;
    p: int*;
}

// func f1931() {
//    u1 := IntOrPtr1931{i = 42};
//    u2 := IntOrPtr1931{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1931: int;

struct Vector1931 {
    x: int;
    y: int;
}

func fact_iter1931(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1931(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1931(n-1);
    }
}

const n1931 = 1 + sizeof(p1931);

var p1931: T1931*;

struct T1931 {
    a: int[n1931];
}


func example_test1932(): int {
    return fact_rec1932(10) == fact_iter1932(10);
}

union IntOrPtr1932 {
    i: int;
    p: int*;
}

// func f1932() {
//    u1 := IntOrPtr1932{i = 42};
//    u2 := IntOrPtr1932{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1932: int;

struct Vector1932 {
    x: int;
    y: int;
}

func fact_iter1932(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1932(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1932(n-1);
    }
}

const n1932 = 1 + sizeof(p1932);

var p1932: T1932*;

struct T1932 {
    a: int[n1932];
}


func example_test1933(): int {
    return fact_rec1933(10) == fact_iter1933(10);
}

union IntOrPtr1933 {
    i: int;
    p: int*;
}

// func f1933() {
//    u1 := IntOrPtr1933{i = 42};
//    u2 := IntOrPtr1933{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1933: int;

struct Vector1933 {
    x: int;
    y: int;
}

func fact_iter1933(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1933(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1933(n-1);
    }
}

const n1933 = 1 + sizeof(p1933);

var p1933: T1933*;

struct T1933 {
    a: int[n1933];
}


func example_test1934(): int {
    return fact_rec1934(10) == fact_iter1934(10);
}

union IntOrPtr1934 {
    i: int;
    p: int*;
}

// func f1934() {
//    u1 := IntOrPtr1934{i = 42};
//    u2 := IntOrPtr1934{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1934: int;

struct Vector1934 {
    x: int;
    y: int;
}

func fact_iter1934(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1934(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1934(n-1);
    }
}

const n1934 = 1 + sizeof(p1934);

var p1934: T1934*;

struct T1934 {
    a: int[n1934];
}


func example_test1935(): int {
    return fact_rec1935(10) == fact_iter1935(10);
}

union IntOrPtr1935 {
    i: int;
    p: int*;
}

// func f1935() {
//    u1 := IntOrPtr1935{i = 42};
//    u2 := IntOrPtr1935{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1935: int;

struct Vector1935 {
    x: int;
    y: int;
}

func fact_iter1935(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1935(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1935(n-1);
    }
}

const n1935 = 1 + sizeof(p1935);

var p1935: T1935*;

struct T1935 {
    a: int[n1935];
}


func example_test1936(): int {
    return fact_rec1936(10) == fact_iter1936(10);
}

union IntOrPtr1936 {
    i: int;
    p: int*;
}

// func f1936() {
//    u1 := IntOrPtr1936{i = 42};
//    u2 := IntOrPtr1936{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1936: int;

struct Vector1936 {
    x: int;
    y: int;
}

func fact_iter1936(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1936(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1936(n-1);
    }
}

const n1936 = 1 + sizeof(p1936);

var p1936: T1936*;

struct T1936 {
    a: int[n1936];
}


func example_test1937(): int {
    return fact_rec1937(10) == fact_iter1937(10);
}

union IntOrPtr1937 {
    i: int;
    p: int*;
}

// func f1937() {
//    u1 := IntOrPtr1937{i = 42};
//    u2 := IntOrPtr1937{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1937: int;

struct Vector1937 {
    x: int;
    y: int;
}

func fact_iter1937(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1937(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1937(n-1);
    }
}

const n1937 = 1 + sizeof(p1937);

var p1937: T1937*;

struct T1937 {
    a: int[n1937];
}


func example_test1938(): int {
    return fact_rec1938(10) == fact_iter1938(10);
}

union IntOrPtr1938 {
    i: int;
    p: int*;
}

// func f1938() {
//    u1 := IntOrPtr1938{i = 42};
//    u2 := IntOrPtr1938{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1938: int;

struct Vector1938 {
    x: int;
    y: int;
}

func fact_iter1938(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1938(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1938(n-1);
    }
}

const n1938 = 1 + sizeof(p1938);

var p1938: T1938*;

struct T1938 {
    a: int[n1938];
}


func example_test1939(): int {
    return fact_rec1939(10) == fact_iter1939(10);
}

union IntOrPtr1939 {
    i: int;
    p: int*;
}

// func f1939() {
//    u1 := IntOrPtr1939{i = 42};
//    u2 := IntOrPtr1939{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1939: int;

struct Vector1939 {
    x: int;
    y: int;
}

func fact_iter1939(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1939(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1939(n-1);
    }
}

const n1939 = 1 + sizeof(p1939);

var p1939: T1939*;

struct T1939 {
    a: int[n1939];
}


func example_test1940(): int {
    return fact_rec1940(10) == fact_iter1940(10);
}

union IntOrPtr1940 {
    i: int;
    p: int*;
}

// func f1940() {
//    u1 := IntOrPtr1940{i = 42};
//    u2 := IntOrPtr1940{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1940: int;

struct Vector1940 {
    x: int;
    y: int;
}

func fact_iter1940(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1940(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1940(n-1);
    }
}

const n1940 = 1 + sizeof(p1940);

var p1940: T1940*;

struct T1940 {
    a: int[n1940];
}


func example_test1941(): int {
    return fact_rec1941(10) == fact_iter1941(10);
}

union IntOrPtr1941 {
    i: int;
    p: int*;
}

// func f1941() {
//    u1 := IntOrPtr1941{i = 42};
//    u2 := IntOrPtr1941{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1941: int;

struct Vector1941 {
    x: int;
    y: int;
}

func fact_iter1941(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1941(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1941(n-1);
    }
}

const n1941 = 1 + sizeof(p1941);

var p1941: T1941*;

struct T1941 {
    a: int[n1941];
}


func example_test1942(): int {
    return fact_rec1942(10) == fact_iter1942(10);
}

union IntOrPtr1942 {
    i: int;
    p: int*;
}

// func f1942() {
//    u1 := IntOrPtr1942{i = 42};
//    u2 := IntOrPtr1942{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1942: int;

struct Vector1942 {
    x: int;
    y: int;
}

func fact_iter1942(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1942(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1942(n-1);
    }
}

const n1942 = 1 + sizeof(p1942);

var p1942: T1942*;

struct T1942 {
    a: int[n1942];
}


func example_test1943(): int {
    return fact_rec1943(10) == fact_iter1943(10);
}

union IntOrPtr1943 {
    i: int;
    p: int*;
}

// func f1943() {
//    u1 := IntOrPtr1943{i = 42};
//    u2 := IntOrPtr1943{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1943: int;

struct Vector1943 {
    x: int;
    y: int;
}

func fact_iter1943(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1943(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1943(n-1);
    }
}

const n1943 = 1 + sizeof(p1943);

var p1943: T1943*;

struct T1943 {
    a: int[n1943];
}


func example_test1944(): int {
    return fact_rec1944(10) == fact_iter1944(10);
}

union IntOrPtr1944 {
    i: int;
    p: int*;
}

// func f1944() {
//    u1 := IntOrPtr1944{i = 42};
//    u2 := IntOrPtr1944{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1944: int;

struct Vector1944 {
    x: int;
    y: int;
}

func fact_iter1944(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1944(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1944(n-1);
    }
}

const n1944 = 1 + sizeof(p1944);

var p1944: T1944*;

struct T1944 {
    a: int[n1944];
}


func example_test1945(): int {
    return fact_rec1945(10) == fact_iter1945(10);
}

union IntOrPtr1945 {
    i: int;
    p: int*;
}

// func f1945() {
//    u1 := IntOrPtr1945{i = 42};
//    u2 := IntOrPtr1945{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1945: int;

struct Vector1945 {
    x: int;
    y: int;
}

func fact_iter1945(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1945(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1945(n-1);
    }
}

const n1945 = 1 + sizeof(p1945);

var p1945: T1945*;

struct T1945 {
    a: int[n1945];
}


func example_test1946(): int {
    return fact_rec1946(10) == fact_iter1946(10);
}

union IntOrPtr1946 {
    i: int;
    p: int*;
}

// func f1946() {
//    u1 := IntOrPtr1946{i = 42};
//    u2 := IntOrPtr1946{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1946: int;

struct Vector1946 {
    x: int;
    y: int;
}

func fact_iter1946(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1946(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1946(n-1);
    }
}

const n1946 = 1 + sizeof(p1946);

var p1946: T1946*;

struct T1946 {
    a: int[n1946];
}


func example_test1947(): int {
    return fact_rec1947(10) == fact_iter1947(10);
}

union IntOrPtr1947 {
    i: int;
    p: int*;
}

// func f1947() {
//    u1 := IntOrPtr1947{i = 42};
//    u2 := IntOrPtr1947{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1947: int;

struct Vector1947 {
    x: int;
    y: int;
}

func fact_iter1947(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1947(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1947(n-1);
    }
}

const n1947 = 1 + sizeof(p1947);

var p1947: T1947*;

struct T1947 {
    a: int[n1947];
}


func example_test1948(): int {
    return fact_rec1948(10) == fact_iter1948(10);
}

union IntOrPtr1948 {
    i: int;
    p: int*;
}

// func f1948() {
//    u1 := IntOrPtr1948{i = 42};
//    u2 := IntOrPtr1948{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1948: int;

struct Vector1948 {
    x: int;
    y: int;
}

func fact_iter1948(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1948(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1948(n-1);
    }
}

const n1948 = 1 + sizeof(p1948);

var p1948: T1948*;

struct T1948 {
    a: int[n1948];
}


func example_test1949(): int {
    return fact_rec1949(10) == fact_iter1949(10);
}

union IntOrPtr1949 {
    i: int;
    p: int*;
}

// func f1949() {
//    u1 := IntOrPtr1949{i = 42};
//    u2 := IntOrPtr1949{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1949: int;

struct Vector1949 {
    x: int;
    y: int;
}

func fact_iter1949(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1949(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1949(n-1);
    }
}

const n1949 = 1 + sizeof(p1949);

var p1949: T1949*;

struct T1949 {
    a: int[n1949];
}


func example_test1950(): int {
    return fact_rec1950(10) == fact_iter1950(10);
}

union IntOrPtr1950 {
    i: int;
    p: int*;
}

// func f1950() {
//    u1 := IntOrPtr1950{i = 42};
//    u2 := IntOrPtr1950{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1950: int;

struct Vector1950 {
    x: int;
    y: int;
}

func fact_iter1950(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1950(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1950(n-1);
    }
}

const n1950 = 1 + sizeof(p1950);

var p1950: T1950*;

struct T1950 {
    a: int[n1950];
}


func example_test1951(): int {
    return fact_rec1951(10) == fact_iter1951(10);
}

union IntOrPtr1951 {
    i: int;
    p: int*;
}

// func f1951() {
//    u1 := IntOrPtr1951{i = 42};
//    u2 := IntOrPtr1951{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1951: int;

struct Vector1951 {
    x: int;
    y: int;
}

func fact_iter1951(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1951(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1951(n-1);
    }
}

const n1951 = 1 + sizeof(p1951);

var p1951: T1951*;

struct T1951 {
    a: int[n1951];
}


func example_test1952(): int {
    return fact_rec1952(10) == fact_iter1952(10);
}

union IntOrPtr1952 {
    i: int;
    p: int*;
}

// func f1952() {
//    u1 := IntOrPtr1952{i = 42};
//    u2 := IntOrPtr1952{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1952: int;

struct Vector1952 {
    x: int;
    y: int;
}

func fact_iter1952(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1952(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1952(n-1);
    }
}

const n1952 = 1 + sizeof(p1952);

var p1952: T1952*;

struct T1952 {
    a: int[n1952];
}


func example_test1953(): int {
    return fact_rec1953(10) == fact_iter1953(10);
}

union IntOrPtr1953 {
    i: int;
    p: int*;
}

// func f1953() {
//    u1 := IntOrPtr1953{i = 42};
//    u2 := IntOrPtr1953{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1953: int;

struct Vector1953 {
    x: int;
    y: int;
}

func fact_iter1953(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1953(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1953(n-1);
    }
}

const n1953 = 1 + sizeof(p1953);

var p1953: T1953*;

struct T1953 {
    a: int[n1953];
}


func example_test1954(): int {
    return fact_rec1954(10) == fact_iter1954(10);
}

union IntOrPtr1954 {
    i: int;
    p: int*;
}

// func f1954() {
//    u1 := IntOrPtr1954{i = 42};
//    u2 := IntOrPtr1954{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1954: int;

struct Vector1954 {
    x: int;
    y: int;
}

func fact_iter1954(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1954(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1954(n-1);
    }
}

const n1954 = 1 + sizeof(p1954);

var p1954: T1954*;

struct T1954 {
    a: int[n1954];
}


func example_test1955(): int {
    return fact_rec1955(10) == fact_iter1955(10);
}

union IntOrPtr1955 {
    i: int;
    p: int*;
}

// func f1955() {
//    u1 := IntOrPtr1955{i = 42};
//    u2 := IntOrPtr1955{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1955: int;

struct Vector1955 {
    x: int;
    y: int;
}

func fact_iter1955(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1955(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1955(n-1);
    }
}

const n1955 = 1 + sizeof(p1955);

var p1955: T1955*;

struct T1955 {
    a: int[n1955];
}


func example_test1956(): int {
    return fact_rec1956(10) == fact_iter1956(10);
}

union IntOrPtr1956 {
    i: int;
    p: int*;
}

// func f1956() {
//    u1 := IntOrPtr1956{i = 42};
//    u2 := IntOrPtr1956{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1956: int;

struct Vector1956 {
    x: int;
    y: int;
}

func fact_iter1956(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1956(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1956(n-1);
    }
}

const n1956 = 1 + sizeof(p1956);

var p1956: T1956*;

struct T1956 {
    a: int[n1956];
}


func example_test1957(): int {
    return fact_rec1957(10) == fact_iter1957(10);
}

union IntOrPtr1957 {
    i: int;
    p: int*;
}

// func f1957() {
//    u1 := IntOrPtr1957{i = 42};
//    u2 := IntOrPtr1957{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1957: int;

struct Vector1957 {
    x: int;
    y: int;
}

func fact_iter1957(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1957(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1957(n-1);
    }
}

const n1957 = 1 + sizeof(p1957);

var p1957: T1957*;

struct T1957 {
    a: int[n1957];
}


func example_test1958(): int {
    return fact_rec1958(10) == fact_iter1958(10);
}

union IntOrPtr1958 {
    i: int;
    p: int*;
}

// func f1958() {
//    u1 := IntOrPtr1958{i = 42};
//    u2 := IntOrPtr1958{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1958: int;

struct Vector1958 {
    x: int;
    y: int;
}

func fact_iter1958(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1958(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1958(n-1);
    }
}

const n1958 = 1 + sizeof(p1958);

var p1958: T1958*;

struct T1958 {
    a: int[n1958];
}


func example_test1959(): int {
    return fact_rec1959(10) == fact_iter1959(10);
}

union IntOrPtr1959 {
    i: int;
    p: int*;
}

// func f1959() {
//    u1 := IntOrPtr1959{i = 42};
//    u2 := IntOrPtr1959{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1959: int;

struct Vector1959 {
    x: int;
    y: int;
}

func fact_iter1959(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1959(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1959(n-1);
    }
}

const n1959 = 1 + sizeof(p1959);

var p1959: T1959*;

struct T1959 {
    a: int[n1959];
}


func example_test1960(): int {
    return fact_rec1960(10) == fact_iter1960(10);
}

union IntOrPtr1960 {
    i: int;
    p: int*;
}

// func f1960() {
//    u1 := IntOrPtr1960{i = 42};
//    u2 := IntOrPtr1960{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1960: int;

struct Vector1960 {
    x: int;
    y: int;
}

func fact_iter1960(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1960(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1960(n-1);
    }
}

const n1960 = 1 + sizeof(p1960);

var p1960: T1960*;

struct T1960 {
    a: int[n1960];
}


func example_test1961(): int {
    return fact_rec1961(10) == fact_iter1961(10);
}

union IntOrPtr1961 {
    i: int;
    p: int*;
}

// func f1961() {
//    u1 := IntOrPtr1961{i = 42};
//    u2 := IntOrPtr1961{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1961: int;

struct Vector1961 {
    x: int;
    y: int;
}

func fact_iter1961(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1961(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1961(n-1);
    }
}

const n1961 = 1 + sizeof(p1961);

var p1961: T1961*;

struct T1961 {
    a: int[n1961];
}


func example_test1962(): int {
    return fact_rec1962(10) == fact_iter1962(10);
}

union IntOrPtr1962 {
    i: int;
    p: int*;
}

// func f1962() {
//    u1 := IntOrPtr1962{i = 42};
//    u2 := IntOrPtr1962{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1962: int;

struct Vector1962 {
    x: int;
    y: int;
}

func fact_iter1962(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1962(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1962(n-1);
    }
}

const n1962 = 1 + sizeof(p1962);

var p1962: T1962*;

struct T1962 {
    a: int[n1962];
}


func example_test1963(): int {
    return fact_rec1963(10) == fact_iter1963(10);
}

union IntOrPtr1963 {
    i: int;
    p: int*;
}

// func f1963() {
//    u1 := IntOrPtr1963{i = 42};
//    u2 := IntOrPtr1963{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1963: int;

struct Vector1963 {
    x: int;
    y: int;
}

func fact_iter1963(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1963(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1963(n-1);
    }
}

const n1963 = 1 + sizeof(p1963);

var p1963: T1963*;

struct T1963 {
    a: int[n1963];
}


func example_test1964(): int {
    return fact_rec1964(10) == fact_iter1964(10);
}

union IntOrPtr1964 {
    i: int;
    p: int*;
}

// func f1964() {
//    u1 := IntOrPtr1964{i = 42};
//    u2 := IntOrPtr1964{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1964: int;

struct Vector1964 {
    x: int;
    y: int;
}

func fact_iter1964(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1964(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1964(n-1);
    }
}

const n1964 = 1 + sizeof(p1964);

var p1964: T1964*;

struct T1964 {
    a: int[n1964];
}


func example_test1965(): int {
    return fact_rec1965(10) == fact_iter1965(10);
}

union IntOrPtr1965 {
    i: int;
    p: int*;
}

// func f1965() {
//    u1 := IntOrPtr1965{i = 42};
//    u2 := IntOrPtr1965{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1965: int;

struct Vector1965 {
    x: int;
    y: int;
}

func fact_iter1965(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1965(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1965(n-1);
    }
}

const n1965 = 1 + sizeof(p1965);

var p1965: T1965*;

struct T1965 {
    a: int[n1965];
}


func example_test1966(): int {
    return fact_rec1966(10) == fact_iter1966(10);
}

union IntOrPtr1966 {
    i: int;
    p: int*;
}

// func f1966() {
//    u1 := IntOrPtr1966{i = 42};
//    u2 := IntOrPtr1966{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1966: int;

struct Vector1966 {
    x: int;
    y: int;
}

func fact_iter1966(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1966(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1966(n-1);
    }
}

const n1966 = 1 + sizeof(p1966);

var p1966: T1966*;

struct T1966 {
    a: int[n1966];
}


func example_test1967(): int {
    return fact_rec1967(10) == fact_iter1967(10);
}

union IntOrPtr1967 {
    i: int;
    p: int*;
}

// func f1967() {
//    u1 := IntOrPtr1967{i = 42};
//    u2 := IntOrPtr1967{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1967: int;

struct Vector1967 {
    x: int;
    y: int;
}

func fact_iter1967(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1967(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1967(n-1);
    }
}

const n1967 = 1 + sizeof(p1967);

var p1967: T1967*;

struct T1967 {
    a: int[n1967];
}


func example_test1968(): int {
    return fact_rec1968(10) == fact_iter1968(10);
}

union IntOrPtr1968 {
    i: int;
    p: int*;
}

// func f1968() {
//    u1 := IntOrPtr1968{i = 42};
//    u2 := IntOrPtr1968{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1968: int;

struct Vector1968 {
    x: int;
    y: int;
}

func fact_iter1968(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1968(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1968(n-1);
    }
}

const n1968 = 1 + sizeof(p1968);

var p1968: T1968*;

struct T1968 {
    a: int[n1968];
}


func example_test1969(): int {
    return fact_rec1969(10) == fact_iter1969(10);
}

union IntOrPtr1969 {
    i: int;
    p: int*;
}

// func f1969() {
//    u1 := IntOrPtr1969{i = 42};
//    u2 := IntOrPtr1969{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1969: int;

struct Vector1969 {
    x: int;
    y: int;
}

func fact_iter1969(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1969(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1969(n-1);
    }
}

const n1969 = 1 + sizeof(p1969);

var p1969: T1969*;

struct T1969 {
    a: int[n1969];
}


func example_test1970(): int {
    return fact_rec1970(10) == fact_iter1970(10);
}

union IntOrPtr1970 {
    i: int;
    p: int*;
}

// func f1970() {
//    u1 := IntOrPtr1970{i = 42};
//    u2 := IntOrPtr1970{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1970: int;

struct Vector1970 {
    x: int;
    y: int;
}

func fact_iter1970(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1970(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1970(n-1);
    }
}

const n1970 = 1 + sizeof(p1970);

var p1970: T1970*;

struct T1970 {
    a: int[n1970];
}


func example_test1971(): int {
    return fact_rec1971(10) == fact_iter1971(10);
}

union IntOrPtr1971 {
    i: int;
    p: int*;
}

// func f1971() {
//    u1 := IntOrPtr1971{i = 42};
//    u2 := IntOrPtr1971{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1971: int;

struct Vector1971 {
    x: int;
    y: int;
}

func fact_iter1971(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1971(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1971(n-1);
    }
}

const n1971 = 1 + sizeof(p1971);

var p1971: T1971*;

struct T1971 {
    a: int[n1971];
}


func example_test1972(): int {
    return fact_rec1972(10) == fact_iter1972(10);
}

union IntOrPtr1972 {
    i: int;
    p: int*;
}

// func f1972() {
//    u1 := IntOrPtr1972{i = 42};
//    u2 := IntOrPtr1972{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1972: int;

struct Vector1972 {
    x: int;
    y: int;
}

func fact_iter1972(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1972(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1972(n-1);
    }
}

const n1972 = 1 + sizeof(p1972);

var p1972: T1972*;

struct T1972 {
    a: int[n1972];
}


func example_test1973(): int {
    return fact_rec1973(10) == fact_iter1973(10);
}

union IntOrPtr1973 {
    i: int;
    p: int*;
}

// func f1973() {
//    u1 := IntOrPtr1973{i = 42};
//    u2 := IntOrPtr1973{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1973: int;

struct Vector1973 {
    x: int;
    y: int;
}

func fact_iter1973(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1973(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1973(n-1);
    }
}

const n1973 = 1 + sizeof(p1973);

var p1973: T1973*;

struct T1973 {
    a: int[n1973];
}


func example_test1974(): int {
    return fact_rec1974(10) == fact_iter1974(10);
}

union IntOrPtr1974 {
    i: int;
    p: int*;
}

// func f1974() {
//    u1 := IntOrPtr1974{i = 42};
//    u2 := IntOrPtr1974{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1974: int;

struct Vector1974 {
    x: int;
    y: int;
}

func fact_iter1974(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1974(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1974(n-1);
    }
}

const n1974 = 1 + sizeof(p1974);

var p1974: T1974*;

struct T1974 {
    a: int[n1974];
}


func example_test1975(): int {
    return fact_rec1975(10) == fact_iter1975(10);
}

union IntOrPtr1975 {
    i: int;
    p: int*;
}

// func f1975() {
//    u1 := IntOrPtr1975{i = 42};
//    u2 := IntOrPtr1975{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1975: int;

struct Vector1975 {
    x: int;
    y: int;
}

func fact_iter1975(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1975(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1975(n-1);
    }
}

const n1975 = 1 + sizeof(p1975);

var p1975: T1975*;

struct T1975 {
    a: int[n1975];
}


func example_test1976(): int {
    return fact_rec1976(10) == fact_iter1976(10);
}

union IntOrPtr1976 {
    i: int;
    p: int*;
}

// func f1976() {
//    u1 := IntOrPtr1976{i = 42};
//    u2 := IntOrPtr1976{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1976: int;

struct Vector1976 {
    x: int;
    y: int;
}

func fact_iter1976(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1976(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1976(n-1);
    }
}

const n1976 = 1 + sizeof(p1976);

var p1976: T1976*;

struct T1976 {
    a: int[n1976];
}


func example_test1977(): int {
    return fact_rec1977(10) == fact_iter1977(10);
}

union IntOrPtr1977 {
    i: int;
    p: int*;
}

// func f1977() {
//    u1 := IntOrPtr1977{i = 42};
//    u2 := IntOrPtr1977{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1977: int;

struct Vector1977 {
    x: int;
    y: int;
}

func fact_iter1977(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1977(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1977(n-1);
    }
}

const n1977 = 1 + sizeof(p1977);

var p1977: T1977*;

struct T1977 {
    a: int[n1977];
}


func example_test1978(): int {
    return fact_rec1978(10) == fact_iter1978(10);
}

union IntOrPtr1978 {
    i: int;
    p: int*;
}

// func f1978() {
//    u1 := IntOrPtr1978{i = 42};
//    u2 := IntOrPtr1978{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1978: int;

struct Vector1978 {
    x: int;
    y: int;
}

func fact_iter1978(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1978(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1978(n-1);
    }
}

const n1978 = 1 + sizeof(p1978);

var p1978: T1978*;

struct T1978 {
    a: int[n1978];
}


func example_test1979(): int {
    return fact_rec1979(10) == fact_iter1979(10);
}

union IntOrPtr1979 {
    i: int;
    p: int*;
}

// func f1979() {
//    u1 := IntOrPtr1979{i = 42};
//    u2 := IntOrPtr1979{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1979: int;

struct Vector1979 {
    x: int;
    y: int;
}

func fact_iter1979(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1979(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1979(n-1);
    }
}

const n1979 = 1 + sizeof(p1979);

var p1979: T1979*;

struct T1979 {
    a: int[n1979];
}


func example_test1980(): int {
    return fact_rec1980(10) == fact_iter1980(10);
}

union IntOrPtr1980 {
    i: int;
    p: int*;
}

// func f1980() {
//    u1 := IntOrPtr1980{i = 42};
//    u2 := IntOrPtr1980{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1980: int;

struct Vector1980 {
    x: int;
    y: int;
}

func fact_iter1980(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1980(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1980(n-1);
    }
}

const n1980 = 1 + sizeof(p1980);

var p1980: T1980*;

struct T1980 {
    a: int[n1980];
}


func example_test1981(): int {
    return fact_rec1981(10) == fact_iter1981(10);
}

union IntOrPtr1981 {
    i: int;
    p: int*;
}

// func f1981() {
//    u1 := IntOrPtr1981{i = 42};
//    u2 := IntOrPtr1981{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1981: int;

struct Vector1981 {
    x: int;
    y: int;
}

func fact_iter1981(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1981(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1981(n-1);
    }
}

const n1981 = 1 + sizeof(p1981);

var p1981: T1981*;

struct T1981 {
    a: int[n1981];
}


func example_test1982(): int {
    return fact_rec1982(10) == fact_iter1982(10);
}

union IntOrPtr1982 {
    i: int;
    p: int*;
}

// func f1982() {
//    u1 := IntOrPtr1982{i = 42};
//    u2 := IntOrPtr1982{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1982: int;

struct Vector1982 {
    x: int;
    y: int;
}

func fact_iter1982(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1982(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1982(n-1);
    }
}

const n1982 = 1 + sizeof(p1982);

var p1982: T1982*;

struct T1982 {
    a: int[n1982];
}


func example_test1983(): int {
    return fact_rec1983(10) == fact_iter1983(10);
}

union IntOrPtr1983 {
    i: int;
    p: int*;
}

// func f1983() {
//    u1 := IntOrPtr1983{i = 42};
//    u2 := IntOrPtr1983{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1983: int;

struct Vector1983 {
    x: int;
    y: int;
}

func fact_iter1983(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1983(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1983(n-1);
    }
}

const n1983 = 1 + sizeof(p1983);

var p1983: T1983*;

struct T1983 {
    a: int[n1983];
}


func example_test1984(): int {
    return fact_rec1984(10) == fact_iter1984(10);
}

union IntOrPtr1984 {
    i: int;
    p: int*;
}

// func f1984() {
//    u1 := IntOrPtr1984{i = 42};
//    u2 := IntOrPtr1984{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1984: int;

struct Vector1984 {
    x: int;
    y: int;
}

func fact_iter1984(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1984(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1984(n-1);
    }
}

const n1984 = 1 + sizeof(p1984);

var p1984: T1984*;

struct T1984 {
    a: int[n1984];
}


func example_test1985(): int {
    return fact_rec1985(10) == fact_iter1985(10);
}

union IntOrPtr1985 {
    i: int;
    p: int*;
}

// func f1985() {
//    u1 := IntOrPtr1985{i = 42};
//    u2 := IntOrPtr1985{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1985: int;

struct Vector1985 {
    x: int;
    y: int;
}

func fact_iter1985(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1985(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1985(n-1);
    }
}

const n1985 = 1 + sizeof(p1985);

var p1985: T1985*;

struct T1985 {
    a: int[n1985];
}


func example_test1986(): int {
    return fact_rec1986(10) == fact_iter1986(10);
}

union IntOrPtr1986 {
    i: int;
    p: int*;
}

// func f1986() {
//    u1 := IntOrPtr1986{i = 42};
//    u2 := IntOrPtr1986{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1986: int;

struct Vector1986 {
    x: int;
    y: int;
}

func fact_iter1986(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1986(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1986(n-1);
    }
}

const n1986 = 1 + sizeof(p1986);

var p1986: T1986*;

struct T1986 {
    a: int[n1986];
}


func example_test1987(): int {
    return fact_rec1987(10) == fact_iter1987(10);
}

union IntOrPtr1987 {
    i: int;
    p: int*;
}

// func f1987() {
//    u1 := IntOrPtr1987{i = 42};
//    u2 := IntOrPtr1987{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1987: int;

struct Vector1987 {
    x: int;
    y: int;
}

func fact_iter1987(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1987(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1987(n-1);
    }
}

const n1987 = 1 + sizeof(p1987);

var p1987: T1987*;

struct T1987 {
    a: int[n1987];
}


func example_test1988(): int {
    return fact_rec1988(10) == fact_iter1988(10);
}

union IntOrPtr1988 {
    i: int;
    p: int*;
}

// func f1988() {
//    u1 := IntOrPtr1988{i = 42};
//    u2 := IntOrPtr1988{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1988: int;

struct Vector1988 {
    x: int;
    y: int;
}

func fact_iter1988(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1988(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1988(n-1);
    }
}

const n1988 = 1 + sizeof(p1988);

var p1988: T1988*;

struct T1988 {
    a: int[n1988];
}


func example_test1989(): int {
    return fact_rec1989(10) == fact_iter1989(10);
}

union IntOrPtr1989 {
    i: int;
    p: int*;
}

// func f1989() {
//    u1 := IntOrPtr1989{i = 42};
//    u2 := IntOrPtr1989{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1989: int;

struct Vector1989 {
    x: int;
    y: int;
}

func fact_iter1989(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1989(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1989(n-1);
    }
}

const n1989 = 1 + sizeof(p1989);

var p1989: T1989*;

struct T1989 {
    a: int[n1989];
}


func example_test1990(): int {
    return fact_rec1990(10) == fact_iter1990(10);
}

union IntOrPtr1990 {
    i: int;
    p: int*;
}

// func f1990() {
//    u1 := IntOrPtr1990{i = 42};
//    u2 := IntOrPtr1990{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1990: int;

struct Vector1990 {
    x: int;
    y: int;
}

func fact_iter1990(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1990(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1990(n-1);
    }
}

const n1990 = 1 + sizeof(p1990);

var p1990: T1990*;

struct T1990 {
    a: int[n1990];
}


func example_test1991(): int {
    return fact_rec1991(10) == fact_iter1991(10);
}

union IntOrPtr1991 {
    i: int;
    p: int*;
}

// func f1991() {
//    u1 := IntOrPtr1991{i = 42};
//    u2 := IntOrPtr1991{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1991: int;

struct Vector1991 {
    x: int;
    y: int;
}

func fact_iter1991(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1991(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1991(n-1);
    }
}

const n1991 = 1 + sizeof(p1991);

var p1991: T1991*;

struct T1991 {
    a: int[n1991];
}


func example_test1992(): int {
    return fact_rec1992(10) == fact_iter1992(10);
}

union IntOrPtr1992 {
    i: int;
    p: int*;
}

// func f1992() {
//    u1 := IntOrPtr1992{i = 42};
//    u2 := IntOrPtr1992{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1992: int;

struct Vector1992 {
    x: int;
    y: int;
}

func fact_iter1992(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1992(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1992(n-1);
    }
}

const n1992 = 1 + sizeof(p1992);

var p1992: T1992*;

struct T1992 {
    a: int[n1992];
}


func example_test1993(): int {
    return fact_rec1993(10) == fact_iter1993(10);
}

union IntOrPtr1993 {
    i: int;
    p: int*;
}

// func f1993() {
//    u1 := IntOrPtr1993{i = 42};
//    u2 := IntOrPtr1993{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1993: int;

struct Vector1993 {
    x: int;
    y: int;
}

func fact_iter1993(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1993(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1993(n-1);
    }
}

const n1993 = 1 + sizeof(p1993);

var p1993: T1993*;

struct T1993 {
    a: int[n1993];
}


func example_test1994(): int {
    return fact_rec1994(10) == fact_iter1994(10);
}

union IntOrPtr1994 {
    i: int;
    p: int*;
}

// func f1994() {
//    u1 := IntOrPtr1994{i = 42};
//    u2 := IntOrPtr1994{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1994: int;

struct Vector1994 {
    x: int;
    y: int;
}

func fact_iter1994(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1994(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1994(n-1);
    }
}

const n1994 = 1 + sizeof(p1994);

var p1994: T1994*;

struct T1994 {
    a: int[n1994];
}


func example_test1995(): int {
    return fact_rec1995(10) == fact_iter1995(10);
}

union IntOrPtr1995 {
    i: int;
    p: int*;
}

// func f1995() {
//    u1 := IntOrPtr1995{i = 42};
//    u2 := IntOrPtr1995{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1995: int;

struct Vector1995 {
    x: int;
    y: int;
}

func fact_iter1995(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1995(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1995(n-1);
    }
}

const n1995 = 1 + sizeof(p1995);

var p1995: T1995*;

struct T1995 {
    a: int[n1995];
}


func example_test1996(): int {
    return fact_rec1996(10) == fact_iter1996(10);
}

union IntOrPtr1996 {
    i: int;
    p: int*;
}

// func f1996() {
//    u1 := IntOrPtr1996{i = 42};
//    u2 := IntOrPtr1996{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1996: int;

struct Vector1996 {
    x: int;
    y: int;
}

func fact_iter1996(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1996(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1996(n-1);
    }
}

const n1996 = 1 + sizeof(p1996);

var p1996: T1996*;

struct T1996 {
    a: int[n1996];
}


func example_test1997(): int {
    return fact_rec1997(10) == fact_iter1997(10);
}

union IntOrPtr1997 {
    i: int;
    p: int*;
}

// func f1997() {
//    u1 := IntOrPtr1997{i = 42};
//    u2 := IntOrPtr1997{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1997: int;

struct Vector1997 {
    x: int;
    y: int;
}

func fact_iter1997(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1997(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1997(n-1);
    }
}

const n1997 = 1 + sizeof(p1997);

var p1997: T1997*;

struct T1997 {
    a: int[n1997];
}


func example_test1998(): int {
    return fact_rec1998(10) == fact_iter1998(10);
}

union IntOrPtr1998 {
    i: int;
    p: int*;
}

// func f1998() {
//    u1 := IntOrPtr1998{i = 42};
//    u2 := IntOrPtr1998{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1998: int;

struct Vector1998 {
    x: int;
    y: int;
}

func fact_iter1998(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1998(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1998(n-1);
    }
}

const n1998 = 1 + sizeof(p1998);

var p1998: T1998*;

struct T1998 {
    a: int[n1998];
}


func example_test1999(): int {
    return fact_rec1999(10) == fact_iter1999(10);
}

union IntOrPtr1999 {
    i: int;
    p: int*;
}

// func f1999() {
//    u1 := IntOrPtr1999{i = 42};
//    u2 := IntOrPtr1999{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i1999: int;

struct Vector1999 {
    x: int;
    y: int;
}

func fact_iter1999(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec1999(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec1999(n-1);
    }
}

const n1999 = 1 + sizeof(p1999);

var p1999: T1999*;

struct T1999 {
    a: int[n1999];
}


func example_test2000(): int {
    return fact_rec2000(10) == fact_iter2000(10);
}

union IntOrPtr2000 {
    i: int;
    p: int*;
}

// func f2000() {
//    u1 := IntOrPtr2000{i = 42};
//    u2 := IntOrPtr2000{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2000: int;

struct Vector2000 {
    x: int;
    y: int;
}

func fact_iter2000(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2000(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2000(n-1);
    }
}

const n2000 = 1 + sizeof(p2000);

var p2000: T2000*;

struct T2000 {
    a: int[n2000];
}


func example_test2001(): int {
    return fact_rec2001(10) == fact_iter2001(10);
}

union IntOrPtr2001 {
    i: int;
    p: int*;
}

// func f2001() {
//    u1 := IntOrPtr2001{i = 42};
//    u2 := IntOrPtr2001{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2001: int;

struct Vector2001 {
    x: int;
    y: int;
}

func fact_iter2001(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2001(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2001(n-1);
    }
}

const n2001 = 1 + sizeof(p2001);

var p2001: T2001*;

struct T2001 {
    a: int[n2001];
}


func example_test2002(): int {
    return fact_rec2002(10) == fact_iter2002(10);
}

union IntOrPtr2002 {
    i: int;
    p: int*;
}

// func f2002() {
//    u1 := IntOrPtr2002{i = 42};
//    u2 := IntOrPtr2002{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2002: int;

struct Vector2002 {
    x: int;
    y: int;
}

func fact_iter2002(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2002(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2002(n-1);
    }
}

const n2002 = 1 + sizeof(p2002);

var p2002: T2002*;

struct T2002 {
    a: int[n2002];
}


func example_test2003(): int {
    return fact_rec2003(10) == fact_iter2003(10);
}

union IntOrPtr2003 {
    i: int;
    p: int*;
}

// func f2003() {
//    u1 := IntOrPtr2003{i = 42};
//    u2 := IntOrPtr2003{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2003: int;

struct Vector2003 {
    x: int;
    y: int;
}

func fact_iter2003(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2003(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2003(n-1);
    }
}

const n2003 = 1 + sizeof(p2003);

var p2003: T2003*;

struct T2003 {
    a: int[n2003];
}


func example_test2004(): int {
    return fact_rec2004(10) == fact_iter2004(10);
}

union IntOrPtr2004 {
    i: int;
    p: int*;
}

// func f2004() {
//    u1 := IntOrPtr2004{i = 42};
//    u2 := IntOrPtr2004{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2004: int;

struct Vector2004 {
    x: int;
    y: int;
}

func fact_iter2004(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2004(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2004(n-1);
    }
}

const n2004 = 1 + sizeof(p2004);

var p2004: T2004*;

struct T2004 {
    a: int[n2004];
}


func example_test2005(): int {
    return fact_rec2005(10) == fact_iter2005(10);
}

union IntOrPtr2005 {
    i: int;
    p: int*;
}

// func f2005() {
//    u1 := IntOrPtr2005{i = 42};
//    u2 := IntOrPtr2005{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2005: int;

struct Vector2005 {
    x: int;
    y: int;
}

func fact_iter2005(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2005(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2005(n-1);
    }
}

const n2005 = 1 + sizeof(p2005);

var p2005: T2005*;

struct T2005 {
    a: int[n2005];
}


func example_test2006(): int {
    return fact_rec2006(10) == fact_iter2006(10);
}

union IntOrPtr2006 {
    i: int;
    p: int*;
}

// func f2006() {
//    u1 := IntOrPtr2006{i = 42};
//    u2 := IntOrPtr2006{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2006: int;

struct Vector2006 {
    x: int;
    y: int;
}

func fact_iter2006(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2006(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2006(n-1);
    }
}

const n2006 = 1 + sizeof(p2006);

var p2006: T2006*;

struct T2006 {
    a: int[n2006];
}


func example_test2007(): int {
    return fact_rec2007(10) == fact_iter2007(10);
}

union IntOrPtr2007 {
    i: int;
    p: int*;
}

// func f2007() {
//    u1 := IntOrPtr2007{i = 42};
//    u2 := IntOrPtr2007{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2007: int;

struct Vector2007 {
    x: int;
    y: int;
}

func fact_iter2007(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2007(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2007(n-1);
    }
}

const n2007 = 1 + sizeof(p2007);

var p2007: T2007*;

struct T2007 {
    a: int[n2007];
}


func example_test2008(): int {
    return fact_rec2008(10) == fact_iter2008(10);
}

union IntOrPtr2008 {
    i: int;
    p: int*;
}

// func f2008() {
//    u1 := IntOrPtr2008{i = 42};
//    u2 := IntOrPtr2008{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2008: int;

struct Vector2008 {
    x: int;
    y: int;
}

func fact_iter2008(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2008(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2008(n-1);
    }
}

const n2008 = 1 + sizeof(p2008);

var p2008: T2008*;

struct T2008 {
    a: int[n2008];
}


func example_test2009(): int {
    return fact_rec2009(10) == fact_iter2009(10);
}

union IntOrPtr2009 {
    i: int;
    p: int*;
}

// func f2009() {
//    u1 := IntOrPtr2009{i = 42};
//    u2 := IntOrPtr2009{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2009: int;

struct Vector2009 {
    x: int;
    y: int;
}

func fact_iter2009(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2009(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2009(n-1);
    }
}

const n2009 = 1 + sizeof(p2009);

var p2009: T2009*;

struct T2009 {
    a: int[n2009];
}


func example_test2010(): int {
    return fact_rec2010(10) == fact_iter2010(10);
}

union IntOrPtr2010 {
    i: int;
    p: int*;
}

// func f2010() {
//    u1 := IntOrPtr2010{i = 42};
//    u2 := IntOrPtr2010{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2010: int;

struct Vector2010 {
    x: int;
    y: int;
}

func fact_iter2010(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2010(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2010(n-1);
    }
}

const n2010 = 1 + sizeof(p2010);

var p2010: T2010*;

struct T2010 {
    a: int[n2010];
}


func example_test2011(): int {
    return fact_rec2011(10) == fact_iter2011(10);
}

union IntOrPtr2011 {
    i: int;
    p: int*;
}

// func f2011() {
//    u1 := IntOrPtr2011{i = 42};
//    u2 := IntOrPtr2011{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2011: int;

struct Vector2011 {
    x: int;
    y: int;
}

func fact_iter2011(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2011(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2011(n-1);
    }
}

const n2011 = 1 + sizeof(p2011);

var p2011: T2011*;

struct T2011 {
    a: int[n2011];
}


func example_test2012(): int {
    return fact_rec2012(10) == fact_iter2012(10);
}

union IntOrPtr2012 {
    i: int;
    p: int*;
}

// func f2012() {
//    u1 := IntOrPtr2012{i = 42};
//    u2 := IntOrPtr2012{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2012: int;

struct Vector2012 {
    x: int;
    y: int;
}

func fact_iter2012(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2012(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2012(n-1);
    }
}

const n2012 = 1 + sizeof(p2012);

var p2012: T2012*;

struct T2012 {
    a: int[n2012];
}


func example_test2013(): int {
    return fact_rec2013(10) == fact_iter2013(10);
}

union IntOrPtr2013 {
    i: int;
    p: int*;
}

// func f2013() {
//    u1 := IntOrPtr2013{i = 42};
//    u2 := IntOrPtr2013{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2013: int;

struct Vector2013 {
    x: int;
    y: int;
}

func fact_iter2013(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2013(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2013(n-1);
    }
}

const n2013 = 1 + sizeof(p2013);

var p2013: T2013*;

struct T2013 {
    a: int[n2013];
}


func example_test2014(): int {
    return fact_rec2014(10) == fact_iter2014(10);
}

union IntOrPtr2014 {
    i: int;
    p: int*;
}

// func f2014() {
//    u1 := IntOrPtr2014{i = 42};
//    u2 := IntOrPtr2014{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2014: int;

struct Vector2014 {
    x: int;
    y: int;
}

func fact_iter2014(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2014(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2014(n-1);
    }
}

const n2014 = 1 + sizeof(p2014);

var p2014: T2014*;

struct T2014 {
    a: int[n2014];
}


func example_test2015(): int {
    return fact_rec2015(10) == fact_iter2015(10);
}

union IntOrPtr2015 {
    i: int;
    p: int*;
}

// func f2015() {
//    u1 := IntOrPtr2015{i = 42};
//    u2 := IntOrPtr2015{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2015: int;

struct Vector2015 {
    x: int;
    y: int;
}

func fact_iter2015(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2015(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2015(n-1);
    }
}

const n2015 = 1 + sizeof(p2015);

var p2015: T2015*;

struct T2015 {
    a: int[n2015];
}


func example_test2016(): int {
    return fact_rec2016(10) == fact_iter2016(10);
}

union IntOrPtr2016 {
    i: int;
    p: int*;
}

// func f2016() {
//    u1 := IntOrPtr2016{i = 42};
//    u2 := IntOrPtr2016{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2016: int;

struct Vector2016 {
    x: int;
    y: int;
}

func fact_iter2016(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2016(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2016(n-1);
    }
}

const n2016 = 1 + sizeof(p2016);

var p2016: T2016*;

struct T2016 {
    a: int[n2016];
}


func example_test2017(): int {
    return fact_rec2017(10) == fact_iter2017(10);
}

union IntOrPtr2017 {
    i: int;
    p: int*;
}

// func f2017() {
//    u1 := IntOrPtr2017{i = 42};
//    u2 := IntOrPtr2017{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2017: int;

struct Vector2017 {
    x: int;
    y: int;
}

func fact_iter2017(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2017(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2017(n-1);
    }
}

const n2017 = 1 + sizeof(p2017);

var p2017: T2017*;

struct T2017 {
    a: int[n2017];
}


func example_test2018(): int {
    return fact_rec2018(10) == fact_iter2018(10);
}

union IntOrPtr2018 {
    i: int;
    p: int*;
}

// func f2018() {
//    u1 := IntOrPtr2018{i = 42};
//    u2 := IntOrPtr2018{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2018: int;

struct Vector2018 {
    x: int;
    y: int;
}

func fact_iter2018(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2018(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2018(n-1);
    }
}

const n2018 = 1 + sizeof(p2018);

var p2018: T2018*;

struct T2018 {
    a: int[n2018];
}


func example_test2019(): int {
    return fact_rec2019(10) == fact_iter2019(10);
}

union IntOrPtr2019 {
    i: int;
    p: int*;
}

// func f2019() {
//    u1 := IntOrPtr2019{i = 42};
//    u2 := IntOrPtr2019{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2019: int;

struct Vector2019 {
    x: int;
    y: int;
}

func fact_iter2019(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2019(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2019(n-1);
    }
}

const n2019 = 1 + sizeof(p2019);

var p2019: T2019*;

struct T2019 {
    a: int[n2019];
}


func example_test2020(): int {
    return fact_rec2020(10) == fact_iter2020(10);
}

union IntOrPtr2020 {
    i: int;
    p: int*;
}

// func f2020() {
//    u1 := IntOrPtr2020{i = 42};
//    u2 := IntOrPtr2020{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2020: int;

struct Vector2020 {
    x: int;
    y: int;
}

func fact_iter2020(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2020(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2020(n-1);
    }
}

const n2020 = 1 + sizeof(p2020);

var p2020: T2020*;

struct T2020 {
    a: int[n2020];
}


func example_test2021(): int {
    return fact_rec2021(10) == fact_iter2021(10);
}

union IntOrPtr2021 {
    i: int;
    p: int*;
}

// func f2021() {
//    u1 := IntOrPtr2021{i = 42};
//    u2 := IntOrPtr2021{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2021: int;

struct Vector2021 {
    x: int;
    y: int;
}

func fact_iter2021(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2021(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2021(n-1);
    }
}

const n2021 = 1 + sizeof(p2021);

var p2021: T2021*;

struct T2021 {
    a: int[n2021];
}


func example_test2022(): int {
    return fact_rec2022(10) == fact_iter2022(10);
}

union IntOrPtr2022 {
    i: int;
    p: int*;
}

// func f2022() {
//    u1 := IntOrPtr2022{i = 42};
//    u2 := IntOrPtr2022{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2022: int;

struct Vector2022 {
    x: int;
    y: int;
}

func fact_iter2022(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2022(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2022(n-1);
    }
}

const n2022 = 1 + sizeof(p2022);

var p2022: T2022*;

struct T2022 {
    a: int[n2022];
}


func example_test2023(): int {
    return fact_rec2023(10) == fact_iter2023(10);
}

union IntOrPtr2023 {
    i: int;
    p: int*;
}

// func f2023() {
//    u1 := IntOrPtr2023{i = 42};
//    u2 := IntOrPtr2023{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2023: int;

struct Vector2023 {
    x: int;
    y: int;
}

func fact_iter2023(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2023(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2023(n-1);
    }
}

const n2023 = 1 + sizeof(p2023);

var p2023: T2023*;

struct T2023 {
    a: int[n2023];
}


func example_test2024(): int {
    return fact_rec2024(10) == fact_iter2024(10);
}

union IntOrPtr2024 {
    i: int;
    p: int*;
}

// func f2024() {
//    u1 := IntOrPtr2024{i = 42};
//    u2 := IntOrPtr2024{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2024: int;

struct Vector2024 {
    x: int;
    y: int;
}

func fact_iter2024(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2024(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2024(n-1);
    }
}

const n2024 = 1 + sizeof(p2024);

var p2024: T2024*;

struct T2024 {
    a: int[n2024];
}


func example_test2025(): int {
    return fact_rec2025(10) == fact_iter2025(10);
}

union IntOrPtr2025 {
    i: int;
    p: int*;
}

// func f2025() {
//    u1 := IntOrPtr2025{i = 42};
//    u2 := IntOrPtr2025{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2025: int;

struct Vector2025 {
    x: int;
    y: int;
}

func fact_iter2025(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2025(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2025(n-1);
    }
}

const n2025 = 1 + sizeof(p2025);

var p2025: T2025*;

struct T2025 {
    a: int[n2025];
}


func example_test2026(): int {
    return fact_rec2026(10) == fact_iter2026(10);
}

union IntOrPtr2026 {
    i: int;
    p: int*;
}

// func f2026() {
//    u1 := IntOrPtr2026{i = 42};
//    u2 := IntOrPtr2026{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2026: int;

struct Vector2026 {
    x: int;
    y: int;
}

func fact_iter2026(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2026(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2026(n-1);
    }
}

const n2026 = 1 + sizeof(p2026);

var p2026: T2026*;

struct T2026 {
    a: int[n2026];
}


func example_test2027(): int {
    return fact_rec2027(10) == fact_iter2027(10);
}

union IntOrPtr2027 {
    i: int;
    p: int*;
}

// func f2027() {
//    u1 := IntOrPtr2027{i = 42};
//    u2 := IntOrPtr2027{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2027: int;

struct Vector2027 {
    x: int;
    y: int;
}

func fact_iter2027(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2027(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2027(n-1);
    }
}

const n2027 = 1 + sizeof(p2027);

var p2027: T2027*;

struct T2027 {
    a: int[n2027];
}


func example_test2028(): int {
    return fact_rec2028(10) == fact_iter2028(10);
}

union IntOrPtr2028 {
    i: int;
    p: int*;
}

// func f2028() {
//    u1 := IntOrPtr2028{i = 42};
//    u2 := IntOrPtr2028{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2028: int;

struct Vector2028 {
    x: int;
    y: int;
}

func fact_iter2028(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2028(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2028(n-1);
    }
}

const n2028 = 1 + sizeof(p2028);

var p2028: T2028*;

struct T2028 {
    a: int[n2028];
}


func example_test2029(): int {
    return fact_rec2029(10) == fact_iter2029(10);
}

union IntOrPtr2029 {
    i: int;
    p: int*;
}

// func f2029() {
//    u1 := IntOrPtr2029{i = 42};
//    u2 := IntOrPtr2029{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2029: int;

struct Vector2029 {
    x: int;
    y: int;
}

func fact_iter2029(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2029(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2029(n-1);
    }
}

const n2029 = 1 + sizeof(p2029);

var p2029: T2029*;

struct T2029 {
    a: int[n2029];
}


func example_test2030(): int {
    return fact_rec2030(10) == fact_iter2030(10);
}

union IntOrPtr2030 {
    i: int;
    p: int*;
}

// func f2030() {
//    u1 := IntOrPtr2030{i = 42};
//    u2 := IntOrPtr2030{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2030: int;

struct Vector2030 {
    x: int;
    y: int;
}

func fact_iter2030(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2030(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2030(n-1);
    }
}

const n2030 = 1 + sizeof(p2030);

var p2030: T2030*;

struct T2030 {
    a: int[n2030];
}


func example_test2031(): int {
    return fact_rec2031(10) == fact_iter2031(10);
}

union IntOrPtr2031 {
    i: int;
    p: int*;
}

// func f2031() {
//    u1 := IntOrPtr2031{i = 42};
//    u2 := IntOrPtr2031{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2031: int;

struct Vector2031 {
    x: int;
    y: int;
}

func fact_iter2031(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2031(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2031(n-1);
    }
}

const n2031 = 1 + sizeof(p2031);

var p2031: T2031*;

struct T2031 {
    a: int[n2031];
}


func example_test2032(): int {
    return fact_rec2032(10) == fact_iter2032(10);
}

union IntOrPtr2032 {
    i: int;
    p: int*;
}

// func f2032() {
//    u1 := IntOrPtr2032{i = 42};
//    u2 := IntOrPtr2032{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2032: int;

struct Vector2032 {
    x: int;
    y: int;
}

func fact_iter2032(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2032(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2032(n-1);
    }
}

const n2032 = 1 + sizeof(p2032);

var p2032: T2032*;

struct T2032 {
    a: int[n2032];
}


func example_test2033(): int {
    return fact_rec2033(10) == fact_iter2033(10);
}

union IntOrPtr2033 {
    i: int;
    p: int*;
}

// func f2033() {
//    u1 := IntOrPtr2033{i = 42};
//    u2 := IntOrPtr2033{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2033: int;

struct Vector2033 {
    x: int;
    y: int;
}

func fact_iter2033(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2033(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2033(n-1);
    }
}

const n2033 = 1 + sizeof(p2033);

var p2033: T2033*;

struct T2033 {
    a: int[n2033];
}


func example_test2034(): int {
    return fact_rec2034(10) == fact_iter2034(10);
}

union IntOrPtr2034 {
    i: int;
    p: int*;
}

// func f2034() {
//    u1 := IntOrPtr2034{i = 42};
//    u2 := IntOrPtr2034{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2034: int;

struct Vector2034 {
    x: int;
    y: int;
}

func fact_iter2034(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2034(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2034(n-1);
    }
}

const n2034 = 1 + sizeof(p2034);

var p2034: T2034*;

struct T2034 {
    a: int[n2034];
}


func example_test2035(): int {
    return fact_rec2035(10) == fact_iter2035(10);
}

union IntOrPtr2035 {
    i: int;
    p: int*;
}

// func f2035() {
//    u1 := IntOrPtr2035{i = 42};
//    u2 := IntOrPtr2035{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2035: int;

struct Vector2035 {
    x: int;
    y: int;
}

func fact_iter2035(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2035(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2035(n-1);
    }
}

const n2035 = 1 + sizeof(p2035);

var p2035: T2035*;

struct T2035 {
    a: int[n2035];
}


func example_test2036(): int {
    return fact_rec2036(10) == fact_iter2036(10);
}

union IntOrPtr2036 {
    i: int;
    p: int*;
}

// func f2036() {
//    u1 := IntOrPtr2036{i = 42};
//    u2 := IntOrPtr2036{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2036: int;

struct Vector2036 {
    x: int;
    y: int;
}

func fact_iter2036(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2036(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2036(n-1);
    }
}

const n2036 = 1 + sizeof(p2036);

var p2036: T2036*;

struct T2036 {
    a: int[n2036];
}


func example_test2037(): int {
    return fact_rec2037(10) == fact_iter2037(10);
}

union IntOrPtr2037 {
    i: int;
    p: int*;
}

// func f2037() {
//    u1 := IntOrPtr2037{i = 42};
//    u2 := IntOrPtr2037{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2037: int;

struct Vector2037 {
    x: int;
    y: int;
}

func fact_iter2037(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2037(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2037(n-1);
    }
}

const n2037 = 1 + sizeof(p2037);

var p2037: T2037*;

struct T2037 {
    a: int[n2037];
}


func example_test2038(): int {
    return fact_rec2038(10) == fact_iter2038(10);
}

union IntOrPtr2038 {
    i: int;
    p: int*;
}

// func f2038() {
//    u1 := IntOrPtr2038{i = 42};
//    u2 := IntOrPtr2038{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2038: int;

struct Vector2038 {
    x: int;
    y: int;
}

func fact_iter2038(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2038(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2038(n-1);
    }
}

const n2038 = 1 + sizeof(p2038);

var p2038: T2038*;

struct T2038 {
    a: int[n2038];
}


func example_test2039(): int {
    return fact_rec2039(10) == fact_iter2039(10);
}

union IntOrPtr2039 {
    i: int;
    p: int*;
}

// func f2039() {
//    u1 := IntOrPtr2039{i = 42};
//    u2 := IntOrPtr2039{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2039: int;

struct Vector2039 {
    x: int;
    y: int;
}

func fact_iter2039(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2039(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2039(n-1);
    }
}

const n2039 = 1 + sizeof(p2039);

var p2039: T2039*;

struct T2039 {
    a: int[n2039];
}


func example_test2040(): int {
    return fact_rec2040(10) == fact_iter2040(10);
}

union IntOrPtr2040 {
    i: int;
    p: int*;
}

// func f2040() {
//    u1 := IntOrPtr2040{i = 42};
//    u2 := IntOrPtr2040{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2040: int;

struct Vector2040 {
    x: int;
    y: int;
}

func fact_iter2040(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2040(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2040(n-1);
    }
}

const n2040 = 1 + sizeof(p2040);

var p2040: T2040*;

struct T2040 {
    a: int[n2040];
}


func example_test2041(): int {
    return fact_rec2041(10) == fact_iter2041(10);
}

union IntOrPtr2041 {
    i: int;
    p: int*;
}

// func f2041() {
//    u1 := IntOrPtr2041{i = 42};
//    u2 := IntOrPtr2041{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2041: int;

struct Vector2041 {
    x: int;
    y: int;
}

func fact_iter2041(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2041(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2041(n-1);
    }
}

const n2041 = 1 + sizeof(p2041);

var p2041: T2041*;

struct T2041 {
    a: int[n2041];
}


func example_test2042(): int {
    return fact_rec2042(10) == fact_iter2042(10);
}

union IntOrPtr2042 {
    i: int;
    p: int*;
}

// func f2042() {
//    u1 := IntOrPtr2042{i = 42};
//    u2 := IntOrPtr2042{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2042: int;

struct Vector2042 {
    x: int;
    y: int;
}

func fact_iter2042(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2042(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2042(n-1);
    }
}

const n2042 = 1 + sizeof(p2042);

var p2042: T2042*;

struct T2042 {
    a: int[n2042];
}


func example_test2043(): int {
    return fact_rec2043(10) == fact_iter2043(10);
}

union IntOrPtr2043 {
    i: int;
    p: int*;
}

// func f2043() {
//    u1 := IntOrPtr2043{i = 42};
//    u2 := IntOrPtr2043{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2043: int;

struct Vector2043 {
    x: int;
    y: int;
}

func fact_iter2043(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2043(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2043(n-1);
    }
}

const n2043 = 1 + sizeof(p2043);

var p2043: T2043*;

struct T2043 {
    a: int[n2043];
}


func example_test2044(): int {
    return fact_rec2044(10) == fact_iter2044(10);
}

union IntOrPtr2044 {
    i: int;
    p: int*;
}

// func f2044() {
//    u1 := IntOrPtr2044{i = 42};
//    u2 := IntOrPtr2044{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2044: int;

struct Vector2044 {
    x: int;
    y: int;
}

func fact_iter2044(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2044(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2044(n-1);
    }
}

const n2044 = 1 + sizeof(p2044);

var p2044: T2044*;

struct T2044 {
    a: int[n2044];
}


func example_test2045(): int {
    return fact_rec2045(10) == fact_iter2045(10);
}

union IntOrPtr2045 {
    i: int;
    p: int*;
}

// func f2045() {
//    u1 := IntOrPtr2045{i = 42};
//    u2 := IntOrPtr2045{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2045: int;

struct Vector2045 {
    x: int;
    y: int;
}

func fact_iter2045(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2045(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2045(n-1);
    }
}

const n2045 = 1 + sizeof(p2045);

var p2045: T2045*;

struct T2045 {
    a: int[n2045];
}


func example_test2046(): int {
    return fact_rec2046(10) == fact_iter2046(10);
}

union IntOrPtr2046 {
    i: int;
    p: int*;
}

// func f2046() {
//    u1 := IntOrPtr2046{i = 42};
//    u2 := IntOrPtr2046{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2046: int;

struct Vector2046 {
    x: int;
    y: int;
}

func fact_iter2046(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2046(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2046(n-1);
    }
}

const n2046 = 1 + sizeof(p2046);

var p2046: T2046*;

struct T2046 {
    a: int[n2046];
}


func example_test2047(): int {
    return fact_rec2047(10) == fact_iter2047(10);
}

union IntOrPtr2047 {
    i: int;
    p: int*;
}

// func f2047() {
//    u1 := IntOrPtr2047{i = 42};
//    u2 := IntOrPtr2047{p = (:int*)42};
//    u1.i = 0;
//    u2.p = (:int*)0;
// }

var i2047: int;

struct Vector2047 {
    x: int;
    y: int;
}

func fact_iter2047(n: int): int {
    r := 1;
    for (i := 2; i <= n; i++) {
        r *= i;
    }
    return r;
}

func fact_rec2047(n: int): int {
    if (n == 0) {
        return 1;
    } else {
        return n * fact_rec2047(n-1);
    }
}

const n2047 = 1 + sizeof(p2047);

var p2047: T2047*;

struct T2047 {
    a: int[n2047];
}

