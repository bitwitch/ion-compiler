func test_bool(check: bool) {
	b: bool;
	b = true;
	if (b == check) {
		b = false;
	}
}

typedef int_func = func(int):int;

const WIDTH = 800;
const HEIGHT = 600;

var x: int;
var y: int = 69;
var p: int* = &x;

typedef U8 = char;


struct Stuff {
	i: int;
	f: float;
	c: char;
}

union Things {
	i: int;
	f: float;
	c: char;
}

enum Guy {
	GUY_ZERO,
	GUY_ONE,
	GUY_TWO,
	GUY_THREE,
	GUY_SEVENTEEN = 17,
	GUY_EIGHTEEN,
	GUY_NINETEEN,
}

func func1(i: int, j: float, k: char*): int {
	stuff := Stuff{ 69, 3.14, 45 };
	things: Things;
	things.f = 4.20;
	count := 0;
	if (i) {
		count = 1;
	}

	do {
		j += 0.69;
	} while(j < 3.14);

	while (i < 65536) {
		i += 1;
	}

	switch (i) {
		case 0:
			j = 1.1;
		case 1:
			j = 1.2;
		case 2, case 4, case 6:
			j = 1.69;
		case 3:
			j = 1.3;
		case 5:
			j = 1.5;
		default:
			j = 3.14;
	}

	return i + count;
}

func fib(n: int): int {
	if (n == 0) { return 0; }
	prev := 0;
	result := 1;
	for (i := 1; i < n; i++) {
		new := result + prev;
		prev = result;
		result = new;
	}
	return result;
}

const height = 600;

func main() {}
