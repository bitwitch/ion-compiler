// #foreign(include = "<stdio.h>")
// @foreign func printf(fmt: char*, ...);
import libc {printf}
#foreign(source = "noir_impl.c")

struct Int2 {
	x: int;
	y: int;
}

struct Key {
	down: bool;
	pressed: bool;
	released: bool;
}

const KEY_LSHIFT    = 256;
const KEY_RSHIFT    = 257;
const KEY_SHIFT     = 258;
const KEY_LCTRL     = 259;
const KEY_RCTRL     = 260;
const KEY_CTRL      = 261;
const KEY_LALT      = 262;
const KEY_RALT      = 263;
const KEY_ALT       = 264;
const KEY_CAPS      = 265;
const KEY_RETURN    = 266;
const KEY_SPACE     = 267;
const KEY_BACKSPACE = 268;
const KEY_ESCAPE    = 269;
const KEY_TAB       = 270;
const KEY_LEFT      = 271;
const KEY_RIGHT     = 272;
const KEY_UP        = 273;
const KEY_DOWN      = 274;

const NUM_KEYS = KEY_DOWN + 1;

struct SDL_Window;
struct SDL_Renderer;

struct Window {
	sdl_window: SDL_Window*;
	sdl_renderer: SDL_Renderer*;
}

func init(): bool;
func create_window(title: char*, pos: Int2, size: Int2): Window;
func update();
func render_clear(color: uint);
func render_present();
func destroy_window(window: Window);
func draw_rect(x: int, y: int, w: int, h: int, color: uint);

var keys: Key[NUM_KEYS];
var CENTERED = Int2{-1, -1};



// Example usage:
// func main(argc: int, argv: char**): int {
	// init();

	// window := create_window("Title", CENTERED, {800, 600});

	// while(1) {
		// update();
		// if (keys[KEY_RETURN].pressed) {
			// printf("Return pressed\n");
		// }
		// if (keys[KEY_RETURN].released) {
			// printf("Return released\n");
		// }
	// }

	// destroy_window(window);
	// return 0;
// }

